@model Silicus.Ensure.Models.DataObjects.User
@using Silicus.Ensure.Models.Constants;
@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "Roles";
}

<h2>Employee List</h2>

@if (Request.IsAuthenticated)
{
    @(Html.Kendo().Grid<Silicus.Ensure.Models.DataObjects.User>().Name("PanelGrids")
         .Columns(columns =>
              {
                  columns.Bound(p => p.FirstName).Width(50);
                  columns.Bound(p => p.LastName).Width(50);
                  columns.Bound(p => p.Role).Width(50);
                  columns.Bound(p => p.Gender).Width(50);
                  columns.Bound(p => p.Position).Width(50);
                  columns.Bound(p => p.Department).Width(50);
                  columns.Bound(p => p.Experience).Width(50);
                  columns.Bound(p => p.Email).Width(50);
                  columns.Bound(p => p.TestStatus).Width(50);
                  columns.Bound(c => c.UserId).ClientTemplate(@"<a class='k-button k-button-icontext k-grid-edit' href='" + Url.Action("PanelAdd", "Panel") + "?UserId=#=UserId#'><span class='k-icon k-edit'></span>Edit</a><a id='testSuiteDel' class='k-button k-button-icontext k-grid-delete' href='\\#' onclick='return deleteUser(#=UserId#)'><span class='k-icon k-delete'></span>Delete</a>").Width(160);
                  columns.Bound(c => c.UserId).ClientTemplate(@"
                                <a onclick=showTest('#=UserId#','#=TestStatus#')>Assign Test</a>|
                                <a  class ='dialog-window' onclick=CheckAssign('#=TestStatus#',1,'#=UserId#') >Preview Question Set</a> |
                                <a  class ='dialog-window' onclick=CheckAssign('#=TestStatus#',2,'#=UserId#') >View Submitted Test</a> |
                                <a  class ='dialog-window' onclick=ReAssign('#=UserId#','#=TestStatus#') >Reassign Test</a>").Title("Actions");
              })
            .DataSource(dataSource => dataSource
                      .Ajax()
                      .Model(model =>
                      {
                          model.Id(p => p.UserId);
                          model.Field(p => p.UserId).Editable(false);
                      })

                              .Read(read => read.Action("GetUserDetails", "User", new { RoleName = RoleName.Candidate.ToString() }))
                          .Create(update => update.Action("CreateUser", "User"))
                          .Update(update => update.Action("UpdateUser", "User"))
                          .Destroy(update => update.Action("DeleteUser", "User"))
                     )
                  .Pageable()
                  .Sortable()
                      .Resizable(resizing => resizing.Columns(true))
                 .ToolBar(toolbar =>
                    {
                        toolbar.Template(@<text>
                            <div class="toolbar">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                            <input type="text" class="form-control" id='FieldFilter' placeholder="Search for...">
                                            <span class="input-group-btn">
                                                <button class="btn btn-default" style="height:16px;" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-3 col-md-push-1" style="float: right; padding-right: 0px; margin-right: -22px;">
                                        <a href='/Panel/PanelAdd?UserId=0' class='k-button k-button-icontext k-grid-add'><span class='k-icon k-add'></span>Add Panel</a>
                                    </div>
                                </div>
                            </div>
                        </text>);
                    }))
}

<div class="modal fade" id="myModal" data-backdrop="static" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Test-Suite List</h4>
            </div>
            <div class="modal-body" id="CandidateInfo">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="Savebtn">Save</button>
            </div>
        </div>
    </div>
</div>
