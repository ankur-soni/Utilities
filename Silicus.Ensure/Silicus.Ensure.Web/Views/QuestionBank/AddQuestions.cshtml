@model Silicus.Ensure.Web.Models.QuestionModel
@using Kendo.Mvc.UI;
@using Silicus.Ensure.Models.Constants;

@{
    ViewBag.Title = "Add Questions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-content">
    @using (Html.BeginForm("AddQuestions", "QuestionBank"))
    {
        <div class="fluid mt20">
            <div class="row">
                <div class="alert alert-danger" id="errorDiv">
                    <strong>Error!</strong> <span id="errorContent">This alert box could indicate a dangerous or potentially negative action.</span>
                </div>
                <div class="col-md-4">
                    <span>Question Type:</span><span style="color:red">*</span>
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(m => m.QuestionType)
                .Name("QuestionType")
                .Value(Model.QuestionType)
                .Events(e => e.Change("QuestionTypeChange"))
                .BindTo(EnumHelper.GetSelectList(typeof(QuestionType)))
                .HtmlAttributes(new { style = "width: 100%" }))
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-4">
                    <span>Question Description:</span><span style="color:red">*</span>
                </div>
                <div class="col-md-8">
                    @Html.Kendo().EditorFor(m => m.QuestionDescription).Name("QuestionDescription").Encode(true).Value(Model.QuestionDescription)
                </div>
            </div>
            <br />

            <div id="practical">

                <div class="row">
                    <div class="col-md-4">
                        <span>Answer Type:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-8">
                        @(Html.Kendo().DropDownListFor(m => m.AnswerType)
                    .Name("AnswerType")
                    .Value(Model.AnswerType.ToString())
                    .BindTo(EnumHelper.GetSelectList(typeof(AnswerType)))
                    .HtmlAttributes(new { style = "width: 100%" }))
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-md-4">
                        <span>Multiple Answer Questions</span>
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-md-4">
                        <span>Option 1:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option1, new { @class = "form-control", Value = @Model.Option1 })
                    </div>
                </div>

                <div class="row" id="rowOpt2">
                    <div class="col-md-4">
                        <span>Option 2:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option2, new { @class = "form-control", Value = @Model.Option2 })
                    </div>
                    <div class="col-md-2">
                        @(Html.Kendo().Button().Name("btnAddOpt2").HtmlAttributes(new { type = "button", param = "2", @class = "glyphicon glyphicon-plus" }).Events(e => e.Click("OptionAdd")))
                    </div>
                </div>

                <div class="row" id="rowOpt3">
                    <div class="col-md-4">
                        <span>Option 3:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option3, new { @class = "form-control", Value = @Model.Option3 })
                    </div>
                    <div class="col-md-2">
                        @(Html.Kendo().Button().Name("btnAddOpt3").HtmlAttributes(new { type = "button", param = "3", @class = "glyphicon glyphicon-plus" }).Events(e => e.Click("OptionAdd")))
                        @(Html.Kendo().Button().Name("btnDelOpt3").HtmlAttributes(new { type = "button", param = "3", @class = "glyphicon glyphicon-minus" }).Events(e => e.Click("OptionDelete")))
                    </div>
                </div>

                <div class="row" id="rowOpt4">
                    <div class="col-md-4">
                        <span>Option 4:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option4, new { @class = "form-control", Value = @Model.Option4 })
                    </div>
                    <div class="col-md-2">
                        @(Html.Kendo().Button().Name("btnAddOpt4").HtmlAttributes(new { type = "button", param = "4", @class = "glyphicon glyphicon-plus" }).Events(e => e.Click("OptionAdd")))
                        @(Html.Kendo().Button().Name("btnDelOpt4").HtmlAttributes(new { type = "button", param = "4", @class = "glyphicon glyphicon-minus" }).Events(e => e.Click("OptionDelete")))
                    </div>
                </div>

                <div class="row" id="rowOpt5">
                    <div class="col-md-4">
                        <span>Option 5:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option5, new { @class = "form-control", Value = @Model.Option5 })
                    </div>
                    <div class="col-md-2">
                        @(Html.Kendo().Button().Name("btnAddOpt5").HtmlAttributes(new { type = "button", param = "5", @class = "glyphicon glyphicon-plus" }).Events(e => e.Click("OptionAdd")))
                        @(Html.Kendo().Button().Name("btnDelOpt5").HtmlAttributes(new { type = "button", param = "5", @class = "glyphicon glyphicon-minus" }).Events(e => e.Click("OptionDelete")))
                    </div>
                </div>

                <div class="row" id="rowOpt6">
                    <div class="col-md-4">
                        <span>Option 6:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option6, new { @class = "form-control", Value = @Model.Option6 })
                    </div>
                    <div class="col-md-2">
                        @(Html.Kendo().Button().Name("btnAddOpt6").HtmlAttributes(new { type = "button", param = "6", @class = "glyphicon glyphicon-plus" }).Events(e => e.Click("OptionAdd")))
                        @(Html.Kendo().Button().Name("btnDelOpt6").HtmlAttributes(new { type = "button", param = "6", @class = "glyphicon glyphicon-minus" }).Events(e => e.Click("OptionDelete")))
                    </div>
                </div>

                <div class="row" id="rowOpt7">
                    <div class="col-md-4">
                        <span>Option 7:</span><span style="color:red">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option7, new { @class = "form-control", Value = @Model.Option7 })
                    </div>
                    <div class="col-md-2">
                        @(Html.Kendo().Button().Name("btnAddOpt7").HtmlAttributes(new { type = "button", param = "7", @class = "glyphicon glyphicon-plus" }).Events(e => e.Click("OptionAdd")))
                        @(Html.Kendo().Button().Name("btnDelOpt7").HtmlAttributes(new { type = "button", param = "7", @class = "glyphicon glyphicon-minus" }).Events(e => e.Click("OptionDelete")))
                    </div>
                </div>

                <div class="row" id="rowOpt8">
                    <div class="col-md-4">
                        <span>Option 8:</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.Option8, new { @class = "form-control", Value = @Model.Option8 })
                    </div>
                    <div class="col-md-2">
                        @(Html.Kendo().Button().Name("btnDelOpt8").HtmlAttributes(new { type = "button", param = "8", @class = "glyphicon glyphicon-minus" }).Events(e => e.Click("OptionDelete")))
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <span>Correct Answer:</span><span style="color:red">*</span>
                    </div>

                    <div class="col-md-8">
                        @(Html.Kendo().MultiSelectFor(m => m.CorrectAnswer)
                    .Name("CorrectAnswer")
                    .Placeholder("Select correct option(s)...")
                    .BindTo(EnumHelper.GetSelectList(typeof(Options)))
                    .Value(Model.CorrectAnswer).HtmlAttributes(new { style = "width: 100%" }))
                    </div>
                </div>
            </div>


            <div class="row" id="practicalAns">
                <div class="col-md-4">
                    <span>Answer:</span>
                </div>
                <div class="col-md-8">
                    @Html.Kendo().EditorFor(m => m.Answer).Name("Answer").Encode(true).Value(Model.Answer)
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-4">
                    <span>Skill Tags:</span><span style="color:red">*</span>
                </div>

                <div class="col-md-8">
                    @(Html.Kendo().MultiSelectFor(m => m.SkillTag)
                .DataTextField("TagName")
                .DataValueField("TagId")
                .Placeholder("Select skill set...")
                .BindTo(Model.SkillTagsList)
                .Value(Model.SkillTag)
                .HtmlAttributes(new { style = "width: 100%" }))
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-4">
                    <span>Proficiency Level:</span><span style="color:red">*</span>
                </div>

                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(m => m.ProficiencyLevel)
                .Name("ProficiencyLevel")
                .Value(Model.ProficiencyLevel)
                .BindTo(EnumHelper.GetSelectList(typeof(Proficiency)))
                .HtmlAttributes(new { style = "width: 100%" }))
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-4">
                    <span>Duration (Min):</span><span id="durationRequired" style="color:red">*</span>
                </div>

                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(m => m.Duration)
                .Name("Duration")
                .DataTextField("Text")
                .DataValueField("Value")
                .Value(Model.Duration.ToString())
                .BindTo(new List<SelectListItem>() {
                    new SelectListItem(){
                    Text="1",
                    Value="1"
                    },
                    new SelectListItem(){
                    Text="2",
                    Value="2"
                    },
                    new SelectListItem(){
                    Text="3",
                    Value="3"
                    },
                    new SelectListItem(){
                    Text="5",
                    Value="5"
                    },
                    new SelectListItem(){
                    Text="10",
                    Value="10"
                    },
                    new SelectListItem(){
                    Text="15",
                    Value="15"
                    },
                    new SelectListItem(){
                    Text="20",
                    Value="20"
                    }
                    })
                .HtmlAttributes(new { style = "width: 100%" }))
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-4">
                    <span>Marks:</span><span style="color:red">*</span>
                </div>

                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(m => m.Marks)
                .Name("Marks")
                .DataTextField("Text")
                .DataValueField("Value")
                .Value(Model.Marks.ToString())
                .BindTo(new List<SelectListItem>() {
                    new SelectListItem(){
                    Text="1",
                    Value="1"
                    },
                    new SelectListItem(){
                    Text="2",
                    Value="2"
                    },
                    new SelectListItem(){
                    Text="3",
                    Value="3"
                    },
                    new SelectListItem(){
                    Text="5",
                    Value="5"
                    },
                    new SelectListItem(){
                    Text="10",
                    Value="10"
                    },
                    new SelectListItem(){
                    Text="15",
                    Value="15"
                    },
                    new SelectListItem(){
                    Text="20",
                    Value="20"
                    }
                    })
                .HtmlAttributes(new { style = "width: 100%" }))
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-6"></div>
                <div class="col-md-2 col-md-offset-4">
                    @(Html.Kendo().Button()
                .Name("btnCancel").Icon("cancel")
                .HtmlAttributes(new { type = "button" })
                .Events(e => e.Click("OnCancel"))
                .Content("Cancel"))

                    @(Html.Kendo().Button()
                .Name("btnSave").Icon("tick")
                .HtmlAttributes(new { type = "submit" })
                .Content("Save"))
                </div>
            </div>
            @Html.HiddenFor(m => m.OptionCount, new { Value = @Model.OptionCount })
            @Html.HiddenFor(m => m.CreatedOn, new { Value = @Model.CreatedOn })
            @Html.HiddenFor(m => m.CreatedBy, new { Value = @Model.CreatedBy })
            @Html.HiddenFor(m => m.Id, new { Value = @Model.Id })
            @Html.HiddenFor(m => m.Edit, new { Value = @Model.Edit })

            <script>
                $(document).ready(function () {

                    // Hide More Than 2 Options.
                    for(var i=3; i<=8; i++)
                    {
                        $("#rowOpt"+i).hide();
                    }

                    ShowRequiredOptionInCorrectAnswerDropDown();

                    $("#errorDiv").hide();
                    $("#durationRequired").hide();
                    $("#practicalAns").hide();


                    var success =@Model.Success;
                    var edit="@Model.Edit";
                    if(success==1)
                    {
                        if(edit=="True"){
                            $("#myModal").modal();
                            $("#msgContent").text("Question updated successfully.");
                        }
                        else{
                            $("#myModal").modal();
                            $("#msgContent").text("Question added successfully in the application.");
                        }
                    }
                    else
                    {
                        if(edit=="True"){
                            var optCnt=@Model.OptionCount;
                            OptionDispalyOnEdit(optCnt);
                            ShowRequiredOptionInCorrectAnswerDropDown();
                        }
                    }



                    // Check Question Type on Edit.
                    var qtype=@Model.QuestionType;
                    if (qtype == "2") {
                        $("#practical").hide();
                        $("#practicalAns").show();
                        $("#durationRequired").show();
                    }

                    // Save and Edit Activity Validation.
                    $("#btnSave")
                        .click(function() {
                            var count =0;
                            $('.otherOption').each(function(){
                                if($(this).val()==''){
                                    count++
                                }
                            });
                            var qType = $('#QuestionType').val();

                            if ($("#QuestionDescription").val().trim().length == 0) {
                                $("#QuestionDescription").focus();
                                ShowError("Question description cann't be blank.");
                                return false;
                            } else {

                                if (qType == 1) {
                                    if ($("#Option1").val().trim().length == 0) {
                                        $("#Option1").focus();
                                        ShowError("Option 1 cann't be blank.");
                                        return false;
                                    } else if ($("#Option2").val().trim().length == 0) {
                                        $("#Option2").focus();
                                        ShowError("Option 2 cann't be blank.");
                                        return false;
                                    } else if(count>0){
                                        var id;
                                        $('.otherOption').each(function(){
                                            if($(this).val()=='')
                                            {
                                                id=$(this).attr('id');
                                                return this;
                                            }
                                        });
                                        if(id=='Option3'){
                                            $("#Option3").focus();
                                            ShowError("Option 3 cann't be blank.");
                                            return false;
                                        }
                                        else if(id=='Option4'){
                                            $("#Option4").focus();
                                            ShowError("Option 4 cann't be blank.");
                                            return false;
                                        }
                                        else if(id=='Option5'){
                                            $("#Option5").focus();
                                            ShowError("Option 5 cann't be blank.");
                                            return false;
                                        }
                                        else if(id=='Option6'){
                                            $("#Option6").focus();
                                            ShowError("Option 6 cann't be blank.");
                                            return false;
                                        }
                                        else if(id=='Option7'){
                                            $("#Option7").focus();
                                            ShowError("Option 7 cann't be blank.");
                                            return false;
                                        }
                                    }
                                    else if ($("#CorrectAnswer :selected").length == 0) {
                                        $("#CorrectAnswer").focus();
                                        ShowError("Select at least 1 correct answer.");
                                        return false;
                                    } else if ($("#AnswerType").val() == "1") {
                                        var item = $("#CorrectAnswer :selected").length;
                                        if (item > 1) {
                                            $("#CorrectAnswer").focus();
                                            ShowError("Select only one option for single choice question.");
                                            return false;
                                        }
                                    }
                                }

                                if ($("#SkillTag :selected").length == 0) {
                                    $("#SkillTag").focus();
                                    ShowError("Select at least 1 skill tag.");
                                    return false;
                                }
                            }
                        });

                });

                // Show Error Animation
                function ShowError(content) {
                    $("#errorDiv").show();
                    $("#errorContent").text(content);
                    $("html, body").animate({ scrollTop: 0 }, "slow");
                    $("#errorDiv").fadeOut(10000);
                }

                // Question Type Change - > Set default values of controls.
                function QuestionTypeChange() {
                    var value = $("#QuestionType").val();
                    if (value == "2") {
                        $("#practical").hide();
                        $("#practicalAns").show();
                        $("#durationRequired").show();
                    } else {
                        $("#practical").show();
                        $("#practicalAns").hide();
                        $("#durationRequired").hide();

                    }

                    $("#Option1").val("");
                    $("#Option2").val("");
                    $("#Option3").val("");
                    $("#Option4").val("");
                    $("#Option5").val("");
                    $("#Option6").val("");
                    $("#Option7").val("");
                    $("#Option8").val("");
                    var answer = $("#Answer").data("kendoEditor");
                    answer.value("");
                    var correctAnswer = $('#CorrectAnswer').data("kendoMultiSelect");
                    correctAnswer.value([]);
                    var skillTag = $('#SkillTag').data("kendoMultiSelect");
                    skillTag.value([]);
                    var answerType = $("#AnswerType").data("kendoDropDownList");
                    answerType.value("1");
                    var proficiency = $("#ProficiencyLevel").data("kendoDropDownList");
                    proficiency.value("1");
                    var duration = $("#Duration").data("kendoDropDownList");
                    duration.value("1");
                }

                function OnCancel() {
                    window.location.href = "/QuestionBank/QuestionBank";
                }

                // On Click Of "Add" button of any Option
                function OptionAdd() {
                    var param = this.element.attr("param");
                    OptionDispaly('A', param);
                }

                // On Click Of "Delete" button of any Option
                function OptionDelete() {
                    var param = this.element.attr("param");
                    OptionDispaly('D', param);
                }

                // Display Option Method For "Add" and "Delete" button Click.
                function OptionDispaly(task, opt) {
                    var op = parseInt(opt);
                    if (task == 'A') {
                        $("#OptionCount").val(op + 1);
                        var opCnt = parseInt($("#OptionCount").val());
                        if (op == 2 || op == 7) {
                            $("#btnAddOpt" + op).hide();
                        }
                        for (var i = op; i <= op + 1; i++) {
                            $("#rowOpt" + i).show();
                            $("#Option" + opCnt).addClass('otherOption');
                            $("#btnDelOpt" + i).show();
                        }
                        if (op != 7) {
                            for (var i = op + 2; i <= 8; i++) {
                                $("#rowOpt" + i).hide();
                                $("#btnAddOpt" + op).hide();
                            }
                        }
                    } else {
                        var opCnt = parseInt($("#OptionCount").val());
                        $("#Option" + opCnt).val("");
                        $("#Option" + opCnt).removeClass('otherOption');
                        ;
                        $("#rowOpt" + opCnt).hide();
                        $("#btnAddOpt" + (opCnt - 1)).show();
                        $("#OptionCount").val(opCnt - 1);
                    }

                    ShowRequiredOptionInCorrectAnswerDropDown();
                }

                // Display Option On Edit Question
                function OptionDispalyOnEdit(opt) {
                    var op = parseInt(opt);
                    if (op > 2) {
                        $("#btnAddOpt2").hide();
                        for (var i = 3; i <= op; i++) {
                            $("#rowOpt" + i).show();
                            $("#btnDelOpt" + i).show();

                            if (i != op)
                                $("#btnAddOpt" + i).hide();
                        }
                    }
                }

                // Show Option in Correct Answer Drop Down i.e. If 3 option then 3 item in drop down list.
                function ShowRequiredOptionInCorrectAnswerDropDown() {
                    var item = $("#OptionCount").val();
                    var ans = $("#CorrectAnswer :selected").length;
                    if(ans>0)
                    {
                        var correctAnswer = $('#CorrectAnswer').data("kendoMultiSelect");
                        correctAnswer.value([]);
                    }

                    var dataOp = [];
                    for (var j = 1; j <= parseInt(item); j++) {
                        var arrItem = {};
                        arrItem["Text"] = "Option" + j;
                        arrItem["Value"] = j;

                        dataOp.push(arrItem);
                    }
                    var multiselect = $("#CorrectAnswer").data("kendoMultiSelect");
                    multiselect.setDataSource(new kendo.data.DataSource({ data: dataOp }));

                    var success =@Model.Success;
                    var edit = "@Model.Edit";

                    if (edit == "True") {
                        if (success == 0) {
                            var arr = [];

                            @if (Model.CorrectAnswer != null)
                            {
                                foreach (var stOp in Model.CorrectAnswer)
                                {
                                    @: arr.push(@stOp);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                            }
                            var correctAnswer1 = $('#CorrectAnswer').data("kendoMultiSelect");
                            correctAnswer1.value(arr);
                        }
                    }
                }

            </script>
            <style>
                .height {
                    height: 250px;
                }

                .required {
                    color: red;
                }
            </style>
        </div>
    }
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog" onclick="OnCancel();">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="OnCancel();">&times;</button>
                <h4 class="modal-title"><span id="msgMain">Success!</span></h4>
            </div>
            <div class="modal-body">
                <p id="msgContent">Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="OnCancel();">Close</button>
            </div>
        </div>

    </div>
</div>
