@model Silicus.UtilityContainer.Models.DataObjects.UtilityRole
@{
    ViewBag.Title = "AddRolesToUtility";
}



@using (Html.BeginForm())
{
    // @Html.AntiForgeryToken()
  
    <div class="form-horizontal white-bg" style="width:60%;padding-bottom:10px;margin-top:25px;padding-left:10px;padding-top:5px">
        <h2>Add Roles To Utility</h2>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UtilityID, "UtilityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UtilityId", (SelectList)ViewData["Utilities"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UtilityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleID, "RoleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoleId", (SelectList)ViewData["Roles"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="form-group" style="padding-top:20px;">
        <div class="col-md-2">
            <input type="submit" value="Create" class="btn btn-primary"  style="width:100%;" />
        </div>
        <div class="col-md-2" >
            <a href="@Url.Action("Index", "Home")" class="btn btn-primary" style="width:100%">Back</a>
        </div>
    </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
