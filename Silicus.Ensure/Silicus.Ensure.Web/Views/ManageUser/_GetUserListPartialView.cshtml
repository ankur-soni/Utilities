@model Silicus.Ensure.Models.DataObjects.User
@using Silicus.Ensure.Models.Constants;
@using Kendo.Mvc.UI;
@using System.Linq
@{
    ViewBag.Title = "Roles";
}

<h2>User Management</h2>

<div class="row" style="margin-bottom:20px">
    <div class="col-sm-3">
        <span style="float:right;    margin-top: 2px;"><b>User Role</b></span>
    </div>
    <div class="col-sm-3">
        @(Html.Kendo().DropDownListFor(m => m.Role)
                        .Name("Role")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .Events(e => e.Change("onSelect"))
                        .BindTo(EnumHelper.GetSelectList((typeof(RoleName)))
                        .Select(x => new SelectListItem { Text = x.Text, Value = x.Text }).OrderBy(x => x.Text))
                        .HtmlAttributes(new { style = "width: 100%" })
                        .OptionLabel("All")
        )
    </div>
</div>
@if (Request.IsAuthenticated)
{
    @(Html.Kendo().Grid<Silicus.Ensure.Web.Models.UserDetailViewModel>().Name("UserGrids")
         .Columns(columns =>
              {
                  columns.Bound(c => c.FullName).Title("Name").Width(200);
                  columns.Bound(p => p.RoleName).Width(50);
                  columns.Bound(p => p.Email).Width(50);
                  columns.Bound(c => c.RoleId).Title("Action").Width(160).ClientTemplate(" <div align=center> #if(RoleName == 'Recruiter'){#<input type='button' onclick='assignType(event)' value='Assign Type'>#}else if(RoleName == 'Panel') { #<input type='button' onclick='assignPanel(event)' value='Assign Panel'># }else if(RoleName == 'Candidate') { #<input type='button' value='z'># } #");
              })
            .DataSource(dataSource => dataSource.Ajax().Model(model =>
                                                              {
                                                                  model.Id(p => p.Email);
                                                                  model.Field(p => p.Email).Editable(false);
                                                              })

                                                                      .Read(read => read.Action("GetUserDetails", "User")).ServerOperation(false)
                                                              //.Create(update => update.Action("CreateUser", "User"))
                                                              //.Update(update => update.Action("UpdateUser", "User"))
                                                              //.Destroy(update => update.Action("DeleteUser", "User"))
                                                              .PageSize(10))

            .Pageable(pager => { pager.PageSizes(true); })
            .Sortable()
            .Resizable(resizing => resizing.Columns(true))
            .ToolBar(toolbar =>
            {
                toolbar.Template(@<text>
                    <div class="toolbar">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                    <input type="text" class="form-control" id='FieldFilter' placeholder="Search...">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" style="height:16px;" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3 col-md-push-1" style="float: right; padding-right: 0px; margin-right: -22px;">
                                @*<a href='/ManageUser/AddUser?UserId=0' class='k-button k-button-icontext k-grid-add'><span class='k-icon k-add'></span>Add user</a>*@
                            </div>
                        </div>
                    </div>
                </text>);
            }))
}


<script>
    $(".k-grid-header .k-link").click(function (e) {
        e.preventDefault();
        if ($(this).text() === 'Action') {
            e.stopPropagation();
        }
    });

    function assignPanel(e)
    {
        var grid = $("#UserGrids").data("kendoGrid");
        var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
        $("#AssignPanelModal").modal('show');
    }

    function assignType() {
        var grid = $("#UserGrids").data("kendoGrid");
        var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
        $("#AssignTypeModal").modal('show');
    }

    function onSelect() {
        var dataItem = this.dataItem();
        var value = dataItem['Text'];
        grid = $("#UserGrids").data("kendoGrid");
        if (value == "All") {
            grid.dataSource.filter([]);
        }
        else {
            grid.dataSource.filter({ field: "RoleName", operator: "eq", value: value });
        }
    }
    $(document).ready(function () {
        $("#FieldFilter").keyup(function () {
            var value = $("#FieldFilter").val();
            grid = $("#UserGrids").data("kendoGrid");
            if (value.length >= 1) {
                if (value) {
                    var filter = { logic: "or", filters: [] };
                    filter.filters.push({ field: "RoleName", operator: "contains", value: value });
                    filter.filters.push({ field: "Email", operator: "contains", value: value });
                    filter.filters.push({ field: "FullName", operator: "contains", value: value });
                    grid.dataSource.query({ filter: filter });
                } else {
                    grid.dataSource.filter({});
                }
            }
            else if (value == "")
                grid.dataSource.filter({});
        });
    });
    function AddNew() {
        window.location.href = "/Admin/CandidateAdd?UserId=0";
        return false;
    }

    function deleteUser(userId) {
        $.when(showConfirmationWindow('Are you sure, do you want to delete this record?', 'Delete')).then(function (confirmed) {
            if (confirmed) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteUser", "User")',
                    data: { UserId: userId },
                    success: function (returndata) {
                        if (returndata == 1) {
                            $('#UserGrids').data('kendoGrid').dataSource.read();
                            $('#userGrids').data('kendoGrid').refresh();
                            ShowMessage("User deleted successfully.", 1);
                        }
                        else {
                            ShowMessage("Error occured while delete operation.", 0);
                        }
                    }
                });
            }
        });
    }

</script>


<!-- Modal -->
<div id="AssignPanelModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Assign Panel</h4>
            </div>
            <div class="modal-body">
                <p>Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div id="AssignTypeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Assign Panel</h4>
            </div>
            <div class="modal-body">
                <p>Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>