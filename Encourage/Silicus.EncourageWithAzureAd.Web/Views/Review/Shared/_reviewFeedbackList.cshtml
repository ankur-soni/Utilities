@model IEnumerable<Silicus.EncourageWithAzureAd.Web.Models.ReviewFeedbackListViewModel>
@using System.Drawing;
@using Silicus.EncourageWithAzureAd.Web.Enums;



<div>
    @foreach (var item in Model)
    {
        <div class="el-element-overlay m-b-40">
            <div class="col-lg-2 col-md-3 col-sm-4 col-xs-12">
                <div class="blue-box">
                    <div class="el-card-item">
                        <div class="el-card-avatar el-overlay-1">
                            <img src="~/Images/1.jpg" />
                            <div class="el-overlay">
                                <ul class="el-info">
                                    <li>
                                        @if (item.IsShortlisted)
                                        {
                                            <span><i class="fa fa-star fa-2x" title="Shortlisted" aria-hidden="true"></i></span>
                                        }
                                        else if (item.IsWinner)
                                        {
                                            <span><i class="fa fa-trophy fa-2x" title="Winner" aria-hidden="true"></i></span>
                                        }
                                        <a class="btn default btn-outline image-popup-vertical-fit" href="@Url.Action("ViewNominationForShortlist", "Review", item)">
                                            <span> <i class="fa fa-file-text-o fa-2x" title="View Nomination" aria-hidden="true"></i> </span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="el-card-content">
                            <h3 class="box-title">@Html.DisplayFor(modelItem => item.DisplayName)</h3>
                            <small>
                               @Html.DisplayFor(modelItem => item.AwardName)
                            @if (item.AwardFrequencyCode == FrequencyCode.YEAR.ToString())
                            {
                                var nominationYear = Convert.ToInt32(item.NominationTime.Substring(item.NominationTime.LastIndexOf('-') + 1)) - 1;
                                @Html.Label("-" + Convert.ToInt32(nominationYear))

                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.NominationTime)
                            }

                            </small><br>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="col-sm-12">
                                    @*<table class="table-responsive" style="border: 1px solid rgba(178, 176, 176, 0.96);margin-top:2%;width:100%;color:#fff;">
                                        <tr>
                                            <th style="color:#fff;">Credits</th>
                                            <th style="color:#fff;">Reviews</th>
                                            <th style="color:#fff;">Average</th>
                                        </tr>
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.Credits)</td>
                                            <td>@Html.DisplayFor(modelItem => item.NumberOfReviews)</td>
                                            <td>@Html.DisplayFor(modelItem => item.AverageCredits)</td>
                                        </tr>
                                    </table>*@
                                </div>
                            </div>
                        </div>
                       
                    </div>
                </div>
            </div>
        </div>
    }
</div>