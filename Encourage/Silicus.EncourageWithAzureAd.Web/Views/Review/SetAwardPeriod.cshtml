@model Silicus.EncourageWithAzureAd.Web.Models.CustomdateViewmodel

<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
    <div class="col-lg-11 col-md-11 col-sm-11">
        <h1 class="header-name">Set Award Period</h1>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="box M-T15 M-B60">
            <div class="f1">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Awards, htmlAttributes: new { @class = "col-md-2 col-sm-3" })
                        <div class="col-md-3 col-sm-4">
                            @Html.DropDownListFor(model => model.Awards, new SelectList(Model.Awards, "Id", "Name"), "Select", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Awards, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Years, htmlAttributes: new { @class = "col-md-2 col-sm-3" })
                        <div class="col-md-3 col-sm-4">
                            @Html.DropDownListFor(model => model.Years, new SelectList(Model.Years), "Select", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Years, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Months, htmlAttributes: new { @class = "col-md-2 col-sm-3" })
                        <div class="col-md-3 col-sm-4">
                        @Html.DropDownListFor(model => model.Months, new SelectList(Model.Months).Select(m => new SelectListItem
                       {
                           Value = m.Text,
                           Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(Convert.ToInt32(m.Text)),
                       })
           , "Select", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MonthToSubtract, "Months To Subtract", htmlAttributes: new { @class = "col-md-2 col-sm-3" })
                        <div class="col-md-3 col-sm-4">
                            @Html.TextBoxFor(model => model.MonthToSubtract, "", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 col-sm-3">
                            <div class="checkbox checkbox-success">
                                @*@Html.LabelFor(model => model.IsApplicable, "Apply", htmlAttributes: new { @class = "col-md-2" })*@

                                @*@Html.CheckBoxFor(model => model.IsApplicable)*@
                                <input id="checkbox1" name="IsApplicable" type="checkbox">
                                <label for="checkbox1" name="IsApplicable">Apply</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="pull-right">
                            <input type="button" value="Set Custom" class="btn btn-primary" id="set-custom-date" />
                            <input type="button" value="Set Default" class="btn btn-primary" id="reset-custom-date" />
                            <input type="button" value="Clear Data" class="btn btn-primary" id="clearCustomDateForm" onclick="clearWholeAwardForm(true)" />
                            <input type="button" value="Cancel" class="btn btn-primary" id="cancel-custom-date" onclick="location.href='@Url.Action("Index","Home")'" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $("#Years").attr("disabled", "disabled");
    $("#Months").attr("disabled", "disabled");

    var MON = '@Silicus.EncourageWithAzureAd.Web.Enums.FrequencyCode.MON.ToString()';
    var YEAR = '@Silicus.EncourageWithAzureAd.Web.Enums.FrequencyCode.YEAR.ToString()';

    $("#Awards").change(function () {
        $("#Months").val("");
        $("#Years").val("");
        var awardId = +$("#Awards").val();
        if (awardId != 0) {
            var selectedAwardFrequency = getSelectedAwardFrequency(awardId);
            if (selectedAwardFrequency == MON) {
                $("#Years").attr("disabled", false);
            }
            else if (selectedAwardFrequency == YEAR) {
                $("#Years").attr("disabled", false);
                $("#Months").attr("disabled", "disabled");
            }

            showCustomLoader();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCustomDateDetailsForAward", "Review")',
                data: { awardId: awardId },
                success: function (customDate) {
                    hideCustomLoader();
                    if (selectedAwardFrequency == MON) {
                        $("#Months").attr("disabled", false);
                    }
                    $("#Months").val(customDate.Month);
                    $("#Years").val(customDate.Year);
                    $("#checkbox1").prop('checked', customDate.IsApplicable);
                    $("#MonthToSubtract").val(customDate.MonthsToSubtract);
                },
                error: function (error) {
                    swal("Error", "Oops something went wrong!", "error");
                    hideCustomLoader();
                    console.log(error);
                }
            });
        } else {
            hideCustomLoader();
            clearWholeAwardForm(false);
        }
    });

    function clearWholeAwardForm(clearAward) {
        if (clearAward) {
            $("#Awards").val("");
        }
        $("#Months").val("");
        $("#Years").val("");
        $("#MonthToSubtract").val(0);
        $("#checkbox1").prop('checked', false);
        $("#Years").attr("disabled", true);
        $("#Months").attr("disabled", "disabled");
    }

    $("#set-custom-date").click(function () {
        debugger;
        var awardId = parseInt($("#Awards").val());

        if (awardId > 0) {
            var month = parseInt($("#Months").val());
            var year = parseInt($("#Years").val());
            var selectedAwardFrequency = getSelectedAwardFrequency(awardId);
            if (selectedAwardFrequency == MON) {
                if (!month > 0 || !year > 0) {
                    swal("Error", "Please select month and year.", "error");
                }
                else {
                    setCustomDate(awardId, month, year);
                }
            }
            else if (selectedAwardFrequency == YEAR) {
                if (!year > 0) {
                    swal("Error", "Please select year");
                }
                else {
                    setCustomDate(awardId, 0, year);
                }
            }

        }
        else {
            swal("Error", "Please select award.", "error");
        }


    });

    function setCustomDate(awardId, month, year) {
        debugger;
        var isApplicable = $("#checkbox1").is(":checked");
        var monthToSubtract = parseInt($("#MonthToSubtract").val());
        showCustomLoader();
        $.ajax({
            type: "POST",
            data: { awardId: awardId, month: month, year: year, monthToSubtract: monthToSubtract, isApplicable: isApplicable },
            url: "@Url.Action("SetAwardPeriod","Review")",
            success: function (status) {
                hideCustomLoader();
                if (status) {
                    swal("Success", "Award period set successfuly.", "success");
                }
                else {
                    swal("Error", "Award period not set successfuly.", "error");

                }
            },
            error: function (status) {
                hideCustomLoader();
                swal("Error", "Oops something went wrong!", "error");
            }
        });
    }


    $("#Years").change(function () {
        debugger;
        var awardId = parseInt($("#Awards").val());
        var selectedAwardFrequency = getSelectedAwardFrequency(awardId);
        if (selectedAwardFrequency == MON) {
            $("#Months").val("");
            var selectedYear = parseInt($("#Years").val());
            if (selectedYear > 0) {
                $("#Months").attr("disabled", false);
                var selectedYear = parseInt($("#Years").val());
                var currentDate = new Date();
                if (currentDate.getFullYear() == selectedYear) {
                    $("#Months option").each(function () {
                        var data = $(this).val();
                        if (parseInt($(this).val()) > currentDate.getMonth() + 1) {
                            $(this).attr("disabled", "disabled");
                        }
                    });
                }
            }
            else {
                $("#Months").attr("disabled", true);
            }
        }

    });


    function getSelectedAwardFrequency(awardId) {
        var status;
        showCustomLoader();
        $.ajax({
            type: "GET",
            data: { awardId: awardId },
            url: "@Url.Action("GetAwardFrequency","Review")",
            async: false,
            success: function (frequency) {
                hideCustomLoader();
                status = frequency;
            },
            error: function () {
                hideCustomLoader();
                swal("Error", "Oops something went wrong!", "error");
            }
        });
        return status;
    }

    $("#reset-custom-date").click(function () {
        var awardId = $("#Awards").val();
        if (awardId > 0) {
            showCustomLoader();
            $.ajax({
                type: 'GET',
                data: { awardId: awardId },
                url: "@Url.Action("ResetAwardPeriod","Review")",
                success: function (status) {
                    hideCustomLoader();
                    if (status) {
                        swal("Success", "Award period reset successfuly.", "success");
                    }
                    else {
                        swal("Error", "Award period not reset successfuly.", "error");

                    }
                }
            , error: function () {
                hideCustomLoader();
                swal("Error", "Oops something went wrong!", "error");
            }
            });
        }
        else {
            swal("Error", "Please select award.", "error");
        }

    });

</script>