@model List<Silicus.Ensure.Web.Models.UserViewModel>

@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "Candidate List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .syncLog{float: left;margin-left: 15px;}
    .textArea{width:100%;height:100px;resize:none;}
    .btn-primary, btn-primary:hover, btn-primary:active, btn-primary:focus {
        color: #fff;
        background-color: #36c6d3 !important;
        border-color: #36c6d3 !important;
    }
    .p20{padding: 20px 20px 20px 20px;}
    .logo-text{
        font-size:49px;
        font-weight:600;
    }
</style>
<div class="row">
    <div class="col-sm-12">
        <h1 class="page-title">
            Candidate List
        </h1>

        <div class="pull-right">
            <button type="button" class="btn btn-default" onclick="TestResult()">Sync With JobVite</button>
        </div>
    </div>
</div>

<div id="Details"></div>
<div class="row">
    <div class="col-sm-12">
        @(Html.Kendo().Grid<Silicus.Ensure.Web.Models.UserViewModel>
    (Model).Name("CandidateGrid")
    .Columns(columns =>
    {
        //columns.Bound(o => o).ClientTemplate("<input type='checkbox' class='EmployeeSelection' Id='#=UserId#' / />").Filterable(false).Sortable(false).Title("<input type='checkbox' id='chkselectallEmployeeRecord'  / />").Groupable(false).IncludeInMenu(false).Width(50);        
        columns.Bound(p => p.UserId).Hidden(true);
        columns.Bound(c => c.FirstName).Title("First Name");
        columns.Bound(p => p.LastName).Title("Last Name");
        columns.Bound(c => c.Email).Title("Email");
        columns.Bound(p => p.CandidateStatus);
        columns.Bound(p => p.JobViteId);
        columns.Bound(p => p.Position);
        columns.Command(cmd =>
        {
            cmd.Custom("Test Details").Click("TestDetail");
        });

    })
    .DataSource(dataSource => dataSource.Ajax().Model(model =>
    {
        model.Id(p => p.Email);
        model.Field(p => p.Email).Editable(false);

    }).ServerOperation(false)
      .Read(read => read.Action("GetSystemCandidates", "JobVite"))
    //.Create(update => update.Action("CreateUser", "User"))
    //.Update(update => update.Action("UpdateUser", "User"))
    //.Destroy(update => update.Action("DeleteUser", "User"))
    .PageSize(100))

    .Pageable(pager => { pager.PageSizes(false); })
    .Sortable()
    .HtmlAttributes(new { style = "height: 70vh;" })
    .Scrollable(scrollable => scrollable.Virtual(true))
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Resizable(resizing => resizing.Columns(true))
        )

    </div>
</div>


<div id="AssignTest" class="modal fade" data-backdrop="static" role="dialog" tabindex="-1" data-width="550" aria-hidden="false" style="display: block; width: 760px; margin-left: -380px; margin-top: -288.5px;">
    
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">Assign Test</h4>
        </div>
        <div class="modal-body popUp-modalbody" id="AssignTestBody">
           

        </div>
        
   
</div>

<div id="syncDialog" class="modal fade" data-backdrop="static" role="dialog" tabindex="-1" data-width="550" aria-hidden="false" style="display: block; width: 760px; margin-left: -380px; margin-top: -288.5px;">
    <form action="" method="post">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">Sync Dialog</h4>
        </div>
        <div class="modal-body popUp-modalbody">
            <div id="ensureTojobvite" class="row M-B20">
                <div class="col-sm-12">
                    <div class="col-sm-5">
                        <div class="p20">
                            <span class="logo-text">Jobvite</span>

                        </div>
                    </div>

                    <div class="col-sm-1">
                        <div class="">
                            <a href="#" type="button" class="btn btn-primary" style="margin-top: 40px;cursor:default;"><i class="fa fa-angle-double-left fa-2x" style="padding:5px;" aria-hidden="true"></i></a>
                        </div>
                    </div>

                    <div class="col-sm-5">
                        <div class="p20">
                            <span class="logo-text">Ensure</span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="pull-right">
                        <button type="button" style="width:70px;" class="btn green" id="btnJobViteSync">Sync</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <label class="syncLog">Sync Log:</label>
            <div class="col-sm-12">
                <textarea class="textArea" id="syncLog" rows="10"></textarea>
            </div>
        </div>

    </form>
</div>


<script>
    $(document).ready(function () {
        var title = $('.page-title').text();
        $('#CurrentPageTitle').text(title);

        SelectedMenu('#candidate-assignTest');
        $("#candidate-submenu").css("display", "block");
        $("#candidate-link a span.arrow").addClass("open");

        $("#btnJobViteSync").on("click", function () {           
            $.ajax({
                url: '/JobVite/SyncCandidates',
                //data: { QuestionId: questionId, NextQuestionId: nextQuestionId, Status: status, TechnologyId: technologyId, questionStatusType: questionStatusType },
                success: function (data) {
                    $("#syncLog").text(data);
                    $("#CandidateGrid").data("kendoGrid").dataSource.read();

                }
            });
        });
        
    });

    function TestDetail(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var urllink = "/JobVite/AssignTest/?UserId=" + dataItem.UserId + "";
        $.ajax({
            url: urllink,
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            // data: JSON.stringify({ time: time, EmployeeTestSuiteId: EmployeeTestSuiteId }),
            success: function (data) {
                $("#AssignTestBody").html(data);
                $('#AssignTest').modal('show');
            },
            error: function () {
            }
        });

      

    }
    function TestResult(e) {
        $('#syncDialog').modal('show');

    };
    function OnSuccess() {        
        $('#AssignTest').modal("hide");       
        $("#CandidateGrid").data("kendoGrid").dataSource.read();
        toastr.success('Successfully Assigned the Test to the Candidate.');
        $("#AssignTestBody").html("");
    }
</script>

