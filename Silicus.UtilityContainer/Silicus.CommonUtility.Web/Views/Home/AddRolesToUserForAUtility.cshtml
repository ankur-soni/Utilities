@model Silicus.UtilityContainer.Models.DataObjects.UtilityUserRoles
@{
    ViewBag.Title = "AddRolesToUserForAUtility";
}


<div class="row" style="margin-left:20%;margin-top:10%">
    <div class="col-md-8" style="background-color:#57A6B7">
        <h2>Add Role To User For Utility</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.UtilityId, "Utility", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.UtilityId, (SelectList)ViewData["Utilities"],"Select", new { id = "utilityList" })
                        @Html.ValidationMessageFor(model => model.UtilityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RoleId, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.RoleId, new SelectList(Enumerable.Empty<SelectListItem>(), "ID", "RoleName"),"Select a Role", new { id = "rolesList" }) 
                            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, "User", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.UserId, (SelectList)ViewData["User"], "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

               
               

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add Role" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to Dashboard", "Index", "Home", new { @style = "color:#000aaa;" })
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
                    $(document).ready(function () {
                        $("#utilityList").change(function () {
                            var uID = $(this).val();
                            $.getJSON("../Home/FillRoles", { utilityId: uID },
                                   function (data) {
                                       var select = $("#rolesList");
                                       select.empty();
                                       select.append($('<option/>', {
                                           value: 0,
                                           text: "Select a Role"
                                       }));
                                       $.each(data, function (index, itemData) {
                                           select.append($('<option/>', {
                                               value: itemData.Value,
                                               text: itemData.Text
                                           }));
                                       });
                                   });
                        });
                    });
</script>

}




