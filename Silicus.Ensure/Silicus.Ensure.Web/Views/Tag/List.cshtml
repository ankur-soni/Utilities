@using Kendo.Mvc.UI;
<div class="kendogrid">
    @*<h2>Tags</h2>*@
    <div>
        @if (Request.IsAuthenticated)
        {
            @(Html.Kendo().Grid<Silicus.Ensure.Models.DataObjects.Tags>().Name("tagsGrids")
                    .Events(e => e.Edit("gvTag_onRowEdit"))
             .Columns(columns =>
                  {
                      columns.Bound(p => p.TagName).Width(100);
                      columns.Bound(p => p.Description);
                      columns.Command(cmd =>
                      {
                          //command.Edit();
                          //cmd.Edit('').Text('.');//.HtmlAttributes(new { @style = "display:none" });
                          cmd.Custom("Edit").Text("<span class='k-icon k-edit'></span>Edit").Click("ConfirmEditRow").HtmlAttributes(new { @class = "k-button k-button-icontext k-grid-delete" });
                      }).Title("Actions");
                  })
            .DataSource(dataSource => dataSource
                      .Ajax()
                      .Model(model =>
                      {
                          model.Id(p => p.TagId);
                          model.Field(p => p.TagId).Editable(false);
                      })
                      .Read(read => read.Action("GetTagsDetails", "Tag"))
                      .Create(update => update.Action("Save", "Tag"))
                      .Events(events => events.Error("error_handler").RequestEnd("requestend_handler"))
                      .Update(up => up.Action("Update", "Tag"))
                      .PageSize(10)
                  )
                           .Pageable(pager => { pager.PageSizes(true); })
                  .Sortable()
                //.HtmlAttributes(new { style = "height:400px;" })
                  .Editable(ed => ed.Mode(GridEditMode.PopUp).TemplateName("TagEditorTemplate"))
                  .ToolBar(toolbar =>
                {
                    toolbar.Template(@<text>

                        <div class="toolbar">
                            <div class="row">
                                <div class="col-sm-12 M-B15">
                                    <div class="col-sm-5 col-md-4 col-lg-3 M-T15">
                                        <div class="input-group">
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                            <input type="text" class="form-control" id='FieldFilter' placeholder="Search">
                                            <span class="input-group-btn">
                                                <button id="tagSearch" class="btn btn-default" type="button" style="height:20px!important;border:1px solid #0070B9!important"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                            </span>
                                        </div>


                                    </div>
                                    <a style="margin-top:20px;" href='/#' class='k-button k-button-icontext k-grid-add'><span class='k-icon k-add'></span>Add Tag</a>

                                </div>
                            </div>

                        </div>
                    </text>);
                })
            )
        }
    </div>
</div>

<script>
    $(document).ready(function () {

        $("#messageDiv").hide();

        $("#FieldFilter").keyup(function () {

            var value = $("#FieldFilter").val();
            grid = $("#tagsGrids").data("kendoGrid");
            var pageSize = grid.dataSource.pageSize();
            if (value.length > 0) {
                if (value) {
                    var filter = { logic: "or", filters: [] };
                    filter.filters.push({ field: "TagName", operator: "contains", value: value });
                    filter.filters.push({ field: "Description", operator: "contains", value: value });
                    grid.dataSource.query({ filter: filter });
                    grid.dataSource.sort({ field: "TagName", dir: "asc" });
                    grid.dataSource.pageSize(pageSize);
                } else {
                    grid.dataSource.filter({});
                }
            }
            else if (value == "")
                grid.dataSource.filter({});
        });
        //Show successful message
        if ('@TempData["IsNewTag"]' == "1") {
            ShowMessage("Tag saved successfully.", 1);
        }
    });

    $("#tagSearch").click(function (e) {
        e.preventDefault();
        var datasource = $("#tagsGrids").data("kendoGrid").dataSource;
        //Clear filters:
        datasource.filter([]);
        $("#FieldFilter").val('');
    });


    function gvTag_onRowEdit(e) {
        //tagAssociatedWithQuetion(e.model.TagName);
        //showConfirmationWindow('Are you sure, do you want to delete this record?', 'Delete');
        e.sender.editable.validatable._errorTemplate = kendo.template($('#tooltip-template').html());
        if (e.model.isNew()) {
            $(".k-window-title").html("Add New Tag");
            $("#existingTagName").val('');
            $(".k-grid-update").html('<span><i class="fa fa-save"></i> Save </span>');
        }
        else {
            $(".k-window-title").html("Edit Tag");
            //$("#TagName").attr('disabled', true);
            $("#existingTagName").val(e.model.TagName);
        }
        $(".k-grid-update , .k-grid-cancel").addClass('btn primary-bt');
    }

    function requestend_handler(e) {
        if (e.type == "destroy" && !e.response.Errors) {
            //toastr.success("Auto Pays details has been deleted successfully!");
            ShowMessage("Tag deleted successfully.", 1);
            RefreshKendoGrid('tagsGrids');
        }

        if (e.type == "update" && !e.response.Errors) {
            //toastr.success("Auto Pays details has been saved successfully!");
            ShowMessage("Tag updated successfully.", 1);
            RefreshKendoGrid('tagsGrids');
        }

        if (e.type == "create" && !e.response.Errors) {
            ShowMessage("Tag created successfully.", 1);
            RefreshKendoGrid('tagsGrids');
        }

    }

    function error_handler(e) {
        ShowMessage(getErrorMessage(e, 0));
    }

    function TagPerPageChange() {
        var value = $("#TagPerPage").val();
        var grid = $("#tagsGrids").data("kendoGrid");
        grid.dataSource.pageSize(value);
        grid.refresh();
    }

    function tagAssociatedWithQuetion(tagName) {
        $.ajax({
            type: "POST",
            url: '/Tag/IsTagAssosiatedWithQuetion',
            data: { tagName: tagName },
            success: function (returndata) {
                $("#confirmEdit").modal('show');
            }
        });
    }

    function ConfirmEditRow(e) {
        var tr = $(e.target).closest("tr"); //get the row for deletion
        var data = this.dataItem(tr);
        var grid = this;
        var tagName = data.TagName;
        $.ajax({
            type: "POST",
            url: '/Tag/IsTagAssosiatedWithQuetion',
            data: { tagName: tagName },
            success: function (returndata) {
                if (returndata == true) {
                    $.when(showConfirmationWindow('This tag is already associated with a question. Are you sure you want to edit this?', 'Edit')).then(function (confirmed) {
                        if (confirmed) {
                            // $(tr).find('.k-grid-edit').trigger('click');
                            grid.editRow(tr);
                        }
                    });
                }
                else {
                    grid.editRow(tr);
                }
            }
        });
    }

    function isTagNameAvailable(existingName, updatedName) {
        var isAvailable = true;
        if (existingName != updatedName) {
            $.ajax({
                type: "POST",
                url: '/Tag/IsDuplicateTagName',
                async: false,
                data: { existingTagName: existingName, tagName: updatedName },
                success: function (returndata) {
                    if (returndata == true) {
                        isAvailable = true;
                    }
                    else {
                        isAvailable = false;
                    }
                }
            });
        }
        return isAvailable;
    }

    (function ($, kendo) {
        $.extend(true, kendo.ui.validator, {
            rules: { // custom rules
                tagNamevalidation: function (input, params) {
                    if (input.is("[name='TagName']") && input.val() != "") {
                        input.attr("data-tagNamevalidation-msg", "Tag name already exist !");
                        return isTagNameAvailable($("#existingTagName").val(), input.val());
                        //return /^[A-Z]/.test(input.val());
                    }

                    return true;
                }
            },
            messages: { //custom rules messages
                tagName: function (input) {
                    // return the message text
                    return input.attr("data-val-tagNamevalidation");
                }
            }
        });
    })(jQuery, kendo);

</script>
<script id="tooltip-template" type="text/x-kendo-template">
    <span class="k-widget k-tooltip k-tooltip-validation k-invalid-msg"> <span class="k-icon k-warning"> </span>#=message#</span>
</script>


