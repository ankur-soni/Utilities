@model IEnumerable<Silicus.Encourage.Web.Models.NominationListViewModel>
@using System.Drawing;
@{
    ViewBag.Title = "ReviewNominations";
}

<style>
    hr {
        background-color: black;
        height: 1px;
        border: 0;
        padding-left: 0px;
    }
</style>
<div class="row border-bottom">
    <nav class="navbar  " role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
</div>
<div class="row wrapper border-bottom white-bg page-heading border-bottom">
    <div class="col-sm-12">
        <h1>Nominated Employees</h1>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        @foreach (var item in Model)
        {
            var borderColor = string.Empty;
            if (item.IsSubmitted == true)
            {
              borderColor   = "Green";  
            }
            else
            {
                borderColor = "Red";     
            }
            
            Random randomGen = new Random();
            KnownColor[] names = (KnownColor[])Enum.GetValues(typeof(KnownColor));
            KnownColor randomColorName = names[randomGen.Next(names.Length)];
            Color randomColor = Color.FromKnownColor(randomColorName);

            <div style="Margin-right:10px;Margin-bottom:10px; border:solid;border-color:@borderColor" class="col-md-3">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        @*<div style="background-color:@randomColor.Name;height:60px;margin-top:10px;padding-left:10px;padding-bottom:70px; font-weight:bold;font-size:50px;text-align:left" class="col-md-5">
                            @Html.DisplayFor(modelItem => item.Intials)
                        </div>*@
                        <div>
                            <div>
                                @Html.DisplayFor(modelItem => item.DisplayName)
                            </div>
                            <div>
                                @Html.DisplayFor(modelItem => item.AwardName)

                                @Html.DisplayFor(modelItem => item.NominationTime)
                            </div>
                        </div>

                    </div>
                    <div class="ibox-footer text-left">
                        @if (item.IsSubmitted == false)
                    {
                            <div>
                                @Html.ActionLink("Edit", "EditSavedNomination", "Nomination", new { nominationId = item.Id }, null)
                            </div>
                    }
                    else
                    {
                            <div>
                                @Html.ActionLink("Details", "EditSavedNomination", "Nomination", new { nominationId = item.Id }, null)
                            </div>
                    }
                        </div>
                    </div>
            </div>

        }

    </div>
</div>
