@model Silicus.EncourageWithAzureAd.Web.Models.EmailTemplateEditorViewModel



<div class="row M-T15">
    <div class="col-sm-12">
        <div class="form-group">
            @Html.Label("Send Mail To", new { @class = "control-label", @style= "position: absolute;margin-top:18px;" })
            <a id="clearSelectedUsers" class="pull-right btn btn-primary M-B10">Clear</a>
            @Html.DropDownListFor(m => m.Users, new SelectList(Model.Users, "Email", "Name"), "Select", new { multiple = "multiple", @class = "form-control" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
       
        @Html.Label("Template", new { @class = "control-label" })
        <div id="emailTemplateEditor">
            @Html.TextAreaFor(m => m.EmailTemplate, new { @class = "summernote" })
        </div>
    </div>
</div>

<div class="pull-right">
    <input type="button" name="saveTemplate" value="Save Template" id="saveTemplateMailButton" class="btn btn-primary" disabled="disabled" />
    <input type="button" name="send" value="Send" id="sendMailButton" class="btn btn-primary" disabled="disabled" />
    <button type="button" class="btn btn-primary" id="cancel" onclick="location.href='@Url.Action("Index", "Home")'">Cancel</button>
</div>
<link href="~/Css/custom-style.css" rel="stylesheet" />
<link href="~/Css/select2.css" rel="stylesheet" />
<script src="~/js/select2.min.js"></script>
<link href="~/Css/summernote.css" rel="stylesheet" />
<script src="~/js/summernote.min.js"></script>

<script>
    var _urlSendMail = '@Url.Action("SendMailToManagers", "Email")';
    var _urlUpdateMailTemplate = '@Url.Action("UpdateMailTemplate", "Email")';
    var _urlSaveMailTemplate = '@Url.Action("SaveMailTemplate", "Email")';
    var _urlEmailTemplateHome = '@Url.Action("Index","Email")';

    $(document).ready(function () {
        var managers = $("#Users")[0].options;
        var toBeSelectedManagers = [];

        $.each(managers, function (index) {
            if (this.value != "" && this.value != undefined) {
                toBeSelectedManagers.push(this.value);
            }
        });

        var usersSelect2 = $("#Users").select2();
        usersSelect2.val(toBeSelectedManagers).trigger("change");

        $("#clearSelectedUsers").on("click", function () {
            usersSelect2.val([]).trigger("change");
        });

        $('#EmailTemplate').summernote({
            height: 350, // set editor height
            minHeight: null, // set minimum height of editor
            maxHeight: null, // set maximum height of editor
            focus: false, // set focus to editable area after initializing summernote
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                ['insert', ['table']],
                ['misc', ['codeview', 'undo', 'redo']]
            ]
        });
    });

    window.edit = function () {
        $(".click2edit").summernote()
    }, window.save = function () {
        $(".click2edit").destroy()
    }

    $("#sendMailButton").on("click", function () {
        if (validateEmailTemplateAndUsers()) {
            var selectedManagersList = $("#Users").val();

            var managersList = [];
            var emailTemplate = htmlEncode($("#EmailTemplate").val());
            $.each(selectedManagersList, function (index) {
                if (this.value == "") {
                    selectedManagersList.pop(this.value);
                }
            });

            showCustomLoader();
            $.ajax({
                type: "POST",
                url: _urlSendMail,
                data: { managersList: selectedManagersList, emailTemplate: emailTemplate },
                success: function (result) {
                    if (result = "Success") {
                        swal({
                            title: "Success",
                            text: "Mail Sent Successfully!!",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonColor: "#337ab7",
                            confirmButtonText: "Ok",
                        },
                        function (isConfirm) {
                            if (isConfirm) {
                                window.location.href = '/Home/Index';
                            }
                        });
                    } else {
                        swal({
                            title: "Error",
                            text: "Due to some error failed to send mail :(",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonColor: "#337ab7",
                            confirmButtonText: "Ok",
                        },
                        function (isConfirm) {
                            if (isConfirm) {
                                window.location.href = _urlEmailTemplateHome;
                            }
                        });
                    }
                    hideCustomLoader();
                }, error: function (error) {
                    swal("Error", "Oops something went wrong!", "error");
                    hideCustomLoader();
                    console.log(error);
                }
            });
        } else {
            swal("Please Note", "Template cannot be empty and Managers are compulsary", "error");
        }
    });

    $("#saveTemplateMailButton").on("click", function () {
        if (validateEmailTemplateAndProcess()) {
            swal({
                title: "Save Template as:",
                text: "",
                type: "input",
                showCancelButton: true,
                closeOnConfirm: false,
                confirmButtonText: "Save",
                animation: "slide-from-top",
                inputPlaceholder: "Ex: Nomination"
            },
        function (processName) {
            var newTemplateName = processName.trim();
            if (newTemplateName === false) return false;

            if (newTemplateName === "") {
                swal.showInputError("Please provide template name!");
                return false;
            }
            if (checkProcessTemplateNameExists(newTemplateName)) {
                swal.showInputError("Template with same name already exists!");
                return false;
            }

            var emailTemplate = htmlEncode($("#EmailTemplate").val());

            showCustomLoader();
            $.ajax({
                type: "POST",
                url: _urlSaveMailTemplate,
                data: { processName: newTemplateName, emailTemplate: emailTemplate },
                success: function (templateName) {
                        hideCustomLoader();
                        swal({
                            title: templateName,
                            text: "Template Saved Successfully!!",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonColor: "#337ab7",
                            confirmButtonText: "Ok",
                        },
                        function (isConfirm) {
                            if (isConfirm) {
                                window.location.href = _urlEmailTemplateHome;
                            }
                        });
                }, error: function (error) {
                    hideCustomLoader();
                    swal("Error", "Oops something went wrong!", "error");
                    console.log(error);
                }
            });
        })
        } else {
            swal("Please Note", "Empty template cannot be saved", "error");
        }
    });

    function validateEmailTemplateAndUsers() {
        var template = $("#EmailTemplate").summernote('isEmpty');
        var users = $("#Users").val();

        var areUsersValid = false;
        var isTemplateValid = false;

        if (users != null && users.length > 0) {
            $.each(users, function (index) {
                if (this.value != "" && this.value != undefined) {
                    areUsersValid = true;
                }
            });
        }

        if (!template) {
            isTemplateValid = true;
        }

        return (areUsersValid && isTemplateValid);
    }

    function validateEmailTemplateAndProcess() {
        var template = $("#EmailTemplate").summernote('isEmpty');
        var process = $("#Process").val();

        var isProcessSelected = false;
        var isTemplateValid = false;

        if (process != null && process.length > 0) {
            if (this.value != "") {
                isProcessSelected = true;
            }
        }

        if (!template) {
            isTemplateValid = true;
        }

        return (isProcessSelected && isTemplateValid);
    }

    function checkProcessTemplateNameExists(processName) {
        var processNameDoesExists = false;
        var existingProcess = $("#Process")[0].options;
        $.each(existingProcess, function () {
            if ($(this).text() === processName) {
                processNameDoesExists = true;
            }
        });
        return processNameDoesExists;
    }

    function htmlEncode(value) {
        //create a in-memory div, set it's inner text(which jQuery automatically encodes)
        //then grab the encoded contents back out.  The div never exists on the page.
        return $('<div/>').text(value).html();
    }

    function htmlDecode(value) {
        return $('<div/>').html(value).text();
    }
</script>