@model IEnumerable<Silicus.EncourageWithAzureAd.Web.Models.ReviewFeedbackListViewModel>
@using System.Drawing;
@{
    ViewBag.Title = "ReviewedNominations";
}

<style>
    hr {
        background-color: black;
        height: 1px;
        border: 0;
        padding-left: 0px;
    }

    th, td {
        padding-left: 10px;
        padding-right: 10px;
    }


    .page-heading {
        margin-left: 0%;
    }

    .navbar-minimalize {
        margin-left: 35%;
    }
</style>


<div class="row border-bottom">
    <nav class="navbar  " role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
</div>
<div class="row wrapper border-bottom white-bg page-heading border-bottom" style="width:90%;">
    <div class="col-sm-12">
        <h1>Shortlisted Nominations</h1>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row" style="margin-left: 2%;">
@if (Model.Count() <= 0)
{
    <span class="text-danger" style="font-size:20px">No reviewes are submitted as of now.</span>
}
else
{
        <div style="text-align:left;width:80%;">
            <input type="button" value="ALL" class="btn btn-primary btnSameSize" onclick="location.href=''" />
            <input type="button" value="SOM" class="btn btn-primary btnSameSize" onclick="location.href=''" />
            <input type="button" value="Pinnacle" class="btn btn-primary btnSameSize" onclick="location.href=''" />
            <input type="button" value="Team Awesome" class="btn btn-primary btnSameSize" onclick="location.href=''" />
        </div>
        <br />
       
            <div style="font-weight:bold;color:#0070B9">ALL</div>

        <hr style="margin-top:0px;height:2px;margin-left:0px; width:85%;" />
        foreach (var item in Model)
        {
            Random randomGen = new Random();
            KnownColor[] names = (KnownColor[])Enum.GetValues(typeof(KnownColor));
            KnownColor randomColorName = names[randomGen.Next(names.Length)];
            Color randomColor = Color.FromKnownColor(randomColorName);

                <div class="col-md-3 card white-bg">
                    <div class="cardHeader text-center">

                        <div>
                            <label>@Html.DisplayFor(modelItem => item.DisplayName)</label>
                            <div id="winningBadge">
                                @if (item.IsShortlisted)
                                {
                                    <span style="color:#0067AA"><i class="fa fa-star fa-2x" title="Shortlisted" aria-hidden="true"></i></span>
                                }
                                else if (item.IsWinner)
                                {
                                    <span style="color:#0067AA"><i class="fa fa-trophy fa-2x" title="Winner" aria-hidden="true"></i></span>
                                }
                            </div>
                        </div>
                        <div>
                            For
                            @Html.DisplayFor(modelItem => item.AwardName)
                            @Html.DisplayFor(modelItem => item.NominationTime)

                            <table align="center" style="border: 1px solid rgba(178, 176, 176, 0.96);margin-top:2%;">
                                <tr>
                                    <th>Credits</th>
                                    <th>Reviews</th>
                                    <th>Average</th>
                                </tr>
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Credits)</td>
                                    <td>@Html.DisplayFor(modelItem => item.numberOfReviews)</td>
                                    <td>@Html.DisplayFor(modelItem => item.averageCredits)</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="cardFooter text-right" style="padding-top:5px">

                  @if (item.IsShortlisted)
                  {
                            <span style="color:#0067AA"><i class="fa fa-star fa-2x" title="Shortlisted" aria-hidden="true"></i></span>
                  }
                  else if (item.IsWinner)
                  {
                            <span style="color:#0067AA"><i class="fa fa-trophy fa-2x" title="Winner" aria-hidden="true"></i></span>
                  }
                    <a href="@Url.Action("ViewNominationForShortlist", "Review", item)">
                        <span> <i class="fa fa-file-text-o" title="View Nomination" aria-hidden="true" style="font-size:30px;"></i> </span>
                    </a>
                </div>

            </div>
        }
}
        <br />
    </div>

@if (Model.Count() != 0)
{
    <div class="row" style="margin-left:2%;">
        <div class="row">&nbsp;</div>
        <div style="font-weight:bold; color:#0070B9">SHORTLISTED</div>
        <hr style="margin-top:0px;height:2px;margin-left:0px; width:85%;" />
        @foreach (var item in Model)
        {
            Random randomGen = new Random();
            KnownColor[] names = (KnownColor[])Enum.GetValues(typeof(KnownColor));
            KnownColor randomColorName = names[randomGen.Next(names.Length)];
            Color randomColor = Color.FromKnownColor(randomColorName);
            if (item.IsShortlisted)
            {
                <div class="col-md-3 card white-bg">
                    <div class="cardHeader text-center">
                        @*<div style="background-color:@randomColor.Name;height:60px;margin-top:10px;padding-left:10px;padding-bottom:70px; font-weight:bold;font-size:50px;text-align:left" class="col-md-5">
                                @Html.DisplayFor(modelItem => item.Intials)
                            </div>*@
                        <div>
                            <label> @Html.DisplayFor(modelItem => item.DisplayName)</label>
                            <label> @Html.DisplayFor(modelItem => item.DisplayName)</label>
                        </div>

                        <div>
                            For
                            @Html.DisplayFor(modelItem => item.AwardName)
                            @Html.DisplayFor(modelItem => item.NominationTime)
                            @*<br />
                                @Html.Label("Credits:")
                                @Html.DisplayFor(modelItem => item.Credits)*@
                            <table align="center" style="border: 1px solid rgba(178, 176, 176, 0.96);margin-top:2%;">
                                <tr>
                                    <th>Credits</th>
                                    <th>Reviews</th>
                                    <th>Average</th>
                                </tr>
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Credits)</td>
                                    <td>@Html.DisplayFor(modelItem => item.numberOfReviews)</td>
                                    <td>@Html.DisplayFor(modelItem => item.averageCredits)</td>
                                    
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="cardFooter text-right">
                        <a href="@Url.Action("RemoveShortlistNomination", "Review", new { nominationId = item.NominationId })">
                            <span> <i class="glyphicon glyphicon-remove" title="Remove From Shortlist" aria-hidden="true" style="font-size:25px;margin-right:1%;"></i> </span>
                        </a>

                        <a href="@Url.Action("ViewNominationForShortlist", "Review", item)">
                            <span> <i class="fa fa-file-text-o" title="View Nomination" aria-hidden="true" style="font-size:30px;"></i> </span>
                        </a>

                    </div>

                </div>
            }
        }
       
        <br />
    </div>


    bool _disabled = false;
    foreach (var item in Model)
    {
        if (item.IsWinner == true)
        {
            _disabled = true;
            break;
        }
    }

    //var data = Model.Select(m => m.IsWinner == true).SingleOrDefault();

    if (_disabled == false)
    {
        <div style="text-align:center;width:80%;">
            <input type="button" value="Reject All" class="btn btn-primary btnSameSize" id="rejectAll" onclick="return rejectAllNominations()" style="margin-left:3%;" />
        </div>
    }
    else
    {
        <div style="text-align:center;width:80%;">
            <input type="button" value="Reject All" disabled class="btn btn-primary btnSameSize" id="rejectAll" onclick="return rejectAllNominations()" style="margin-left:3%;" />
        </div>
    }
}

    <div class="row">&nbsp;</div>
    <div class="row">&nbsp;</div>
</div>
<script src="~/js/jquery-2.1.1.js"></script>
<script>
    $(document).ready(function () {

    });
    
    $(function () {

        $('.fa-trophy').tooltip();
        $('.fa-star').tooltip();
    });

    function rejectAllNominations() {
        swal({
            title: "Reject all nominations",
            text: "Do you want to reject all nominations?",
            type: "info",
            showCancelButton: true,
            confirmButtonColor: "#0070b9",
            confirmButtonText: "Yes!",
            cancelButtonText: "No!",
            closeOnConfirm: false,
            closeOnCancel: false
        },
       function (isConfirm) {
           if (isConfirm) {
               $.ajax({
                   type: 'post',
                   url: '@Url.Action("RejectAll", "Review")',
                   success: function (data) {
                       swal({
                           title: "All nominations rejected..",
                           showCancelButton: false,
                           confirmButtonColor: "#88a364",
                           confirmButtonText: "Ok"
                       },
                       function () {
                           if (isConfirm) {
                               window.location.href = '@Url.Action("ReviewFeedbackList", "Review")';
                           }
                       });
                   },
                   error: function () {
                       swal("Error", "Oops! Something wrong happened..");
                   }
               });
           } else {
               swal("Cancelled", "Rejection of all nominations Cancelled");
               window.location.href = '@Url.Action("ReviewFeedbackList", "Review")';
           }
       });

    }



</script>