@model Silicus.Ensure.Web.Models.UserViewModel
@using Silicus.Ensure.Models.Constants
@using Kendo.Mvc.UI;
@{
    Layout = null;
}
<div id="partialCandidateUserView">
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.FirstName)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.FirstName)
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.MiddleName)
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.LastName)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.LastName)
        </div>
    </div>
    <div class="row" style="margin-bottom:10px;">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Gender)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @(Html.Kendo().DropDownListFor(m => m.Gender)
                            .OptionLabel("--Select--")
                            .Name("Gender")
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .BindTo(new List<SelectListItem>
                                () {
                                new SelectListItem(){
                                Text="Male",
                                Value="Male"
                                },
                                new SelectListItem(){
                                Text="Female",
                                Value="Female"
                                }
                                }).HtmlAttributes(new { style = "width: 100%" }))
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.Gender)
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Department)
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
        </div>
    </div>
    <div class="row" style=" margin-bottom:10px;">
        <div class="col-md-4">
            @Html.LabelFor(x => x.Position) <span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @(Html.Kendo().DropDownListFor(model => model.Position)
                            .OptionLabel("--Select--")
                            .BindTo(Model.PositionList)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .Value(Model.Position)
                .HtmlAttributes(new { style = "width: 100%;border-color: #c5c5c5;" })
            )
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.Position)
        </div>
    </div>
    <div class="row candidate">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Experience)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.Experience, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.Experience)
        </div>
    </div>
    <div class="row candidate">
        <div class="col-md-4">
            @Html.LabelFor(model => model.CurrentEmployer)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.CurrentEmployer, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.CurrentEmployer)
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Email)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>
    <div class="row candidate">
        <div class="col-md-4">
            @Html.LabelFor(model => model.PrimaryMobileNumber)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.PrimaryMobileNumber, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.PrimaryMobileNumber)
        </div>
    </div>
    <div class="row candidate">
        <div class="col-md-4">
            @Html.LabelFor(model => model.SecondaryMobileNumber)<span style='color:red'> *</span>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.SecondaryMobileNumber, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.SecondaryMobileNumber)
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Address)<b style="color:Red;"> *</b>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
        </div>
        <div class="col-md-4">
            @Html.ValidationMessageFor(m => m.Address)
        </div>
    </div>
</div>
