@model Silicus.Ensure.Web.Models.TestSuiteViewModel
@using Silicus.Ensure.Models.Constants
@using Kendo.Mvc.UI;

@{
   ViewBag.Title = "TestSuite";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-content">
    <h2>@ViewBag.Type Test Suite</h2>
    @using (Html.BeginForm("TestSuiteSave", "Admin"))
    {
        @Html.HiddenFor(model => model.TestSuiteId)
        @Html.HiddenFor(model => model.IsCopy)
        <div class="fluid mt20">
            <div class="row">
                <div class="alert alert-success" id="messageDiv">
                    <strong>Error!</strong> <span id="messageContent">@Html.ValidationSummary(true)</span>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model=>model.TestSuiteName)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.TestSuiteName, new { @class = "form-control" })
                </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Duration)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(model => model.Duration)
                    .BindTo(new List<string>() {
                    "30", "60", "90", "120"
                    }).Events(ev => ev.Change("onDurationChange")))
                </div>  
            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.ObjectiveQuestionsCount):
                </div>
                <div class="col-md-8">
                   @Html.TextBoxFor(model => model.ObjectiveQuestionsCount, new { @class = "form-control",@readonly="readonly" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.PracticalQuestionsCount):
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.PracticalQuestionsCount, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Position)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(model => model.Position)
                    .OptionLabel("--Select--")
                    .BindTo(Model.PositionList)
                    .DataTextField("PositionName")
                    .DataValueField("PositionId"))
                </div>                
            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Competency)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(model => model.Competency)
                    .OptionLabel("--Select--")
                    .BindTo(new List<SelectListItem>() {
                    new SelectListItem(){
                    Text=Convert.ToString(Competency.Beginner),
                    Value=Convert.ToString((Int32)Competency.Beginner)
                    },
                    new SelectListItem(){
                    Text=Convert.ToString(Competency.Intermediate),
                    Value=Convert.ToString((Int32)Competency.Intermediate)
                    },
                    new SelectListItem(){
                    Text=Convert.ToString(Competency.Expert),
                    Value=Convert.ToString((Int32)Competency.Expert)
                    }
                    }))
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.PrimaryTagIds)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().MultiSelectFor(m => m.PrimaryTagIds)
                    .DataTextField("TagName")
                    .DataValueField("TagId")
                    .Placeholder("Select primary skill set...")
                    .BindTo(Model.TagList)
                    .HtmlAttributes(new { style = "width: 100%" }))                   
                </div>
            </div>
            <br/>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.SecondaryTagIds):
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().MultiSelectFor(m => m.SecondaryTagIds)
                    .DataTextField("TagName")
                    .DataValueField("TagId")
                    .Placeholder("Select secondary skill set...")
                    .BindTo(Model.TagList)
                    .HtmlAttributes(new { style = "width: 100%" }))
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6"></div>
                <div class="col-md-2 col-md-offset-4">
                    @(Html.Kendo().Button()
                    .Name("btnCancel").Icon("cancel")
                    .HtmlAttributes(new { type = "button" })
                    .Content("Cancel")
                    .Events(ev => ev.Click("onCancelClick")))

                    @(Html.Kendo().Button()
                    .Name("btnSave").Icon("tick")
                    .HtmlAttributes(new { type = "submit" })
                    .Content("Save"))
                </div>
            </div>           
    }
</div>

<script>
    $(document).ready(function () {       
        if ($('.validation-summary-errors>ul>li').is(':empty')) { $("#messageDiv").hide(); }
        else if ($('.validation-summary-errors>ul>li').text()!="")
        { ShowMessage($('.validation-summary-errors>ul>li').text(), 0); }
        else { $("#messageDiv").hide(); }

        $("#btnSave").click(function (e) {
            if (validateTestSuite() == false) {
                e.preventDefault();
            }
        });
    });

    function onCancelClick() {
        window.location = '@Url.Action("TestSuiteList", "Admin")';
    }

    function onDurationChange() {
        if($("#Duration").val()=="30")
        {
            $("#ObjectiveQuestionsCount").val("20");
            $("#PracticalQuestionsCount").val("1");
        }
        else if ($("#Duration").val() == "60") {
            $("#ObjectiveQuestionsCount").val("40");
            $("#PracticalQuestionsCount").val("2");
        }
        else if ($("#Duration").val() == "90") {
            $("#ObjectiveQuestionsCount").val("70");
            $("#PracticalQuestionsCount").val("2");
        }
        else if ($("#Duration").val() == "120") {
            $("#ObjectiveQuestionsCount").val("100");
            $("#PracticalQuestionsCount").val("2");
        }
    }

    function validateTestSuite() {
        if ($("#TestSuiteName").val().trim().length == 0) {
            $("#TestSuiteName").focus();
            ShowMessage("Test suite name cann't be blank.", 0);
            return false;
        }
        else if ($("#Position").val().trim().length == 0) {
            $("#Position").focus();
            ShowMessage("Position cann't be blank.", 0);
            return false;
        }
        else if ($("#Competency").val().trim().length == 0) {
            $("#Competency").focus();
            ShowMessage("Competency cann't be blank.", 0);
            return false;
        }
        else if ($("#Competency").val().trim().length == 0) {
            $("#Competency").focus();
            ShowMessage("Competency cann't be blank.", 0);
            return false;
        }
        else if ($("#PrimaryTagIds :selected").length == 0) {
            $("#PrimaryTags").focus();
            ShowMessage("Select at least 1 primary tag.");
            return false;
        }
    }
</script>



