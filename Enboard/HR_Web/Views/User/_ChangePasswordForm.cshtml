@model Models.ChangePassword
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Ajax.BeginForm("ChangePassword", "User", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccessForm" }, new { id = "frmChangePassword" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.LabelFor(m => m.PrevPassword) <span class="red">*</span>
                @Html.PasswordFor(m => m.PrevPassword, new { id = "txtPrevPassword", placeholder = "Previous Password", @class = "form-control", @tabindex = 1 })
                @Html.ValidationMessageFor(model => model.PrevPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.NewPassword) <span class="red">*</span>
                @Html.PasswordFor(m => m.NewPassword, new { id = "txtNewPassword", placeholder = "New Password", @class = "form-control", @tabindex = 3 })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmNewPassword) <span class="red">*</span>
                @Html.PasswordFor(m => m.ConfirmNewPassword, new { id = "txtConfirmNewPassword", placeholder = "New Password", @class = "form-control", @tabindex = 3 })
                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
            </div>
            @Html.HiddenFor(m => m.UserID)
        </div>
    </div>
}