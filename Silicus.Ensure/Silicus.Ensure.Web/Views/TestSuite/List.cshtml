@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "TestSuite List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary" id="menu-toggle" style="margin-left:15px;border-radius:0px;" href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>

    <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
        <h1 class="dashboard-name">Test Suite</h1>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="box M-T15 M-B60">
            <div class="fluid">

                

                <div class="toolbar">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="col-sm-5 col-md-4 col-lg-3 M-T15 M-B15">
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                    <input type="text" class="form-control" id='FieldFilter' placeholder="Search" style="height: 38px;">
                                    <span class="input-group-btn">
                                        <button id="testSuiteSearch" class="btn btn-default" style="border:1px solid #0070B9!important" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                    </span>
                                </div>
                            </div>
                            <div class="col-sm-4 M-B15" style="margin-top:20px;">
                                <a href='/TestSuite/Add?testSuiteId=0' class='k-button k-button-icontext k-grid-add'><span class='k-icon k-add'></span>Add test suite</a>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="kendogrid">

                    <div class="table-responsive">
                        @if (Request.IsAuthenticated)
                        {
                            @(Html.Kendo().Grid<Silicus.Ensure.Web.Models.TestSuiteViewModel>().Name("testSuiteGrids")
                .Columns(columns =>
                  {
                      columns.Bound(p => p.TestSuiteName).Width(300).Title("Test Suite");
                      columns.Bound(p => p.Duration).Width(50);
                      columns.Bound(p => p.PositionName).Width(300).Title("Position");
                      columns.Bound(p => p.PrimaryTagNames).Width(180).Title("Tags");
                      columns.Bound(p => p.StatusName).Width(150).Title("Status");
                      columns.Bound("").ClientTemplate(@"<a class='k-button k-button-icontext k-grid-edit M-T4' href='" + Url.Action("Add", "TestSuite") + "?testSuiteId=#=TestSuiteId#'><span class='k-icon k-edit'></span>Edit</a>" +
                                                            "<a class='k-button k-button-icontext k-grid-delete M-T4' href='\\#' onclick='ConfirmDeleteTestSuiteRow(event)'>Delete</a>").Title("Actions").Width(300).Sortable(false);
                      columns.Bound("").ClientTemplate(@"

                                                        #if (UserInRole){#
                                                            <a class='k-button k-button-icontext k-grid-add M-T4' href='\\#' onclick= getTestSuiteId('#=TestSuiteId#','#=StatusName#') data-toggle='modal' data-target='\\#myModal'>Assign test</a>
                                                        #}#
                                                            <a class='k-button k-button-icontext k-grid-add M-T4' href='" + Url.Action("Copy", "TestSuite") + "?testSuiteId=#=TestSuiteId#'>Copy</a>" +
                                                                                                                          "  #if (StatusName=='Ready'){#" +
                                                                                                                          "<a class='k-button k-button-icontext k-grid-add M-T4' onclick=showTest('#=TestSuiteId#')>Preview</a>"
                                                                                                                          + "#}#"
                                                              ).Title("Test Actions").Width(400).Sortable(false);



                  })
                    .DataSource(dataSource => dataSource
                      .Ajax()
                      .Model(model =>
                      {
                          model.Id(p => p.TestSuiteId);
                          model.Field(p => p.TestSuiteId).Editable(false);

                      })
                      .Read(read => read.Action("GetTestSuiteDetails", "TestSuite"))
                                  .Destroy(delete => delete.Action("Delete", "TestSuite"))
                      .PageSize(10)
                      .ServerOperation(false)
                  )
                      .Pageable(p => p.PageSizes(true))
                  .Sortable()
)
                        }
                    </div>
                </div>

            </div>
        </div>

        <div id="DivUsers">

        </div>
    </div>
</div>
<script>
    function showTest(id) {
         //  window.location.href =;
             window.open( "/TestSuite/PreViewQuestion?testSuiteId=" + id, '_blank');
    }
    $(document).ready(function () {
        SetNavigationMenuActive('TestSuite');
        $("#messageDiv").hide();
        $("#FieldFilter").keyup(function () {

            var value = $("#FieldFilter").val();
            grid = $("#testSuiteGrids").data("kendoGrid");
            var pageSize = grid.dataSource.pageSize();
            if (value.length >= 1) {
                if (value) {
                    var filter = { logic: "or", filters: [] };
                    filter.filters.push({ field: "TestSuiteName", operator: "contains", value: value });
                    filter.filters.push({ field: "PositionName", operator: "contains", value: value });
                    filter.filters.push({ field: "PrimaryTagNames", operator: "contains", value: value });
                    grid.dataSource.query({ filter: filter });
                    grid.dataSource.sort({ field: "TestSuiteName", dir: "asc" });
                    grid.dataSource.pageSize(pageSize);
                } else {
                    grid.dataSource.filter({});
                }
            }
            else if (value == "")
                grid.dataSource.filter({});
        });
        //Show successful message
        if ('@TempData["IsNewTestSuite"]' == "1") {
            ShowMessage("Tag saved successfully.", 1);
        }
    });

    function ConfirmDeleteTestSuiteRow(e) {
        var tr = $(e.target).closest("tr");
        var data = $("#testSuiteGrids").data('kendoGrid').dataItem(tr);
        if (data.IsAssigned) {
            ShowMessage("Test Suite is assigned to a candidate. You cannot delete it. Please assign another test suite to the candidate in order to continue.", 0);
        }
        else {
            deleteGridRow('testSuiteGrids', data);
            
        }
    }

    function deleteGridRow(gridId, data) {
        swal({
            title: "Are you sure,",
            text: "Are you sure, you want to delete this record?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
        function (isConfirm) {
            if (isConfirm) {
                grid = $("#" + gridId).data("kendoGrid");
                grid.dataSource.remove(data);
                grid.dataSource.sync();
                ShowMessage("Test Suite deleted successfully.", 1);

            } else {
                ShowMessage("Test Suite cancelled successfully.", 1);
            }
        });
    }


    function getTestSuiteId(testSuiteId, statusName) {
        if (statusName != '@Convert.ToString(Silicus.Ensure.Models.Constants.TestSuiteStatus.Pending)') {
            $('#DivUsers').html('');
            $.ajax({
                type: "POST",
                url: '@Url.Action("TestSuiteUserView", "TestSuite")',
                data: { testSuiteId: testSuiteId },
                success: function (returndata) {
                    $('#DivUsers').html(returndata);
                    $("#myModal").modal();
                }
            });
        }
        else {
            toastr.error("Test suite is in pending status.");
        }
    }

    $("#testSuiteSearch").click(function (e) {
        e.preventDefault();
        var datasource = $("#testSuiteGrids").data("kendoGrid").dataSource;
        //Clear filters:
        datasource.filter([]);
        $("#FieldFilter").val('');
    });

    function onUserGridsDataBound() {
        try {
            var testSuiteId = $('#testSuiteId').val();
            $.ajax({
                url: "GetUserIdsForTestSuite?testSuiteId=" + testSuiteId,
                success: function (userIds) {
                    if (userIds && userIds.length > 0) {
                        $.each(userIds, function (i, val) {
                            $("input[value='" + userIds[i] + "']").attr('checked', 'checked')
                        });
                    }
                }

            });
        } catch (e) { }
    }
</script>
<style>
#testSuiteGrids .k-loading-image {
    background-image: none;
}

</style>
