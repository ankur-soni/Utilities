@model Silicus.Ensure.Web.Models.UserViewModel
@using Silicus.Ensure.Models.Constants
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = "CandidateAdd";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-content">
    @if (Model.UserId != 0)
    {
        <h2>Edit user</h2>
    }
    else
    {
        <h2>Add user</h2>
    }
    @using (Html.BeginForm("SaveUser", "ManageUser", FormMethod.Post, new { id = "frmSearchAllNdc" }))
    {
        @Html.HiddenFor(m => m.UserId)
        <div class="fluid mt20">
            @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
            {
                <div class="alert alert-error" style="color: #D8000C; background-color: #FFBABA;" id="messageDiv">
                    <strong>Error!</strong> <span id="messageContent">@Model.ErrorMessage</span>
                </div>
            }
            <div class="row" style=" margin-bottom:10px;">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Role)<span style='color:red'> *</span>
                </div>
                <div class="col-md-4">
                    @(Html.Kendo().DropDownListFor(model => model.Role)
                        .OptionLabel("Select a role")
                        .BindTo(EnumHelper.GetSelectList((typeof(RoleName)))
                        .Select(x => new SelectListItem { Text = x.Text, Value = x.Text }))
                        .Value(Model.Role)
                        .Events(e =>
                        {
                            e.Change("onSelect");
                        })
                        .HtmlAttributes(new { style = "width: 100%;border-color: #c5c5c5;" })
                    )
                </div>
            </div>

            <div id="loadView">
            </div>
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-2 col-md-offset-4">
                    @(Html.Kendo().Button()
                .Name("btnCancel").Icon("cancel")
                .HtmlAttributes(new { type = "button" })
                .Content("Cancel")
                .Events(ev => ev.Click("onCancelClick")))

                    @(Html.Kendo().Button()
                .Name("btnSave").Icon("tick")
                .HtmlAttributes(new { type = "submit" })
                .Content("Save"))
                </div>
            </div>
            <script type="text/javascript">
                $(document).ready(function () {
                    if ("@Model.Role" != '') {
                        loadView("@Model.Role");
                    }
                    else
                    {
                        $("#btnSave").kendoButton({
                            enable: false
                        });
                    }
                });

                $(document).ready(function () {
                    $('#messageDiv').fadeOut(5000);
                });
                //register custom validation rules
                (function ($, kendo) {
                    $.extend(true, kendo.ui.validator, {
                        rules: { // custom rules
                            experiencevalidation: function (input, params) {
                                if (input.is("[name='Experience']")) {
                                    if( input.val() != ""&&input.val() <=30)
                                    {
                                        return true;
                                    }
                                    else
                                        input.attr("data-experiencevalidation-msg", "Experience should not be greater than 30.");
                                    return false;
                                }
                                if (input.is("[name='Position']")) {
                                    if( !(input.val() != "" && input.val()!="--Select--"))
                                    {
                                        input.attr("data-experiencevalidation-msg", "Position is required.");
                                        return false;
                                    }
                                }
                                if (input.is("[data-val-remote]") && input.val() != "") {
                                    var remoteURL = input.attr("data-val-remote-url");
                                    if(!checkMail(input.val(),remoteURL))
                                    {
                                        input.attr("data-experiencevalidation-msg", "Email is already exist.");
                                        return false;
                                    }
                                }
                                return true;
                            }
                        },
                        messages: { //custom rules messages
                            experiencevalidation: function (input) {
                                // return the message text
                                return input.attr("data-val-experiencevalidation");
                            }
                        }
                    });
                })(jQuery, kendo);

                $(function () {
                    $("form").kendoValidator();
                });
                function checkMail(email,remoteURL)
                {
                    var valid;
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: remoteURL,
                        data: JSON.stringify({ 'Email': email,'UserId':@Model.UserId }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            valid = data;
                        }
                    });
                    return valid;
                }
                function loadView(roleName)
                {
                    $.ajax({
                        async:false,
                        type: "POST",
                        url: '/ManageUser/LoadView',
                        contentType: 'application/json',
                        data: JSON.stringify({ 'UserRoleName':roleName,'UserId':@Model.UserId}),
                        success: function(data){
                            $('#loadView').html(data);
                        },
                    });
                    if (parseInt("@Model.UserId") != 0) {
                        $("#Role").data("kendoDropDownList").enable(false);
                    }
                }

                function onSelect(e) {
                    var dataItem = this.dataItem();
                    if(dataItem['Text']!='Select a role')
                    {
                        $("#btnSave").removeClass('k-state-disabled');
                        $("#btnSave").removeAttr('disabled');
                        $("#btnSave").attr('aria-disabled','false');
                        loadView(dataItem['Text']);
                    }
                    else{
                        $('#loadView').html('');
                        $("#btnSave").kendoButton({
                            enable: false
                        });
                    }
                };

                function onDataBound() {
                    var dataItem = this.dataItem();
                    if(dataItem['Text']!='Select a role')
                    {
                        $("#btnSave").removeClass('k-state-disabled');
                        $("#btnSave").removeAttr('disabled');
                        $("#btnSave").attr('aria-disabled','false');
                        loadView(dataItem['Text']);
                    }
                    else{
                        $('#loadView').html('');
                        $("#btnSave").kendoButton({
                            enable: false
                        });
                    }
                }

                function onCancelClick() {
                    window.location = '@Url.Action("Index", "ManageUser")';
                }
            </script>
            <style>
                .height {
                    height: 250px;
                }
            </style>
        </div>
    }
</div>
