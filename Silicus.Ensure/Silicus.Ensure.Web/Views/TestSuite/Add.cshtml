@model Silicus.Ensure.Web.Models.TestSuiteViewModel
@using Silicus.Ensure.Models.Constants
@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "TestSuite";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="main-content">
    <h2>@ViewBag.Type Test Suite</h2>
    @using (Html.BeginForm("Save", "TestSuite"))
    {
        @Html.HiddenFor(model => model.TestSuiteId)
        @Html.HiddenFor(model => model.IsCopy)
        @Html.HiddenFor(model => model.Status)
        @Html.HiddenFor(model => model.PrimaryTagNames)
        <div class="fluid mt20">
            <div class="row">
                <div class="alert alert-success" id="messageDiv">
                    <strong>Error!</strong> <span id="messageContent">@Html.ValidationSummary(true)</span>
                </div>
                <div class="col-md-6">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.TestSuiteName)<span style="color:red;">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.TestSuiteName, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Duration)<span style="color:red;">*</span>
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Duration, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="col-md-6" style="padding-left: 0;">
                            @Html.LabelFor(model => model.Position)<span style="color:red;">*</span>
                        </div>
                        <div class="col-md-6" style="padding-left: 9px;">
                            @(Html.Kendo().DropDownListFor(model => model.Position)
                    .OptionLabel("--Select--")
                    .BindTo(Model.PositionList)
                    .DataTextField("PositionName")
                    .DataValueField("PositionId")
                    .HtmlAttributes(new { style = "width: 100%" }))
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-3">
                            <a href="#" onclick="AddPosition();">Add position</a>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Competency)<span style="color:red;">*</span>
                    </div>
                    <div class="col-md-6">
                        @(Html.Kendo().DropDownListFor(model => model.Competency)
                    .OptionLabel("--Select--")
                    .BindTo(new List<SelectListItem>() {
                    new SelectListItem(){
                    Text=Convert.ToString(Proficiency.Beginner),
                    Value=Convert.ToString((Int32)Proficiency.Beginner)
                    },
                    new SelectListItem(){
                    Text=Convert.ToString(Proficiency.Intermediate),
                    Value=Convert.ToString((Int32)Proficiency.Intermediate)
                    },
                    new SelectListItem(){
                    Text=Convert.ToString(Proficiency.Expert),
                    Value=Convert.ToString((Int32)Proficiency.Expert)
                    }
                    })
                   .HtmlAttributes(new { style = "width: 100%" }))
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-6">
                        Question Type<span style="color:red;">*</span>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-6" style="padding-left:0">
                            <div class="col-md-6" style="padding-left:0">
                                <span style="vertical-align:central">Optional</span>
                            </div>
                            <div class="col-md-6" style="padding-left:0">
                                @Html.TextBoxFor(m => m.OptionalQuestion, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.OptionalQuestion)
                        </div>
                        <div class="col-md-6" style="padding-right:0">
                            <div class="col-md-6" style="padding-left:0">
                                <span style="vertical-align:central">Practical</span>
                            </div>
                            <div class="col-md-6" style="padding-left:0">
                                @Html.TextBoxFor(m => m.PracticalQuestion, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.PracticalQuestion)
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ProjectName)
                    </div>
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.ProjectName, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="col-md-6">
                        Experience
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-6" style="padding-left:0">
                            @(Html.Kendo().DropDownListFor(m => m.FromExperience)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .BindTo(EnumHelper.GetSelectList((typeof(Year)))
                        .Select(x => new SelectListItem { Text = x.Value, Value = x.Value }))
                        .HtmlAttributes(new { style = "width: 100%" })
                        .OptionLabel("Year")
                            )
                            @Html.ValidationMessageFor(m => m.FromExperience)
                        </div>
                        <div class="col-md-6" style="padding-right:0">
                            @(Html.Kendo().DropDownListFor(m => m.ToExperience)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .BindTo(EnumHelper.GetSelectList((typeof(Year)))
                        .Select(x => new SelectListItem { Text = x.Value, Value = x.Value }))
                        .HtmlAttributes(new { style = "width: 100%" })
                        .OptionLabel("Months")
                            )
                            @Html.ValidationMessageFor(m => m.ToExperience)
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        Skill Tags:
                    </div>
                    <div class="col-md-9" style="margin-left:1.6%">
                        <table align='center' style="margin:0" class="tag-list" id="tag_table" role="grid" cellspacing="40">
                            @if (Model.Tags != null)
                            {
                                if (Model.Tags.Count() > 0)
                                {
                                    for (int i = 0; i < Model.Tags.Count(); i++)
                                    {
                                        var rowId = "row" + Convert.ToString(i);
                                        if (i != Model.Tags.Count() - 1)
                                        {
                                            <tr id="@rowId">
                                                <td id="tag_title_row @Convert.ToString(i)">Skill Tag @Convert.ToString(i + 1)<span style="color:red;">*</span></td>
                                                <td id="tag_name_row @Convert.ToString(i)"><input type="text" class="autocomplete" name="tagName" id="name_text @Convert.ToString(i)" value="@Model.Tags[i].TagName"></td>
                                                <td id="weight_title_row @Convert.ToString(i)">Weightage % @Convert.ToString(i + 1)<span style="color:red;">*</span></td>
                                                <td id="weight_name_row @Convert.ToString(i)"><input type="text" name="WeightName" id="name_text @Convert.ToString(i)" value="@Model.Tags[i].Weightage" class="key-numeric" maxlength="3"></td>
                                                <td id="efficiency_title_row @Convert.ToString(i)">Efficiency @Convert.ToString(i + 1)<span style="color:red;">*</span></td>
                                                <td id="efficiency_name_row @Convert.ToString(i)"><input name="efficiency" id="efficiency_name @Convert.ToString(i)" value="@Model.Tags[i].Proficiency" class="efficiency" style="width:130px;"></td>
                                                <td><a href="#" style="color:black;" onclick="delete_row('@Convert.ToString(i)');"><span class="glyphicon glyphicon-minus"></span></a></td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr id="@rowId">
                                                <td id="tag_title_row @Convert.ToString(i)">Skill Tag @Convert.ToString(i + 1)<span style="color:red;">*</span></td>
                                                <td id="tag_name_row @Convert.ToString(i)"><input type="text" class="autocomplete" name="tagName" id="tag_name" value="@Model.Tags[i].TagName"></td>
                                                <td id="weight_title_row @Convert.ToString(i)">Weightage % @Convert.ToString(i + 1)<span style="color:red;">*</span></td>
                                                <td id="weight_name_row @Convert.ToString(i)"><input type="text" name="WeightName" id="weight_name" value="@Model.Tags[i].Weightage" class="key-numeric" maxlength="3"></td>
                                                <td id="efficiency_title_row @Convert.ToString(i)">Efficiency @Convert.ToString(i + 1)<span style="color:red;">*</span></td>
                                                <td id="efficiency_name_row @Convert.ToString(i)"><input name="efficiency" id="efficiency_name" value="@Model.Tags[i].Proficiency" class="efficiency" style="width:130px;"></td>
                                                <td><a href="#" style="color:black;" onclick="delete_row('@Convert.ToString(i)');"><span class="glyphicon glyphicon-minus"></span></a> <a href="#" style="color:black;" onclick=" add_row();"><span class="glyphicon glyphicon-plus" /></a>  </td>
                                            </tr>
                                        }
                                    }
                                }
                            }
                        </table>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6"></div>
                <div class="col-md-2 col-md-offset-4">
                    @(Html.Kendo().Button()
                    .Name("btnCancel").Icon("cancel")
                    .HtmlAttributes(new { type = "button" })
                    .Content("Cancel")
                    .Events(ev => ev.Click("onCancelClick")))

                    @(Html.Kendo().Button()
                    .Name("btnSave").Icon("tick")
                .HtmlAttributes(new { type = "button" })
                    .Content("Save"))
                </div>
            </div>
            <div id="modalConfirmYesNo" class="modal fade">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button"
                                    class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 id="lblTitleConfirmYesNo" class="modal-title">Confirmation</h4>
                        </div>
                        <div class="modal-body">
                            <p id="lblMsgConfirmYesNo"></p>
                        </div>
                        <div class="modal-footer">
                            <button id="btnYesConfirmYesNo"
                                    type="button" class="btn btn-primary">
                                Yes
                            </button>
                            <button id="btnNoConfirmYesNo"
                                    type="button" class="btn btn-default">
                                No
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="SuccessModel" role="dialog" onclick="onCancelClick();">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" onclick="onCancelClick();">&times;</button>
                            <h4 class="modal-title"><span id="msgMain">Success.</span></h4>
                        </div>
                        <div class="modal-body">
                            <p id="msgContent">Some text in the modal.</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" onclick="onCancelClick();">Cancel</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
    <div class="modal fade" id="addPositionPopup" role="dialog">
        <form id="postionForm">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"><span>Add tag</span></h4>
                    </div>
                    <div class="modal-body">

                        @Html.Partial("~/Views/Shared/EditorTemplates/PostionEditorTemplete.cshtml", new Silicus.Ensure.Web.Models.PositionViewModel())
                    </div>
                    <div class="modal-footer">
                        <button type="button" style="width:70px;" onclick="savePostion()" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>

            </div>
        </form>
    </div>
</div>


<script>
    $("#OptionalQuestion").change(function(){
        var oQuestion=parseInt(100) -parseInt($(this).val());
        $("#PracticalQuestion").val(parseInt(oQuestion));
    });
    $("#PracticalQuestion").change(function(){
        var oQuestion=parseInt(100) -parseInt($(this).val());
        $("#OptionalQuestion").val(parseInt(oQuestion));
    });


    function savePostion()
    {
        if($("#postionForm").valid())
        {
            $.ajax({
                type: "POST",
                url: '/Positions/PositionSave',
                data: $('#postionForm').serialize(),
                success: function (returndata) {
                    $("#addPositionPopup").modal('hide');
                    var $PositionDrpSelect=$('#Position').data('kendoDropDownList');
                    var multidata=$PositionDrpSelect.dataSource.data();
                    multidata.unshift({ PositionName: returndata.PositionName, PositionName: returndata.PositionName});
                    var selectedValues=$PositionDrpSelect.value();
                    selectedValues.push(returndata.PositionName);
                    $PositionDrpSelect.value(selectedValues);
                    $("#postionForm").trigger("reset");
                }
            });
        }
        else
        {
            $('#postionForm').submit();
        }
    }

    function AddPosition()
    {
        // $("#tagForm").kendoValidator();
        $("#postionForm").kendoValidator({
            rules: {
                tagNamevalidation: function (input, params) {
                    if (input.is("[name='PositionName']") && input.val() != "") {
                        var bool=isTagNameAvailable("", input.val());
                        if(!bool)
                        {
                            input.attr("data-tagNamevalidation-msg", "Position name already exist.");
                            return false;
                        }
                    }

                    return true;
                }
            }
        });

        $("#addPositionPopup").modal('show');
    }

    function isTagNameAvailable(existingName,updatedName)
    {
        var isAvailable = true;
        if (existingName != updatedName) {
            $.ajax({
                type: "POST",
                url: '/Positions/IsDuplicatePositionName',
                async: false,
                data: { PositionName: updatedName },
                success: function (returndata) {
                    if (returndata == true) {
                        isAvailable = true;
                    }
                    else {
                        isAvailable = false;
                    }
                }
            });
        }
        return isAvailable;
    }

    var TagList = [];
    $(document).ready((function () {
        var tags = '';
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetTags", "TestSuite")',
            dataType: "json",
            success: function (data) {
                $.each(data, function (i, tag) {
                    TagList.push(tag["TagName"]);
                });
                loadCommon();
            },
            error: function (errorMsg) {
                toastr.error(errorMsg);
            }
        });

        $("#btnSave").click(function () {

            if ($("form").valid()&&validateTestSuite()) {
                tags = '';
                var TestSuiteId = $("#TestSuiteId").val();
                var IsCopy = $("#IsCopy").val();
                var TestSuiteName = $("#TestSuiteName").val();
                var Duration = $("#Duration").val();
                var Position = $("#Position").val();
                var Competency = $("#Competency").val();
                var ProjectName = $("#ProjectName").val();
                var FromExperience = $("#FromExperience").val();
                var ToExperience = $("#ToExperience").val();
                var OptionalQuestion = $("#OptionalQuestion").val();
                var PracticalQuestion = $("#PracticalQuestion").val();
                var Status = $("#Status").val();
                var Weights ='';
                var Proficiency='';
                $('#tag_table tr td input[type=text][name=tagName]').each(function () {
                    if (tags == '')
                    {
                        tags += $(this).val();
                    }
                    else
                    {
                        tags += "," + $(this).val();
                    }
                })

                $('#tag_table tr td input[type=text][name=WeightName]').each(function () {
                    if(Weights == '')
                    {
                        Weights += $(this).val();
                    }
                    else
                    {
                        Weights += "," + $(this).val();
                    }
                })

                $('#tag_table tr td input[name=efficiency]').each(function () {
                    if(Proficiency == '')
                    {
                        Proficiency += $(this).val();
                    }
                    else
                    {
                        Proficiency += "," + $(this).val();
                    }
                })

                $.ajax(
                {
                    type: "POST",
                    url: "Save",
                    data: {
                        TestSuiteId: TestSuiteId,
                        IsCopy: IsCopy,
                        TestSuiteName: TestSuiteName,
                        Duration: Duration,
                        Position: Position,
                        Competency: Competency,
                        PrimaryTagNames: tags,
                        Weights: Weights,
                        Proficiency: Proficiency,
                        ProjectName: ProjectName,
                        Status: Status,
                        FromExperience:FromExperience,
                        ToExperience : ToExperience,
                        OptionalQuestion : OptionalQuestion,
                        PracticalQuestion :PracticalQuestion,
                    },
                    success: function (response) {
                        if (response != null && response.status == "success") {
                            if (IsCopy == "True") {
                                ShowMessage("Test suite copy created successfully.",true);
                            }
                            else if (TestSuiteId == 0) {
                                ShowMessage("Test suite created successfully.",true);
                            }
                            else {
                                ShowMessage("Test suite updated successfully.",true);
                            }
                        } else {
                            ShowMessage(response.message, 0);
                        }
                    },
                    error: function (response) {
                        toastr.error("error.");
                    }
                });
            }
            else{
                $("form").submit();
                validateTestSuite();
            }
        });
    }
    ));

    $(document).ready(function () {
        if (@Model.TestSuiteId== 0) {
            $('#tag_table').append('<tr><td id="tag_title_row">Skill Tag 1<span style="color:red;">*</span></td><td id="tag_name_row"><input type="text" data-val="true" data-val-required="Tag cant be null!." name="tagName" id="tag_name" class="autocomplete"></td><td id="weight_title_row">Weightage % 1<b style="color:Red;">*</b></td><td id="weight_name_row"><input type="text" data-val="true" data-val-required="Weight cant be null!."  name="WeightName" id="weight_name" class="key-numeric" maxlength="3"></td><td id="efficiency_title_row">Efficiency 1<b style="color:Red;">*</b></td><td id="efficiency_name_row"><input data-val="true" data-val-number="Efficiency must be a number." data-val-required="Efficiency is required!" id="efficiency_name" name="efficiency" id="efficiency_name" class="efficiency" style="width:130px;"></td><td><a href="#" style="color:black"  onclick="add_row();"><span class="glyphicon glyphicon-plus" /></a>  </td></tr>')
        }
    });

    function add_row() {
        var rowNum=0;
        var tableContent='';
        $('#tag_table tr').each(function () {
            var tagName = $(this).find("td input[type=text][name=tagName]").val();
            var weightName = $(this).find("td input[type=text][name=WeightName]").val();
            var efficiencyValue = $(this).find("td input[name=efficiency]").val();
            tableContent += "<tr id='row" + rowNum + "'><td id='tag_title_row" + rowNum + "'>" + "Skill Tag " + (parseInt(rowNum)+1) + "<span style='color:red;'>*</span>" + "</td><td id='tag_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Tag " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='autocomplete' name='tagName' id='name_text" + rowNum + "' value='" + tagName + "'>" + "</td><td id='weight_title_row" + rowNum + "'>" + "Weightage % " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='weight_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Weight " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='key-numeric' maxlength='3' name='WeightName'  id='name_text" + rowNum + "' value='" + weightName + "'>" + "</td><td id='efficiency_title_row" + rowNum + "'>" + "Efficiency " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='efficiency_name_row" + rowNum + "'><input id='name_text" + rowNum + "' id='efficiency_name' value='" + efficiencyValue + "' name='efficiency' class='efficiency' style='width:130px;'></td><td><a href='#' style='color:black'  onclick='delete_row("+rowNum+");'><span class='glyphicon glyphicon-minus'></span></a></td></tr>";
            rowNum=rowNum + 1;
        })
        tableContent += "<tr id='row" + rowNum + "'><td id='tag_title_row" + rowNum + "'>" + "Skill Tag " + (parseInt(rowNum)+1) + "<span style='color:red;'>*</span>" + "</td><td id='tag_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Tag " +parseInt(parseInt(rowNum)+parseInt(1) ) + " cant be null!.' class='autocomplete' name='tagName' id='name_text" + rowNum + "' value='" + '' + "'>" + "</td><td id='weight_title_row" + rowNum + "'>" + "Weightage % " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='weight_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Weight " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='key-numeric' maxlength='3' name='WeightName'  id='name_text" + rowNum + "' value='" + '' + "'>" + "</td><td id='efficiency_title_row" + rowNum + "'>" + "Efficiency " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='efficiency_name_row" + rowNum + "'><input id='name_text" + rowNum + "' id='efficiency_name' value='" + '' + "' name='efficiency' class='efficiency' style='width:130px;'></td><td><a href='#' style='color:black'  onclick='delete_row("+rowNum+");;'><span class='glyphicon glyphicon-minus'></span></a> <a href='#'  style='color:black'  onclick='add_row();'><span class='glyphicon glyphicon-plus' ></span></a>  </td></tr>";
        $("#tag_table > tbody").html(tableContent)
        loadCommon();
    }

    function delete_row(no) {
        var $confirm = $("#modalConfirmYesNo");
        $confirm.modal('show');
        $("#lblTitleConfirmYesNo").html("Delete Confirmation!");
        $("#lblMsgConfirmYesNo").html("Are you sure want to delete the tag?");
        $("#btnYesConfirmYesNo").off('click').click(function () {
            $confirm.modal("hide");
            document.getElementById("row" + no + "").outerHTML = "";
            var table_len = (document.getElementById("tag_table").rows.length) - 1;
            var rowNum=0;
            var tableContent='';
            $('#tag_table tr').each(function () {
                var tagName = $(this).find("td input[type=text][name=tagName]").val();
                var weightName = $(this).find("td input[type=text][name=WeightName]").val();
                var efficiencyValue = $(this).find("td input[name=efficiency]").val();
                if(rowNum == table_len)
                {
                    if(table_len != 0)
                    {
                        tableContent += "<tr id='row" + rowNum + "'><td id='tag_title_row" + rowNum + "'>" + "Skill Tag " + (parseInt(rowNum)+1) + "<span style='color:red;'>*</span>" + "</td><td id='tag_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Tag " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='autocomplete' name='tagName' id='name_text" + rowNum + "' value='" + tagName + "'>" + "</td><td id='weight_title_row" + rowNum + "'>" + "Weightage % " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='weight_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Weight " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='key-numeric' maxlength='3' name='WeightName'  id='name_text" + rowNum + "' value='" + weightName + "'>" + "</td><td id='efficiency_title_row" + rowNum + "'>" + "Efficiency " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='efficiency_name_row" + rowNum + "'><input id='name_text" + rowNum + "' id='efficiency_name' value='" + efficiencyValue + "' name='efficiency' class='efficiency' style='width:130px;'></td><td><a href='#' style='color:black' onclick='delete_row("+rowNum+");'><span class='glyphicon glyphicon-minus'></span></a> <a href='#' style='color:black;' onclick='add_row();'><span class='glyphicon glyphicon-plus' ></span></a></td></tr>";
                    }
                    else
                    {
                        tableContent += "<tr id='row" + rowNum + "'><td id='tag_title_row" + rowNum + "'>" + "Skill Tag " + (parseInt(rowNum)+1) + "<span style='color:red;'>*</span>" + "</td><td id='tag_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Tag " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='autocomplete' name='tagName' id='name_text" + rowNum + "' value='" + tagName + "'>" + "</td><td id='weight_title_row" + rowNum + "'>" + "Weightage % " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='weight_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Weight " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='key-numeric' maxlength='3' name='WeightName'  id='name_text" + rowNum + "' value='" + weightName + "'>" + "</td><td id='efficiency_title_row" + rowNum + "'>" + "Efficiency " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='efficiency_name_row" + rowNum + "'><input id='name_text" + rowNum + "' id='efficiency_name' value='" + efficiencyValue + "' name='efficiency' class='efficiency' style='width:130px;'></td><td> <a href='#' style='color:black'  onclick='add_row();'><span class='glyphicon glyphicon-plus' ></span></a></td></tr>";
                    }
                }
                else
                {
                    tableContent += "<tr id='row" + rowNum + "'><td id='tag_title_row" + rowNum + "'>" + "Skill Tag " + (parseInt(rowNum)+1) + "<span style='color:red;'>*</span>" + "</td><td id='tag_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Tag " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='autocomplete' name='tagName' id='name_text" + rowNum + "' value='" + tagName + "'>" + "</td><td id='weight_title_row" + rowNum + "'>" + "Weightage % " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='weight_name_row" + rowNum + "'>" + "<input type='text' data-val='true' data-val-required='Weight " + parseInt(parseInt(rowNum)+parseInt(1) )+ " cant be null!.' class='key-numeric' maxlength='3' name='WeightName'  id='name_text" + rowNum + "' value='" + weightName + "'>" + "</td><td id='efficiency_title_row" + rowNum + "'>" + "Efficiency " + (parseInt(rowNum)+1) + "<b style='color:Red;'>*</b>" + "</td><td id='efficiency_name_row" + rowNum + "'><input id='name_text" + rowNum + "' id='efficiency_name' value='" + efficiencyValue + "' name='efficiency' class='efficiency' style='width:130px;'></td><td><a href='#' style='color:black'  onclick='delete_row("+rowNum+");'><span class='glyphicon glyphicon-minus'></span></a></td></tr>";
                }
                rowNum=rowNum + 1;
            })
            $("#tag_table > tbody").html(tableContent)
            loadCommon();
        });
        $("#btnNoConfirmYesNo").off('click').click(function () {
            $confirm.modal("hide");
        });
    }

    //Table JS End

    $(document).ready(function () {
        if ($('.validation-summary-errors>ul>li').is(':empty')) { $("#messageDiv").hide(); }
        else if ($('.validation-summary-errors>ul>li').text() != "")
        { ShowMessage($('.validation-summary-errors>ul>li').text(), 0); }
        else { $("#messageDiv").hide(); }
    });

    function onCancelClick()
    {
        window.location = '@Url.Action("List", "TestSuite")';
    }

    $(document).ready(function () {
        if("@ViewBag.Type"=="New")
        {
            $("#Duration").val('');
            $("#OptionalQuestion").val('');
            $("#PracticalQuestion").val('');
        }
    });
    $(function () {
        $("form").kendoValidator();
    });

    function validateTestSuite() {
        var isError="0";
        var isWeight;
        var totalWeight=0;
        $('#tag_table').find('tr').each(function () {
            if($(this).find('td input[name=efficiency]').val()=='0')
            {
                isError = "efficiencyBlank";
                return false;
            }
        });

        $('#tag_table tr td input[type=text][name=WeightName]').each(function () {
            if($(this).val()==0)
            {
                isWeight=0;
            }
        });
        $('#tag_table tr td input[type=text][name=WeightName]').each(function () {
            totalWeight+=parseInt($(this).val());
        });


        if(isError=="efficiencyBlank")
        {
            ShowMessage("Efficiency can't be blank.", 0);
            return false;
        }
        else if(totalWeight != '100')
        {
            ShowMessage("Test suite weighatage should be 100 percent.", 0);
            return false;
        }
        else if(isError == "duplicateTag")
        {
            ShowMessage("Tag name should be unique in skill tags.", 0);
            return false;
        }
        else if(isWeight == 0)
        {
            ShowMessage("Weight can't be zero.", 0);
            return false;
        }
        return true;
    }

    function loadCommon()
    {
        $(".autocomplete").kendoAutoComplete({
            dataSource: TagList,
            filter: "contains",
            minLength: 2,
            placeholder: "Select tag",
            seperator: ","
        });

        $(".efficiency").kendoDropDownList({
            dataTextField: "name",
            dataValueField: "id",
            dataSource: [
                { name: '--Select--', id: '0' },
                { name: '@Convert.ToString(Proficiency.Beginner)', id: '@Convert.ToInt32(Proficiency.Beginner)' },
                { name: '@Convert.ToString(Proficiency.Intermediate)', id: '@Convert.ToInt32(Proficiency.Intermediate)' },
                { name: '@Convert.ToString(Proficiency.Expert)', id: '@Convert.ToInt32(Proficiency.Expert)' }
            ]
        });
        $('.key-numeric').keypress(function(e) {
            var verified = (e.which == 8 || e.which == undefined || e.which == 0) ? null : String.fromCharCode(e.which).match(/[^0-9]/);
            if (verified) {e.preventDefault();}
        });
    }
</script>
<style>
    #tag_table td {
        padding: 5px;
    }

    #tag_table input {
        width: 172px;
    }
</style>

<script>

    window.onbeforeunload = function () {
        return "Do you really want to close?";
    };
</script>

