@model Silicus.Ensure.Models.DataObjects.ProjectDetail
@using Kendo.Mvc.UI;
@using Silicus.Ensure.Models.DataObjects

@{
    ViewBag.Title = "User Dashboard";
}

<div class="main-content">
	<div class="header">
		<h1 class="page-title">
			<i class="fa fa-dashboard"></i>Dashboard
		</h1>
		<div class="search">
			<input type="text" placeholder="Search">
            <i class="fa fa-search"></i>
        </div>
	</div>
	<div class="intro">
		<ul class="clearfix">
			<li>
				<div class="intro-content">
					<div class="circle">
						<i class="fa fa-calendar"></i>
					</div> <!-- /circle -->
					<div class="intro-info">
						June 4, 2013 <span>Tuesday, 12:06</span>
					</div> <!-- /intro-info -->
				</div> <!-- /intro-content -->
			</li>
			<li>
				<div class="intro-content">
					<div class="circle">
						<div class="arc" id="arc-2"><div class="arc-in green"></div></div>
						<i class="fa fa-bar-chart-o"></i>
					</div> <!-- /circle -->
					<div class="intro-info">
						$754,28 <span>Total balance</span>
					</div> <!-- /intro-info -->
				</div> <!-- /intro-content -->
			</li>
			<li>
				<div class="intro-content">
					<div class="circle">
						<div class="arc" id="arc-3"><div class="arc-in blue"></div></div>
						<i class="fa fa-tag"></i>
					</div> <!-- /circle -->
					<div class="intro-info">
						+364 <span>New orders</span>
					</div> <!-- /intro-info -->
				</div> <!-- /intro-content -->
			</li>
			<li>
				<div class="intro-content">
					<div class="circle">
						<div class="arc" id="arc-4">
							<div class="arc-in yellow"></div>
							<div class="arc-in arc-sec yellow"></div>
						</div>
						<i class="fa fa-user"></i>
					</div> <!-- /circle -->	
					<div class="intro-info">
						+1584 <span>New visitors</span>
					</div> <!-- /intro-info -->
				</div> <!-- /intro-content -->
			</li>
		</ul>
	</div>

					
	<div class="fluid mt20">
        <div class="kendogrid">
        @if (Request.IsAuthenticated)
        { 
             @(Html.Kendo().Grid<ProjectDetail>().Name("productDetailGrids")
            .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model =>
                    {
                        model.Id(p => p.ProjectDetailId);
                        model.Field(p => p.ProjectDetailId).Editable(false);

                    })
                    .Read(read => read.Action("GetProjectDetails", "Project"))
                    .Create(update => update.Action("CreateProject", "Project"))
                    .Update(update => update.Action("UpdateProject", "Project"))
                    .Destroy(update => update.Action("DeleteProject", "Project"))
                )

                .Columns(columns =>
                {
                    columns.Bound(p => p.ProjectName).Width(50);
                    columns.Bound(p => p.Status).Width(50);
                    columns.Command(command => { command.Edit(); command.Destroy(); }).Width(160);
                })

                .Pageable()
                .Sortable()
                .ToolBar(toolbar => toolbar.Create())
                .Editable(ed => ed.Mode(GridEditMode.InLine))
    
            )
        }
        </div>
	</div> 
</div> <!-- /main-content -->

<script>
        //register custom validation rules
        (function ($, kendo) {
            $.extend(true, kendo.ui.validator, {
                rules: { // custom rules
                    productnamevalidation: function (input, params) {
                        //check for the rule attribute 
                        if (input.filter("[data-val-projectnamevalidation]").length && input.val()) {
                            return /^[A-Z]/.test(input.val());
                        }
                        return true;
                    }
                },
                messages: { //custom rules messages
                    productnamevalidation: function (input) {
                        // return the message text
                        return input.attr("data-val-projectnamevalidation");
                    }
                }
            });
        })(jQuery, kendo);

        //show server errors if any
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                toastr.error(message);
            }
        }
</script>
	
