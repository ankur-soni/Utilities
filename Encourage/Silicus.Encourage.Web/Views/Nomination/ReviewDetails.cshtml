@model Silicus.Encourage.Web.Models.ReviewSubmitionViewModel

<div class="row border-bottom">
    <nav class="navbar  " role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
</div>
<div class="row wrapper border-bottom white-bg page-heading border-bottom">
    <div class="col-sm-12">
        <h1>Review Details</h1>
    </div>
</div>
<style>
    .container .content {
        display: none;
        padding: 5px;
    }
</style>
<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        @using (Html.BeginForm())
        {

            @Html.HiddenFor(modelItem => modelItem.ReviewerId)
            @Html.HiddenFor(modelItem => modelItem.NominationId);
            <table border="1" style="width:80%" class="white-bg">
                <thead>
                    <tr>
                        <th>
                            ReviewFor:
                        </th>

                        <td>
                            @Html.DisplayFor(modelItem => modelItem.NomineeName)
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Project/Department:
                        </th>

                        <td>
                            @Html.DisplayFor(modelItem => modelItem.ProjectOrDepartment)
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Manager:
                        </th>

                        <td>
                            @Html.DisplayFor(modelItem => modelItem.Manager)
                        </td>
                    </tr>
                </thead>
            </table>
            <br />
            <table border="1" style="width:80%" class="white-bg">
                <tr>
                    <th>
                        @Html.DisplayFor(modelItem => modelItem.Manager) Says:
                    </th>

                    <td>

                        <span class="header">Click here to see comment.</span>
                        <textarea class="content" style="width:100%" readonly>@Model.ManagerComment</textarea>

                    </td>
                </tr>
            </table>
            <br />
            <table border="1" style="width:80%" class="white-bg">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Criteria</th>
                        <th>ManagerComment</th>
                        <th>ReviewerComment</th>
                        <th>Credits</th>
                    </tr>
                </thead>
                @{
                                                                var j = 0;
                                                                var k = 0;
                }
                <tbody>
                    @foreach (var item in Model.Criterias)
                    {

                        <tr>
                            <td class="col-md-1">@item.Id</td>
                            @Html.Hidden("CriteriaId", @item.Id)
                            <td class="col-md-3">@item.Title</td>

                            @if (k < Model.ManagerComments.Count() && Model.ManagerComments[k].CriteriaId == item.Id)
                            {
                                <td class="col-md-3">@Model.ManagerComments[k].Comment</td>
                                k++;
                            }
                            else
                            {
                                <td class="col-md-3"></td>
                            }


                            <td class="col-md-3">@Html.TextArea("Comments[" + @j + "].Comment", Model.Comments[j].Comment, htmlAttributes: new { @class = "col-md-12", @readonly = "readonly" })</td>

                            @Html.Hidden("Comments[" + @j + "].Id", item.Id)


                            <td class="col-md-1">@Html.CheckBox("Comments[" + j + "].Credit", Model.Comments[j].Credit, htmlAttributes: new { @class = "col-md-12", @disabled = "disabled" })</td>
                        </tr>

                            j++;
                    }
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <th>Credit Given</th>
                        <td class="text-center">@ViewBag.creditGiven</td>
                    </tr>
                </tbody>
                @if (Model.ManagerComments != null)
                {
                    for (int i = 0; i < Model.ManagerComments.Count; i++)
                    {
                        @Html.HiddenFor(model => Model.ManagerComments[i].Comment)
                    }
                }
            </table>
    <input type="button" value="Back" class="btn btn-default" onclick="location.href='@Url.Action("SavedReviews","Nomination")'" />
        }
    </div>
</div>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>

<script>


    $(".header").click(function () {

        $header = $(this);
        //getting the next element
        $content = $header.next();
        //open up the content needed - toggle the slide- if visible, slide up, if not slidedown.
        $content.slideToggle(500, function () {
            //execute this after slideToggle is done
            //change text of header based on visibility of content div
            $header.text(function () {
                //change text based on condition
                return $content.is(":visible") ? "Click here to hide comment." : "Click here to see comment.";
            });
        });

    });

</script>

