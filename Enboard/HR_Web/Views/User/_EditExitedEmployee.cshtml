@model Models.AddEmployeeModel
@{
    ViewBag.Title = "Add Offer Candidate To Employee";
    Layout = null;
}


<style>
    .label {
        color: #6D6767;
        font-size: inherit;
    }
</style>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/EDP_Validations.js"></script>

<div class="container">

    <!-- Row start -->
    @using (Html.BeginForm("EditExitedEmployees", "User", FormMethod.Post, new { id = "frmAssignPNo" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.UserID)
        @Html.HiddenFor(T => T.EmployeeMasterId)
        <div class="panel panel-primary" id="succdiv">
            <div class="panel-heading clearfix">
                <i class="icon-calendar"></i>
                <h3 class="panel-title">Add to Employee List</h3>
            </div>

            <div class="row">
                <div class="col-md-5 col-sm-5 col-xs-12">
                    <div class="panel-body">
                        <div class="form-group">
                            @Html.Label("Employee No", new { @class = "label" })
                            @Html.TextBoxFor(m => m.EmpNo, new { id = "txtEmpNo", @class = "form-control", placeholder = "Employee No", tabindex = 1 })
                            @Html.ValidationMessageFor(model => model.EmpNo, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.Label("Email Address", new { @class = "label" })
                            @Html.TextBoxFor(m => m.Email, new { id = "txtEmail", @class = "form-control", placeholder = "John.Doe@silicus.com", tabindex = 3 })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.Label("Joining Date", new { @class = "label" })
                            @Html.TextBoxFor(m => m.JoiningDate, String.Format("{0:yyyy/MM/dd}", Model.JoiningDate), new { id = "txtJoiningDate", @class = "form-control", placeholder = "Joining Date", tabindex = 5 })
                        </div>
                        <div class="form-group">
                            
                            @Html.Label("Add To User Activation ?", new { @class = "label" })
                            @Html.CheckBoxFor(m => m.IsActive, new { id = "rbIsActive", tabindex =5 })
                            
                        </div>
                    </div>

                </div>

                <div class="col-md-5 col-sm-5 col-xs-12">
                    <div class="panel-body">
                        <div class="form-group">
                            @Html.Label("Employee Name", new { @class = "label" })
                            @Html.TextBoxFor(m => m.EmpName, new { id = "txtEmpName", @class = "form-control", placeholder = "Employee Name", tabindex = 2 })
                            @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Date of Birth", new { @class = "label" })
                            @Html.TextBoxFor(m => m.DOB, String.Format("{0:yyyy-MM-dd}", Model.DOB), new { id = "txtDOB", placeholder = "Date of Birth", @class = "form-control", tabindex = 4 })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.Label("Leaving Date", new { @class = "label" })<span class="red">*</span>
                            @Html.TextBoxFor(m => m.LeavingDate, "", new { id = "txtleavingDate", placeholder = "Leaving Date", @class = "form-control", tabindex = 3 })
                            @Html.ValidationMessageFor(model => model.LeavingDate, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
            </div>

        </div>
        <a href="#" id="btnSave" class="btn btn-primary" tabindex="14"><span class="glyphicon glyphicon-saved"></span> Save</a>
            <a href="#" id="btnCancel" class="btn btn-primary" tabindex="15"><span class="glyphicon glyphicon-remove"></span> Cancel</a>
            @Html.HiddenFor(T => T.IsEmployeeEditMode)
    }
</div>




<script type="text/javascript">

    $(document).ready(function () {
        $('#txtDOB').datepicker({
            maxDate: 0,
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            dateFormat: 'dd/mm/yy',

        });

        $('#txtleavingDate').datepicker({
            maxDate: 0,
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            dateFormat: 'dd/mm/yy',

        });

        $('#txtJoiningDate').datepicker({
            maxDate: 0,
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            dateFormat: 'dd/mm/yy',

        });

        $('.ui-datepicker').css('font-size', $('.ui-datepicker').width() / 17 + 'px');

        //Datepicker validation 
        //$('.hasDatepicker').attr('readonly', true);
    });



    $('#btnSave').click(function () {


        var form = $('#frmAssignPNo');
        $.validator.unobtrusive.parse(form);

        if (form.valid()) {

            ajaxindicatorstart('Loading.. please wait..');
            $.ajax({
                url: "/User/EditExitedEmployees",
                data: form.serialize(),
                cache: false,
                type: 'POST',
                success: function (data) {
                    if (data.result) {
                        $.ajax({
                            url: "/User/ExitedEmployees",
                            cache: false,
                            type: 'GET',
                            data: {
                                searchString: "", // $('#focusedInput').val().trim().toLowerCase(),
                            },
                            success: function (data) {

                                $("body").html(data);
                                ajaxindicatorstop();
                            },
                            error: function () {
                                alert('some error occured')
                                ajaxindicatorstop();
                            }
                        });
                    }
                },
                error: function () {
                    alert('some error occured')
                    ajaxindicatorstop();
                }
            });
        }

    });


    $('#btnCancel').click(function () {
        ajaxindicatorstart('Loading.. please wait..');
        $.ajax({
            url: "/User/ExitedEmployees",
            cache: false,
            type: 'GET',
            success: function (data) {

                $("body").html(data);
                ajaxindicatorstop();
            },
            error: function () {
                alert('some error occured')
                ajaxindicatorstop();
            }
        });

    });




</script>
