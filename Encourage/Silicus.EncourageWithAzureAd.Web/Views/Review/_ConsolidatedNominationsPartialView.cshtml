@model Silicus.EncourageWithAzureAd.Web.Models.ConsolidatedNominationsViewModel
    @{
        Layout = null;
    }
<table class="table table-hover white-bg content" id="consolidatedHrView">
    <thead>
    <tr>
        <th rowspan="2">Employee Name</th>
        <th rowspan="2">Rating By</th>
        <th rowspan="2">All Criteria</th>
        @{
            var ccCount = 1;
        }
        @foreach (var criteria in Model.Criterias)
        {
            <th colspan="@Model.Reviewers.Count" style="text-align: center;">
                <a href="#" title="@criteria.Title">
                    @("Criteria " + ccCount)
                </a>
            </th>
            ccCount++;
        }
    </tr>
    <tr>
        @foreach (var criteria in Model.Criterias)
        {
            var revCount = 1;
            foreach (var reviewer in Model.Reviewers)
            {
                <th>
                    <a href="#" title="@reviewer.ReviewerName">
                        @("R" + revCount)
                    </a>
                </th>
                revCount++;
            }
        }
    </tr>
    </thead>
    <tbody>
    @{
        var nominationCount = 0;   
    }
    @foreach (var nomination in Model.Nominations)
    {
        <tr>
            <td rowspan="3">
                @nomination.UserName
            </td>
            <td>
                Manager
            </td>
            <td class="averagePoints">
                @((nomination.ManagerComments.Any() ? nomination.ManagerComments.Average(a => (a.Rating * a.Weightage / 100.0)) : 0).ToString("F"))
            </td>
            @foreach (var criteria in Model.Criterias)
            {
                var managerComment = nomination.ManagerComments.FirstOrDefault(mc => mc.CriteriaId == criteria.Id);
                if (managerComment != null)
                {
                    <td class="points" colspan="@Model.Reviewers.Count"> @((managerComment != null ? managerComment.Rating * managerComment.Weightage / 100m : 0).ToString("F"))</td>
                }
                else
                {
                    <td colspan="@Model.Reviewers.Count" rowspan="3" class="notNominated">
                        Not nominated for this criteria
                    </td>
                }
            }
        </tr>
        <tr>
            <td>
                Reviewer
            </td>
            <td class="averagePoints">
                @((nomination.ReviewerComments.Any() ? nomination.ReviewerComments.Average(a => (a.Credit * a.Weightage / 100.0)) : 0).ToString("F"))
            </td>
            @foreach (var criteria in Model.Criterias)
            {
                var managerComment = nomination.ManagerComments.FirstOrDefault(mc => mc.CriteriaId == criteria.Id);
                if (managerComment != null)
                {
                    foreach (var reviewer in Model.Reviewers)
                    {
                        var reviewerComment = nomination.ReviewerComments.FirstOrDefault(rc => rc.ReviewerId == reviewer.Id && rc.CriteriaId == criteria.Id);
                        <td class="points">
                            @(reviewerComment != null ? (reviewerComment.Credit * reviewerComment.Weightage / 100m).ToString("F") : "-")
                        </td>
                    }
                }
            }
        </tr>
        <tr>

            <td>
                Final Score
            </td>
            <td class="averagePoints">
                <span class="averagePoints finalAverageScore_@nomination.NominationId">
                    @((nomination.ReviewerComments.Any() ? nomination.ReviewerComments.Average(a => (a.Credit * a.Weightage / 100.0)) : 0).ToString("F"))
                </span>
            </td>
            @{ var criteriaCount = 0; }
            @foreach (var criteria in Model.Criterias)
            {
                var managerComment = nomination.ManagerComments.FirstOrDefault(mc => mc.CriteriaId == criteria.Id);
                var reviewerComments = nomination.ReviewerComments.Where(rc => rc.CriteriaId == criteria.Id);
                var reviewerScore = 0.0;
                if (reviewerComments.Any())
                {
                    var averageRatings = reviewerComments.Average(r => r.Credit);
                    reviewerScore = managerComment != null ? averageRatings * managerComment.Weightage / 100.0 : 0;
                }
                if (managerComment != null)
                {
                    if (managerComment.FinalScore == 0)
                    {
                        managerComment.FinalScore = Convert.ToDecimal(reviewerScore);
                    }
                    <td colspan="@Model.Reviewers.Count" class="points">
                        @Html.Hidden("Nominations[" + nominationCount + "].ManagerComments[" + criteriaCount + "].NominationId", nomination.NominationId)
                        @Html.Hidden("Nominations[" + nominationCount + "].ManagerComments[" + criteriaCount + "].CriteriaId", criteria.Id)
                        @Html.Hidden("Nominations[" + nominationCount + "].ManagerComments[" + criteriaCount + "].FinalScore", managerComment.FinalScore, new { @class = "finalScore_" + nomination.NominationId })
                        @Html.Hidden("Nominations[" + nominationCount + "].ManagerComments[" + criteriaCount + "].AdminComment", managerComment.AdminComment )
                        <button type="button" onclick="openCommentPointEditor(@nominationCount, @criteriaCount)" class="btn btn-primary"><span id = "spnFinalPoints_@(nomination.NominationId)_@(criteria.Id)" style="font-weight: bold;">@managerComment.FinalScore.ToString("F") </span>&nbsp; <i class="glyphicon glyphicon-edit"></i></button>
                    </td>
                }
                criteriaCount++;
            }
        </tr>
        nominationCount++;
    }

    </tbody>
</table>