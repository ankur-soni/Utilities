

@*@model List<Models.LoginDetails>*@
@model PagedList.IPagedList<Models.AddEditUserModel>
@using PagedList;
@using PagedList.Mvc;
@{
    Layout = null;
    var downArrow = "~/images/down-arrow.png";
    var upArrow = "~/images/up-arrow.png";
    var downArrowPath = @Url.Content(downArrow);
    var upArrowPath = @Url.Content(upArrow);
}

<div class="box-body table-responsive">
    <table id="gridJobvitedetails" class="table table-bordered table-striped dataTable tablesorter" aria-describedby="example1_info">
        <thead style="background-color:#f8f8f8;color:#000;">
            <tr>
                <th style="border-bottom-width: 3px;min-width:130px "  data-sort='disabled' hidden="hidden"> Firstname </th>
                <th style="border-bottom-width: 3px;" data-sort='disabled' hidden="hidden"> Lastname </th>
                <th style="border-bottom-width: 3px;" data-sort='disabled'> Select </th>
                <th style="border-bottom-width: 3px;min-width:230px ">
                    Name 

                </th>

                <th style="border-bottom-width: 3px;" data-sort='disabled'> Email Address </th>
              @*//  <th style="border-bottom-width: 3px;" data-sort='disabled'> CountryCode </th>
                <th style="border-bottom-width: 3px;min-width:130px" data-sort='disabled'> Contact Number </th>*@
                @*<th style="border-bottom-width: 3px;">Offered Designation</th>*@
                <th style="border-bottom-width: 3px;min-width:300px" data-sort='disabled'> Joining Location </th>
                <th style="border-bottom-width: 3px;" data-sort='disabled'> Requisition Id </th>
                <th style="border-bottom-width: 3px;" data-sort='disabled'> Department </th>
                @*<th style="border-bottom-width: 3px;" data-sort='disabled'> Recruiters </th>*@


            </tr>
        </thead>

        <tbody>

            @if (Model != null && Model.Count > 0)
            {
                foreach (var user in Model)
                {
                    var @strUserFullName = user.FirstName + " " + user.LastName;
                    <tr>
                        @*<td id="empNo"></td>*@
                        <td style="border-bottom-width: 3px;" class="class1" hidden="hidden">
                            @Html.Raw(user.FirstName)

                        </td>
                        <td style="border-bottom-width: 3px;" class="class2" hidden="hidden">
                            @Html.Raw(user.LastName)

                        </td>
                        <td style="border-bottom-width: 3px;" class="class1">
                            <input type="checkbox" name="Modules" value="@user.IsCheck" />

                        </td>
                        <td align="left" class="className"><a data-target="#">@Html.Raw(strUserFullName)</a></td>

                        <td align="left" class="classEmail">@Html.Raw(user.Email)</td>
                        @*<td class="class9">@Html.Raw(user.CountryCode)</td>
                        <td class="classContactNo">@Html.Raw(user.ContactNumber)</td>*@
                        <td align="left" class="classJoine">@Html.Raw(user.JoiningLocation)</td>
                        <td align="left" class="class10">@Html.Raw(user.RequisitionID)</td>
                        <td align="left" class="class7">@Html.Raw(user.DepartmentName)</td>

                        @*<td class="class8">@Html.Raw(user.RecruiterName)</td>*@

                    </tr>
                }
            }
            else
            {
                <tr>
                    <td style="text-align: center;" colspan="10">
                        No Data Found
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>
<div id="contentPager">
    @if (Model.PageCount > 1)
    {
        @Html.PagedListPager(Model, Page => Url.Action("SyncCandidates", new { Page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }))
        string sortOrder = ViewBag.CurrentSort;
        int index = ViewBag.PageIndex != null ? ViewBag.PageIndex : 1;
        @Html.Hidden("hdnSortOrder", sortOrder)
        @Html.Hidden("hdnIndex", index)
    }

    </div>
    <script>
        var isUserExists;
        $(document).on("click", "#contentPager a", function () {
            
            ajaxindicatorstart('Loading.. please wait..');
            $.ajax({
                url: $(this).attr("href"),
                type: 'GET',
                cache: false,
                success: function (result) {
                    ajaxindicatorstop();
                    $('#divJobvitetDetailsContent').html(result);
                }
            });
            ajaxindicatorstop();
            return false;
        });
        function ShowJobViteDetails() {
           
            var page = 1;
            var searchString = "";
            var data = { page: page, sortOrder: "", searchString: searchString }
            ajaxindicatorstart('Please wait..');
            $.ajax({
                url: '/User/SyncCandidates/',
                success: function (data) {
                    $("#divJobvitetDetailsContent").html(data);
                    $('#modalJobViteDetails').show();
                    ajaxindicatorstop();
                },
                error: function (data) {
                    ajaxindicatorstop();
                    toastr.error("Error occurred while opening Change Request Modal form.");
                }
            });
          

        }

        function CloseJobViteDocumentDetails() {
            $('#modalJobViteDetails').hide();
        }


        function SaveJobViteDetails() {
            var jobViteCandidateList = [];
            var jobViteResponseList = [];
            var grid = document.getElementById('gridJobvitedetails');
            $("#gridJobvitedetails").find("input:checked").closest("tr").each(function (item, index) {
                jobViteCandidateList.push($(this));
            });
            for (var i = 0; i < jobViteCandidateList.length; i++) {
                var obj = {};
                obj.FirstName = jobViteCandidateList[i].find(".class1").html();
                obj.LastName = jobViteCandidateList[i].find(".class2").html();
                obj.Email = jobViteCandidateList[i].find(".classEmail").html();
             //   obj.ContactNumber = jobViteCandidateList[i].find(".classContactNo").html();
                obj.JoiningLocation = jobViteCandidateList[i].find(".classJoine").html();
                obj.RequisitionID = jobViteCandidateList[i].find(".class10").html();
                obj.DepartmentName = jobViteCandidateList[i].find(".class7").html();
             //   obj.CountryCode = jobViteCandidateList[i].find(".class9").html();
                jobViteResponseList.push(obj);
            }

          //  ChechIsUserExists(jobViteResponseList);
            //-------------------------------------------------------------------------
          
            $.ajax({
                url: "/User/IsFirstNameLastNameEmailDuplicateCheck",
                type: 'POST',
                async:true,
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify({ jobViteCandidateList: jobViteResponseList }),
                success: function (result) {
                    if (result == true) {
                        alert("User already exists.");
                    }
                    else {
                        ajaxindicatorstart('Loading.. please wait..');
                        $.ajax({
                            url: "/User/SaveJobeViteDetails",
                            type: 'POST',
                            contentType: "application/json",
                            dataType: "json",
                            data: JSON.stringify({ jobViteCandidateList: jobViteResponseList }),
                            success: function (result) {
                                if (result) {
                                   
                                    ajaxindicatorstart('Loading.. please wait..');
                                    $.ajax({
                                        url: "/User/UserList",
                                        cache: false,
                                        type: 'GET',
                                        data: {
                                            page: 1, sortOrder: "", searchString: ""
                                        },
                                        success: function (data) {
                                            $('#modalJobViteDetails').hide();
                                            window.location.reload();
                                            ajaxindicatorstop();
                                        },
                                        error: function () {
                                            alert('some error occured')
                                            ajaxindicatorstop();
                                        }
                                    });
                                }

                            },
                            error: function () {
                                //debugger;
                                alert('some error occured')
                                ajaxindicatorstop();

                            }
                        });
                    }
                    ajaxindicatorstop();
                },
                error: function () {
                    alert('some error occured')
                    ajaxindicatorstop();
                }
            });
        }

    
    </script>
