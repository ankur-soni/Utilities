@model Silicus.UtilityContainer.Models.ViewModels.UtilityUserRoleViewModel
@using Silicus.UtilityContainer.Models.DataObjects;
@{
    ViewBag.Title = "AddRolesToUserForAUtility";
}

<div class="row" style="width:80%;padding-bottom:10px;padding-top:25px">
    <div class="col-md-12 white-bg">
        <h2>Add Role To User For Utility</h2>
        <div class="form-horizontal">
            <hr />
            <div class="form-group" style="padding-top:20px">
                @Html.LabelFor(model => model.UtilityId, "Utility", htmlAttributes: new { @class = "control-label col-md-2 requiredfeild" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.UtilityId, (SelectList)ViewData["Utilities"], "Select", new { id = "utilityList", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UtilityId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleId, "Role", htmlAttributes: new { @class = "control-label col-md-2 requiredfeild" })
                <div class="col-md-10">

                    @Html.DropDownListFor(model => model.RoleId, new SelectList(Enumerable.Empty<SelectListItem>(), "ID", "RoleName"), "Select a Role", new { id = "rolesList", @class = "form-control" })
                    @Html.ValidationMessage("", new { @class = "text-danger", @id = "roleRequired" })

                </div>
            </div>

            <div class="form-group">
                @Html.Label("Users", htmlAttributes: new { @class = "control-label col-md-2 users requiredfeild" , style = "display:none;"})
                <div id="search" class="col-md-10" style = "display:none;">
                    <div>
                        <input type="text" id="employee-search" class="form-control col-md-10" placeholder="Search available employees by name" />
                    </div>
                </div>
            </div>

            <div class="form-group" id="users" style="display:none">
                <div class="col-md-2"></div>
                <div id='employeeList' class="col-md-10">
                    <div class="col-md-6" id="available-employees" style="padding-left:40px">
                        <span style="font-weight:bold" class="available-header">Available employees</span>
                        <hr style="margin-top:10px;margin-bottom:10px" />
                        <div id="available-contents" style="max-height:200px;overflow-y:auto;overflow-x:hidden;padding-left:40px"></div>
                    </div>
                    <div class="col-md-6" id="selected-employees" style="padding-left:40px">
                        <span style="font-weight:bold" class="selected-header">Selected employees</span>
                        <hr style="margin-top:10px;margin-bottom:10px" /> 
                        <div id="selected-contents" style="max-height:200px;overflow-y:auto;overflow-x:hidden;padding-left:40px"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-group" style="padding-top:20px;">
    <div class="col-md-2">
        <input type="button" value="Save" class="btn btn-primary" style="width:100%" id="add-role" />
    </div>
    <div class="col-md-2">
        <input type="button" value="Cancel" onclick="window.location.reload()" class="btn btn-primary" style="width:100%" />
    </div>
    <div class="col-md-2">
        <a href="@Url.Action("Index","Home")" class="btn btn-primary" style="width:100%">Back</a>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/knockout-3.1.0.debug.js"></script>
    <script src="~/Scripts/knockout-3.1.0.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.debug.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var lastSelectOption = $("#utilityList option:selected").text();
            $("#utilityList").click(function () {
                lastSelectOption = $("#utilityList option:selected");
            });

            function changeUtility(uID) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("FillRoles","Home")',
                    data: { utilityId: uID },
                    dataType: 'json',
                    success: function (data) {
                        $(".loader-overlay").hide();
                        var select = $("#rolesList");
                        select.empty();
                        select.append($('<option/>', {
                            value: 0,
                            text: "Select a Role"
                        }));
                        $.each(data, function (index, itemData) {
                            debugger;
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text

                            }));

                        });
                    },
                    error: function () { }
                });
            }

            $("#utilityList").change(function () {
                $(".loader-overlay").show();
                var uID = $(this).val();
                debugger;

                if (uID > 0) {
                    if ($("#utilityList").val().trim() != "" && parseInt($("#utilityList").val()) != 0 && $("#rolesList").val().trim() != "" && parseInt($("#rolesList").val()) != 0) {
                        if (!confirm("Do you want to change the utility to " + $("#utilityList option:selected").text())) {
                            lastSelectOption.prop("selected", true);
                            $(".loader-overlay").hide();
                        }
                        else {
                            $("#users").hide();
                            changeUtility(uID);
                        }
                    }
                    else {
                        changeUtility(uID);
                    }
                }
                else {
                    $(".loader-overlay").hide();
                    var select = $("#rolesList");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Select a Role"
                    }));
                    $("#users").css("display", "none");
                    $(".users").css("display", "none");
                    $("#search").css("display", "none");
                }
            });

            $("#add-role").click(function () {
                debugger;
                $(".loader-overlay").show();
                var selectedUserIds = [];
                var utilityId = parseInt($("#utilityList").val());
                var roleId = parseInt($("#rolesList").val());
                $("input:checkbox[class=available]:checked").each(function () {
                    selectedUserIds.push(parseInt($(this).attr('id')));
                });

                if (utilityId > 0) {
                    if (roleId > 0) {
                        if (selectedUserIds.length > 0) {
                            $.ajax({
                                type: 'POST',
                                url: "@Url.Action("AddRolesToUserForAUtility", "Home")",
                                data: { utilityId: utilityId, roleId: roleId, userIds: selectedUserIds },
                                success: function (data) {
                                    $(".loader-overlay").hide();
                                    swal("Success", "Roles added successfully.", "success");
                                },
                                error: function (data) {
                                    $(".loader-overlay").hide()
                                    swal("Error", "OOps! something went wrong.", "error");
                                }
                            });
                        }
                        else {
                            $(".loader-overlay").hide();
                            swal("Error", "Please select at least 1 employee.", "error");
                        }
                    }
                    else {
                        $(".loader-overlay").hide();
                        swal("Error", "Please select role.", "error");
                    }

                }
                else {
                    $(".loader-overlay").hide();
                    swal("Error", "Please select utility.", "error");
                }

            });


            $("#employee-search").keyup(function () {
                debugger;
                var searchData = $(this).val();
                var foundIds = [];
                $("div[id^=availableemp]").css("display", "none");
                if (searchData) {
                    var allEmployees = $("#available-employees #available-contents span").toArray();
                    $.each(allEmployees, function (i, v) {
                        if ($(this).text().toLowerCase().indexOf(searchData.toLowerCase()) != -1) {
                            foundIds.push(parseInt($(this).attr("id")));
                        } 
                    })

                    //var $found = allEmployees.find("div span:contains(" + searchData + ")").each(function () { $(this).parent().css("display", "block") });
                    $.each(foundIds, function (i, v) { $("div #availableemp"+ v +"").css("display", "block") })
                }
                else {
                    $("div[id^=availableemp]").css("display", "block");
                }
            });

            $("#rolesList").change(function (e) {
                debugger;
                $(".loader-overlay").show();
                var currentUtilityId = parseInt($("#utilityList").val());
                var currentRoleId = parseInt($("#rolesList").val());
                e.preventDefault();
                $("#roleRequired").empty();
                var data = $("#rolesList option:selected").val();
                if (currentRoleId > 0) {
                    $.ajax({
                        type: 'GET',
                        url: "@Url.Action("GetAllUsersByRoleInUtility", "Home")",
                        data: { utilityId: currentUtilityId, roleId: currentRoleId },
                        dataType: 'json',
                        success: function (data) {
                            $(".loader-overlay").hide();
                            $("#users").css("display", "block");
                            $(".users").css("display", "block");
                            $("#search").css("display", "block");
                            //var availableEmployeeContainer = $('#available-employees');
                            //var selectedEmployeeContainer = $('#selected-employees');

                            var availableEmployeeContainer = $('#available-contents');
                            var selectedEmployeeContainer = $('#selected-contents');
                            
                            $('#available-employees').contents(':not(".available-header")').empty();
                            $('#selected-employees').contents(':not(".selected-header")').empty();
                            //availableEmployeeContainer.empty();
                            //selectedEmployeeContainer.empty();

                            $(data.availableItems).each(function (index, value) {
                                addHtmlForAvailableEmployees(value.UserName, value.UserId, value.Status, availableEmployeeContainer)
                            });

                            $(data.selectedItems).each(function (index, value) {
                                addHtmlForSelectedEmployees(value.UserName, value.UserId, value.Status, selectedEmployeeContainer)
                            });

                        },
                        error: function (data) {
                            swal('Error', 'Oops! something went wrong.', 'error');
                        }
                    });
                }
                else {
                    $("#users").css('display', 'none');
                    $(".loader-overlay").hide();
                }

            })


            function addHtmlForAvailableEmployees(name, id, status, container) {
                debugger;
                $("<div id='availableemp" + id + "'>").appendTo(container);
                $('<input />', { type: 'checkbox', id: id, class: 'available', value: name, checked: status }).appendTo('#availableemp' + id + '');
                $('<span />', { 'id': id, text: name, style : "padding-left:10px" }).appendTo('#availableemp' + id + '');
                $('<br>').appendTo('#availableemp' + id + '');
            }
            function addHtmlForSelectedEmployees(name, id, status, container) {

                debugger;
                $('<span />', { 'id': 'selected' + id, text: name }).appendTo(container);
                $('<span id="selected' + id + '" style="padding-left:10px"><i class="fa fa-times" id="' + id + '" aria-hidden="true"  style="color:#0E69A8" ></i></span>').appendTo(container);
                $('<br id="' + id + '">').appendTo(container);
            }

            $(document).on("click", ".available", function () {
                debugger;
                var selectedEmployeeContainer = $('#selected-contents');
                var id = $(this).attr('id');

                if ($(this).prop('checked')) {
                    var name = $(this).attr('value');
                    $('<span />', { 'id': 'selected' + id, text: name }).appendTo(selectedEmployeeContainer);
                    $('<span id="selected' + id + '" style="padding-left:10px"><i class="fa fa-times" id="' + id + '" aria-hidden="true" style="color:#0E69A8"></i></span>').appendTo(selectedEmployeeContainer);
                    $('<br id="' + id + '">').appendTo(selectedEmployeeContainer);
                }
                else if (parseInt($('span[id="' + 'selected' + id + '"]')) > 0) {
                    $('span[id="' + 'selected' + id + '"]').remove();
                    $('br[id="' + id + '"]').remove();
                }
            });

            $(document).on("click", ".fa-times", function () {
                debugger;
                var id = $(this).attr('id');
                console.log("deselecteCheckbox");
                $('input:checkbox[id="' + id + '"]').prop('checked', false);
                $('span[id="' + 'selected' + id + '"]').remove();
                $('br[id="' + id + '"]').remove();
            });


            $("#userNames").click(function (e) {
                debugger;
                e.preventDefault();
                $("#userRequired").empty();
                if ($("#rolesList").val().trim() == "" || $("#rolesList").val() == 0) {
                    $("#roleRequired").empty();

                    $("#roleRequired").append("Please select the role first.")

                }
                else {
                    var userNames = [];

                    $("#userNames option:selected").each(function (i, selected) {
                        userNames[i] = $(selected).text();

                    });

                    var deselectName = $("#userIds").text();

                    $("#userIds").empty();

                    userNames.forEach(function (item) { $('#userIds').append("<option>" + item + "</option>"); })

                    $("#userNames option:selected").hide();



                    if (deselectName != "" && $("#userNames option:selected").size() == 1) {
                        $('#userNames option:contains(' + deselectName + ')').show();
                    }

                }
            })

            $("#userIds").click(function (e) {
                debugger;
                e.preventDefault()
                var dselectdUserName = $("#userIds option:selected").text();
                $("#userIds option:selected").hide();

                $('#userNames option:contains(' + dselectdUserName + ')').show().attr("selected", false);

            })

        });
    </script>

}




