@model IEnumerable<Silicus.Ensure.Web.Models.UserViewModel>
@using Silicus.Ensure.Models.Constants;
@using Kendo.Mvc.UI;

<div class="">



    <div class="table-responsive">

        @if (Request.IsAuthenticated)
        {
            @(Html.Kendo().Grid(Model).Name("userGrids")
         .Columns(columns =>
         {
             columns.Bound("").ClientTemplate("<input type='checkbox' name='selectUser' value='#= UserId#' />").Width(20);
             columns.Bound(p => p.FirstName).ClientTemplate("#=FirstName# #=LastName#").Title("Name").Width(200);
             columns.Bound(p => p.Email).Title("Email").Width(200);
             //columns.Bound(p => p.RequisitionId).Title("Requisition id").Width(100);
             columns.Bound(p => p.Position).Width(200);
             columns.Bound(p => p.ContactNumber).Title("Contact number").Width(100);
             columns.Bound(p => p.TotalExperienceInYear).ClientTemplate("#=TotalExperienceInYear#.#=TotalExperienceInMonth#").Title("Total experience").Width(80);
             columns.Bound(p => p.PanelName).Title("Panel").Width(200);
             columns.Bound(p => p.CandidateStatus).ClientTemplate(@"
                                                                        #if(CandidateStatus=='TestAssigned'){#
                                                                            Test Assigned
                                                                        #}
                                                                        else if(CandidateStatus=='TestSubmitted') {#
                                                                            Test Submitted
                                                                        #}
                                                                        else if(CandidateStatus=='UnderEvaluation') {#
                                                                            Under Evaluation
                                                                        #}
                                                                        else{#
                                                                            #=CandidateStatus#
                                                                        #}
                                                                        #").Title("Status").Width(250);
             //columns.Bound(c => c.UserId).ClientTemplate(@"<a class='k-button M-T4' href='" + Url.Action("CandidateAdd", "Admin") + "?UserId=#=UserId#'>Edit</a><a id='testSuiteDel' class='k-button M-T4' href='\\#' onclick='ConfirmDeleteUserRow(event)'>Delete</a>").Title("Actions").Width(500).Sortable(false);
             //columns.Bound(c => c.UserId).ClientTemplate(@"

             //                            #if(CandidateStatus=='New'){#
             //                           <a onclick=showTest('#=UserId#','#=TestStatus#') style='cursor:pointer'>Assign Test</a> |
             //                           <a  class ='dialog-window' onclick=ReAssignPanel('#=UserId#') style='cursor:pointer'>#if(PanelName){#Reassign Panel#} else{#Assign Panel #}#</a>
             //                           #}
             //                           else if(CandidateStatus=='TestAssigned') {#
             //                           <a  class ='dialog-window' onclick=ReAssign('#=UserId#','#=TestStatus#') style='cursor:pointer'>Reassign Test</a> |
             //                           <a  class ='dialog-window' onclick=ReAssignPanel('#=UserId#') style='cursor:pointer'>#if(PanelName){#Reassign Panel#} else{#Assign Panel #}#</a> |
             //                           <a  class ='dialog-window' onclick=ViewTest('#=TestSuiteId#','#=UserId#') style='cursor:pointer'>View Test</a>
             //                           #}
             //                           else if(CandidateStatus=='TestSubmitted') {#
             //                           <a  class ='dialog-window' onclick=ReAssignPanel('#=UserId#') style='cursor:pointer'>#if(PanelName){#Reassign Panel#} else{#Assign Panel #}#</a> |
             //                           <a  class ='dialog-window' onclick=CheckAssign('#=TestStatus#',2,#=TestSuiteId#,'#=UserId#','#=UserApplicationId#') style='cursor:pointer'>View Test</a>
             //                           #}
             //                           else if(CandidateStatus=='UnderEvaluation') {#
             //                           <a  class ='dialog-window' onclick=CheckAssign('#=TestStatus#',2,#=TestSuiteId#,'#=UserId#','#=UserApplicationId#') style='cursor:pointer'>View Test</a>
             //                           #}
             //                           else if(CandidateStatus=='Selected'||CandidateStatus=='Rejected') {#
             //                           <a  class ='dialog-window' onclick=CheckAssign('#=TestStatus#',2,#=TestSuiteId#,'#=UserId#','#=UserApplicationId#') style='cursor:pointer'>View Test</a>
             //                           #}

             //                           #").Title("Test actions").Width(600).Sortable(false);

         })
                  .DataSource(dataSource => dataSource
                            .Ajax()
                            .Model(model =>
                            {
                                model.Id(p => p.UserId);
                                model.Field(p => p.UserId).Editable(false);
                            })

                                //.Read(read => read.Action("GetCandidateDetails", "User"))
                                //.Create(update => update.Action("CreateUser", "User"))
                                //.Update(update => update.Action("UpdateUser", "User"))
                                //.Destroy(update => update.Action("DeleteUser", "User"))
                                .PageSize(10)
                                .ServerOperation(false)
                           )
                  .Pageable(p => p.PageSizes(true))
                  .Sortable()
                  .Resizable(resizing => resizing.Columns(true))
                   .ToolBar(toolbar =>
                   {
                   toolbar.Template(@<text>
            <div class="toolbar">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-5 col-md-4 col-lg-4 M-T15 M-B15">
                            <div class="input-group">
                                <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                <input type="text" class="form-control" id='FieldFilterCandidate' placeholder="Search" style="height: 38px;">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                </text>);
                   })
            )


        }

    </div>
</div>

<script>
    $("#FieldFilterCandidate").keyup(function () {
        var value = $("#FieldFilterCandidate").val();
        grid = $("#userGrids").data("kendoGrid");

        if (value.length > 0) {
            if (value) {
                grid.dataSource.filter({ field: "FirstName", operator: "contains", value: value });
                grid.dataSource.filter({ field: "LastName", operator: "contains", value: value });
                grid.dataSource.filter({ field: "Email", operator: "contains", value: value });
            } else {
                grid.dataSource.filter({});
            }
        }
        else if (value == "")
            grid.dataSource.filter({});
    });


</script>