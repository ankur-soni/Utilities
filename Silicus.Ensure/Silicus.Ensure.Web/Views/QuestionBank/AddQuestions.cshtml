@model Silicus.Ensure.Web.Models.QuestionModel
@using Kendo.Mvc.UI;
@using Silicus.Ensure.Models.Constants;

@{
    ViewBag.Title = "Add Questions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary" id="menu-toggle" style="margin-left:15px;border-radius:0px;" href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>

    <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
        @{
            if (@Model.Id != 0)
            {
                <h1 class="dashboard-name">Edit Question</h1>
                <script>
                    $(window).load(function () {
                        var dropdownlist = $("#QuestionType").data("kendoDropDownList");
                        dropdownlist.enable(false);
                    });
                </script>
            }
            else
            {
                <h1 class="dashboard-name">Add Question</h1>
                <script>
                    $(window).load(function () {
                        $('#QuestionIdDiv').hide();
                    });
                </script>
            }
        }
    </div>



</div>

<div class="row">
    <div class="col-sm-12">
        <div class="box M-T15 M-B60">
            <div class="f1">

                @using (Html.BeginForm("AddQuestions", "QuestionReview", FormMethod.Post, new { id = "AddQuestionForm", onsubmit = "OnSubmit()" }))
                {
                    <div class="fluid">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="alert alert-danger" id="errorDiv" style="display:none">
                                    <strong>Error!</strong> <span id="errorContent"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="QuestionIdDiv">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Question Id </label>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                        <div class="form-group">
                                            @Model.Id
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Question type <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                        <div class="form-group">

                                            @(Html.Kendo().DropDownListFor(m => m.QuestionType)
                                                .Name("QuestionType")
                                                .Value(Model.QuestionType)
                                                .Events(e => e.Change("QuestionTypeChange"))
                                                .BindTo(EnumHelper.GetSelectList(typeof(QuestionType)))
                                                .HtmlAttributes(new { style = "width: 100%" }))
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Question <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                        <div class="form-group">
                                            @Html.TextAreaFor(m => m.QuestionDescription, new { @rows = "5", @class = "form-control " })
                                            @Html.ValidationMessageFor(m => m.QuestionDescription)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="practical">
                            <div class="row">
                                <div class="col-sm-12 col-md-10 col-lg-8">
                                    <div class="row">
                                        <div class="col-sm-4 col-md-4 col-lg-3">
                                            <div class="form-group">
                                                <label class="">Answer choices <span style="color:red">*</span></label>
                                            </div>
                                        </div>
                                        <div id="rowOpt1">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group" id="answerDiv">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption1, new { @class = "ansCheckBox chkValidation" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option1, new { @class = "form-control", Value = @Model.Option1 })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnAddOpt1").HtmlAttributes(new { type = "button", param = "1", style = "display:none;padding:6px 13px;font-size:12px;", @class = "fa fa-plus" }).Events(e => e.Click("OptionAdd")))
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
                                        </div>
                                        <div id="rowOpt2">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption2, new { @class = "ansCheckBox" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option2, new { @class = "form-control", Value = @Model.Option2 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnAddOpt2").HtmlAttributes(new { type = "button", param = "2", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-plus" }).Events(e => e.Click("OptionAdd")))
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
                                        </div>
                                        <div id="rowOpt3">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption3, new { @class = "ansCheckBox" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option3, new { @class = "form-control", Value = @Model.Option3 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnAddOpt3").HtmlAttributes(new { type = "button", param = "3", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-plus" }).Events(e => e.Click("OptionAdd")))
                                                @(Html.Kendo().Button().Name("btnDelOpt3").HtmlAttributes(new { type = "button", param = "3", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-minus" }).Events(e => e.Click("OptionDelete")))
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
                                        </div>
                                        <div id="rowOpt4">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption4, new { @class = "ansCheckBox" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option4, new { @class = "form-control", Value = @Model.Option4 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnAddOpt4").HtmlAttributes(new { type = "button", param = "4", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-plus" }).Events(e => e.Click("OptionAdd")))
                                                @(Html.Kendo().Button().Name("btnDelOpt4").HtmlAttributes(new { type = "button", param = "4", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-minus" }).Events(e => e.Click("OptionDelete")))
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
                                        </div>
                                        <div id="rowOpt5">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption5, new { @class = "ansCheckBox" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option5, new { @class = "form-control", Value = @Model.Option5 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnAddOpt5").HtmlAttributes(new { type = "button", param = "5", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-plus" }).Events(e => e.Click("OptionAdd")))
                                                @(Html.Kendo().Button().Name("btnDelOpt5").HtmlAttributes(new { type = "button", param = "5", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-minus" }).Events(e => e.Click("OptionDelete")))
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
                                        </div>
                                        <div id="rowOpt6">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption6, new { @class = "ansCheckBox" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option6, new { @class = "form-control", Value = @Model.Option6 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnAddOpt6").HtmlAttributes(new { type = "button", param = "6", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-plus" }).Events(e => e.Click("OptionAdd")))
                                                @(Html.Kendo().Button().Name("btnDelOpt6").HtmlAttributes(new { type = "button", param = "6", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-minus" }).Events(e => e.Click("OptionDelete")))
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
                                        </div>
                                        <div id="rowOpt7">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption7, new { @class = "ansCheckBox" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option7, new { @class = "form-control", Value = @Model.Option7 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnAddOpt7").HtmlAttributes(new { type = "button", param = "7", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-plus" }).Events(e => e.Click("OptionAdd")))
                                                @(Html.Kendo().Button().Name("btnDelOpt7").HtmlAttributes(new { type = "button", param = "7", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-minus" }).Events(e => e.Click("OptionDelete")))
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
                                        </div>
                                        <div id="rowOpt8">
                                            <div class="col-xs-10 col-sm-6 col-md-6 col-lg-6">
                                                <div class="form-group">
                                                    <div class="input-group form-group">
                                                        <div class="input-group-addon">
                                                            @Html.CheckBoxFor(y => y.IsAnsOption8, new { @class = "ansCheckBox" })
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Option8, new { @class = "form-control", Value = @Model.Option8 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                                @(Html.Kendo().Button().Name("btnDelOpt8").HtmlAttributes(new { type = "button", param = "8", style = "padding:6px 13px;font-size:12px;", @class = "fa fa-minus" }).Events(e => e.Click("OptionDelete")))
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-4 col-md-4 col-lg-3">
                                        </div>

                                        <div class="col-sm-8 col-md-8 col-lg-6">
                                            <div class="form-group">
                                                <div class="checkbox checkbox-info" id="IsAllowedmoreThanOneAns">
                                                    <input id="checkbox33" type="checkbox">
                                                    <label for="checkbox33">Allow more than one answer to this question</label>
                                                </div>
                                                @Html.HiddenFor(y => y.AnswerType)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="practicalAns">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Answer <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                        <div class="form-group">
                                            @Html.TextAreaFor(m => m.Answer, new { @rows = "5", @class = "form-control " })
                                            @Html.ValidationMessageFor(m => m.Answer)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Technology <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                                        <div class="form-group">

                                            @(Html.Kendo().DropDownListFor(m => m.TechnologyId)
          .DataTextField("TechnologyName")
          .DataValueField("TechnologyId")
          .OptionLabel("--Select--")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("GetAllTechnologiesForDropDown", "Technology");
              });
          })
          .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                            @Html.ValidationMessageFor(m => m.TechnologyId)
                                        </div>

                                    </div>

                                    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                        <a style="padding:2px 12px;" class="themeColorBlue btn btn-primary" href="#" onclick="AddTag();"><i class="fa fa-plus" aria-hidden="true"></i></a>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Skill tags <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                                        <div class="form-group">

                                            @(Html.Kendo().MultiSelectFor(m => m.SkillTag)
                                                .DataTextField("TagName")
                                                .DataValueField("TagId")
                                                .Placeholder("--Select--")
                                                .BindTo(Model.SkillTagsList)
                                                .Value(Model.SkillTag)
                                                .HtmlAttributes(new { style = "width: 100%" }))
                                            @Html.ValidationMessageFor(m => m.SkillTag)
                                        </div>

                                    </div>

                                    <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                                        <a style="padding:2px 12px;" class="themeColorBlue btn btn-primary" href="#" onclick="AddTag();"><i class="fa fa-plus" aria-hidden="true"></i></a>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Proficiency <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-7 col-md-7 col-lg-6">
                                        <div class="form-group">
                                            @(Html.Kendo().DropDownListFor(m => m.ProficiencyLevel)
                                                .Name("ProficiencyLevel")
                                                .OptionLabel("--Select--")
                                                .Value(Model.ProficiencyLevel)
                                                .BindTo(EnumHelper.GetSelectList(typeof(Proficiency)))
                                                .HtmlAttributes(new { style = "width: 100%" }))
                                            @Html.ValidationMessageFor(m => m.ProficiencyLevel)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Duration (min) <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-7 col-md-7 col-lg-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(y => y.Duration, new { @type = "number", @min = "1", @max = "360", @class = "form-control", @style = "width:100%;" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-10 col-lg-8">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3">
                                        <div class="form-group">
                                            <label class="">Marks <span style="color:red">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-7 col-md-7 col-lg-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(y => y.Marks, new { @type = "number", @min = "1", @max = "100", @class = "form-control", @style = "width:100%;" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row M-T15">

                            <div class="pull-right">
                                <input type="submit" name="btnSaveAndAddNewQuestion" id="btnSaveAndAddNewQuestion" value="Save & add another question" class="btn btn-primary M-T4" />
                                <input type="submit" style="width: 70px;margin-left:1px;" id="btnSave" name="btnSave" value="Save" class="btn btn-primary M-T4" />
                                <input type="button" name="btnCancel" value="Cancel" onclick="OnCancel()" class="btn btn-secondary M-T4" />
                            </div>
                        </div>

                        @Html.HiddenFor(m => m.OptionCount, new { Value = @Model.OptionCount })
                        <input type="hidden" name="CreatedOn" value="@Model.CreatedOn" />
                        @Html.HiddenFor(m => m.CreatedBy, new { Value = @Model.CreatedBy })
                        @Html.HiddenFor(m => m.Id, new { Value = @Model.Id })
                        @Html.HiddenFor(m => m.Edit, new { Value = @Model.Edit })
                        <script>
                            $(document).ready(function () {
                                window.onbeforeunload = function () {
                                    return "Do you really want to close?";
                                };
                                $('#addTagPopup').on('hidden.bs.modal', function () {
                                    $('.field-validation-error').hide();
                                });
                                SetNavigationMenuActive('QuestionBank');
                                $('.k-editor-toolbar').hide();
                                var questionType = $("#QuestionType").val();
                                if(questionType&&questionType==2)
                                {
                                    QuestionTypeChange();
                                }
                                $("#IsAnsOption1").removeAttr("data-val-required")
                                $("#AddQuestionForm").kendoValidator({
                                    rules: {
                                        Option1: function (input, params) {
                                            return validateOptions(input, params,1);
                                        },
                                        Option2: function (input, params) {
                                            return validateOptions(input, params,2);
                                        },
                                        Option3: function (input, params) {
                                            return validateOtherOptions(input, params,3);
                                        },
                                        Option4: function (input, params) {
                                            return validateOtherOptions(input, params,4);
                                        }
                                        ,
                                        Option5: function (input, params) {
                                            return validateOtherOptions(input, params,5);
                                        },
                                        Option6: function (input, params) {
                                            return validateOtherOptions(input, params,6);
                                        },
                                        Option7: function (input, params) {
                                            return validateOtherOptions(input, params,7);
                                        },
                                        Option8: function (input, params) {
                                            return validateOtherOptions(input, params,8);
                                        },
                                        IsAnsOption1: function (input, params) {
                                            return isAnySelectedAns(input);
                                        },
                                        Answer:function (input, params) {
                                            var qType = $('#QuestionType').val();
                                            if (input.is("[name=Answer]") && qType == 2) {
                                                input.attr("data-Answer-msg", "Answer is required.");
                                                return input.val().trim()!="";
                                            }
                                            return true;
                                        }
                                    }
                                });


                                var $answerType=$("#AnswerType");
                                if($answerType.val()<2)
                                {
                                    $answerType.val(1);
                                    $("#IsAllowedmoreThanOneAns").attr("checked",false);
                                }
                                else
                                {
                                    $("#IsAllowedmoreThanOneAns").attr("checked",true);
                                }
                                $("#IsAllowedmoreThanOneAns").on("click",function()
                                {
                                    $("#AnswerType").val($("#IsAllowedmoreThanOneAns input").is(":checked")?2:1);
                                    var $ansCheckBoxes=$(".ansCheckBox:checked");
                                    if($ansCheckBoxes.length>1)
                                        $ansCheckBoxes.prop("checked",false);
                                })

                                $(".ansCheckBox").on("click",function()
                                {
                                    if(!$("#IsAllowedmoreThanOneAns input").is(":checked"))
                                    {
                                        $(".ansCheckBox").prop("checked",false);
                                        $(this).prop("checked",true);
                                    }
                                });

                                // Hide More Than 2 Options.
                                for(var i=3; i<=8; i++)
                                {
                                    $("#rowOpt"+i).hide();
                                }
                                $("#errorDiv").hide();
                                $("#durationRequired").hide();
                                $("#practicalAns").hide();
                                var success =@Model.Success;
                                var edit="@Model.Edit";
                                if(success==1)
                                {
                                    window.onbeforeunload = null;
                                    $(window).unbind('unload');
                                    if(edit=="True"){
                                        ShowMessage("Question updated successfully.",true);
                                        window.location.href = "/QuestionBank/QuestionBank";
                                    }
                                    else{
                                        ShowMessage("Question added successfully.",true);
                                        window.location.href = "/QuestionBank/QuestionBank";
                                    }
                                }
                                if(success==2){
                                    ShowMessage("Question added successfully.",true);
                                }
                                else
                                {
                                    if(edit=="True"){
                                        var optCnt=@Model.OptionCount;
                                        OptionDispalyOnEdit(optCnt);
                                        //ShowRequiredOptionInCorrectAnswerDropDown();
                                    }
                                }

                                // Check Question Type on Edit.
                                var qtype=@Model.QuestionType;
                                if (qtype == "2") {
                                    $("#practical").hide();
                                    $("#practicalAns").show();
                                    $("#durationRequired").show();
                                }
                            });
                        </script>
                        <script src="~/Scripts/Custom/addquestion.js"></script>
                        <style>
                            .height {
                                height: 250px;
                            }

                            .required {
                                color: red;
                            }
                        </style>

                    </div>

                }
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog" onclick="OnCancel();">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="OnCancel();">&times;</button>
                <h4 class="modal-title"><span id="msgMain">Success!</span></h4>
            </div>
            <div class="modal-body">
                <p id="msgContent">Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="OnCancel();">Cancel</button>
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="addTagPopup" role="dialog">
    <form id="tagForm" action="/Tag/Save" method="post">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><span>Add skill tag</span></h4>
                </div>
                <div class="modal-body">

                    @Html.Partial("~/Views/Shared/EditorTemplates/TagEditorTemplate.cshtml", new Silicus.Ensure.Models.DataObjects.Tags())

                </div>
                <div class="modal-footer">
                    <button type="button" style="width:70px;" onclick="saveTag()" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </form>
</div>

