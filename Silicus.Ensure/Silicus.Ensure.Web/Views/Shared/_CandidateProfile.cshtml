@model Silicus.Ensure.Web.Models.UserViewModel
@using Silicus.Ensure.Models.Constants;
@using Kendo.Mvc.UI;




<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary" id="menu-toggle" style="margin-left:15px;border-radius:0px;" href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
    @if (Model.UserId != 0)
    {
        <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
            <h1 class="dashboard-name">Edit Candidate</h1>
        </div>
        <script>
            $(document).ready(function () {
                $('#RequisitionId').attr('disabled', true);
                IsEmailValid = true;
                SetNavigationMenuActive('Candidates');
            })
        </script>
    }
    else
    {
        <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
            <h1 class="dashboard-name">Add Candidate</h1>
        </div>
        <script>
            $(document).ready(function () {
                SetNavigationMenuActive('Candidates');
                $('#file').css('display', 'block');
                fileBool = true;
            })
        </script>
    }

</div>

@using (Html.BeginForm("CandidateSave", "User", FormMethod.Post, new { id = "frmSearchAllNdc", EncType = "multipart/form-data", onsubmit = "validateForm(event)" }))
{
    <div class="profile-box">
        <div class="box M-T15">
            @if (!string.IsNullOrWhiteSpace(Model.ProfilePhotoFilePath))
            {
                <label class="font-Bold themeColorBlue M-T5">Change profile picture</label>
            }
            else
            {
                <label class="font-Bold themeColorBlue M-T5">Upload profile picture</label>
            }
            @if (!string.IsNullOrWhiteSpace(Model.ProfilePhotoFilePath))
            {
                <div class="thumbnail" style="height: 200px;">

                    <img id="ProfilePhotoImage" src="@System.Configuration.ConfigurationManager.AppSettings["ServerName"]@Html.Raw(Url.Content(Model.ProfilePhotoFilePath))" style="height:180px;width:160px">
                </div>
                @*<span id="RemoveProfilePhoto" class="deleteupload" title="Delete"><a onclick="RemoveProfilePhoto()"><i class="fa fa-close" aria-hidden="true"></i></a></span>*@
                <input type="file" name="ProfilePhotofile" id="ProfilePhotofile" data-max-size="2097152" style="width: 100%;" accept='image/*'>
                @*<label for="file" class="font-Bold themeColorBlue M-T5">Change profile picture</label>*@
            }
            else
            {
                <div class="thumbnail" style="height:200px;">
                    <img id="ProfilePhotoImage" src="" style="height:180px;width:160px;display:none">
                </div>
                <input type="file" name="ProfilePhotofile" id="ProfilePhotofile" data-max-size="2097152" style="width: 100%;" accept='image/*' />
                @*<label for="file" class="font-Bold themeColorBlue M-T5">Upload profile picture</label>*@
            }






        </div>
        <div class="clearfix"></div>
    </div>
    <div class="info-box">
        <div class="row">
            <div class="col-sm-12">
                <div class="box M-T15 M-B60">
                    <div class="f1">
                        <div class="main-content">

                            <input type="hidden" id="Role" name="Role" value="@Silicus.Ensure.Models.Constants.RoleName.Candidate.ToString()" />
                            @Html.HiddenFor(m => m.UserId)
                            @Html.HiddenFor(m => m.ResumeName)
                            @Html.HiddenFor(m => m.ResumePath)
                            @Html.HiddenFor(m => m.ProfilePhotoFilePath)
                            @Html.HiddenFor(m => m.IsCandidateReappear)
                            <div class="fluid mt20">
                                <div class="row" style="margin-bottom:10px!important">
                                    @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
                                    {
                                        <div class="alert alert-success" id="messageDiv">
                                            <strong>Error!</strong> <span id="messageContent">@Model.ErrorMessage</span>
                                        </div>
                                    }
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.FirstName) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.FirstName)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.MiddleName)
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.LastName) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.LastName)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.Position) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            <div class="col-md-8 col-sm-10 col-xs-10" style="padding-left:0;padding-right:0;height:30px;">
                                                @(Html.Kendo().DropDownListFor(model => model.Position)
                                            .OptionLabel("--Select--")
                                            .BindTo(Model.PositionList)
                                            .DataTextField("PositionName")
                                            .DataValueField("PositionName")
                                            .Value(Model.Position)
                                            .HtmlAttributes(new { style = "width: 100%;border-color: #c5c5c5;" })
                                                )

                                            </div>
                                            <div class="col-md-4 col-sm-2 col-xs-2">
                                                <a href="#" class="font-Bold themeColorBlue btn btn-primary" onclick="AddPosition();"><span style="font-size: 12px;" class="glyphicon glyphicon-plus"></span></a>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Position)
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.RequisitionId) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.RequisitionId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.RequisitionId)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.Gender) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @(Html.Kendo().DropDownListFor(m => m.Gender)
.Name("Gender")
.DataTextField("Text")
.DataValueField("Value")
.BindTo(new List<SelectListItem>
() {
                            new SelectListItem(){
                            Text="--Select--",
                            Value="--Select--"
                            },
                            new SelectListItem(){
                            Text="Male",
                            Value="Male"
                            },
                            new SelectListItem(){
                            Text="Female",
                            Value="Female"
                            }
}).HtmlAttributes(new { style = "width: 100%;" }))
                                            @Html.ValidationMessageFor(m => m.Gender)
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.Email) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                            <span id="EmailValidationSpan" class="field-validation-valid" data-valmsg-replace="true" style="display:none">
                                                <span class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" role="alert">
                                                    <span class="k-icon k-warning">
                                                    </span>Email address already exists.
                                                </span>
                                            </span>
                                            @Html.ValidationMessageFor(m => m.Email)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.CurrentLocation) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.CurrentLocation, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CurrentLocation)
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.DOB) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            <input type="text" style="width:100%;" name="DOB" id="DOB" value="@if (Model.UserId != 0)
                                        { @Model.DOB.Replace("-", "/")}" />
                                            @Html.ValidationMessageFor(m => m.DOB)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.ContactNumber) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.ContactNumber, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ContactNumber)
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.ClientName) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.ClientName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ClientName)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.Technology) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.Technology, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Technology)
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">

                                        <div class="col-md-12 col-lg-6">
                                            <lable>Total experience <b style="color:Red;">*</b></lable>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            <div class="col-md-6 col-sm-6 col-xs-6" style="padding-left:0">
                                                @(Html.Kendo().DropDownListFor(m => m.TotalExperienceInYear)
.DataTextField("Text")
.DataValueField("Value")
.BindTo(EnumHelper.GetSelectList((typeof(Year)))
.Select(x => new SelectListItem { Text = x.Value, Value = x.Value }))
.HtmlAttributes(new { style = "width: 100%;" })
.OptionLabel("Years")
                                                )
                                                @Html.ValidationMessageFor(m => m.TotalExperienceInYear)
                                            </div>
                                            <div class="col-md-6 col-sm-6 col-xs-6" style="padding-right:0">
                                                @(Html.Kendo().DropDownListFor(m => m.TotalExperienceInMonth)
.DataTextField("Text")
.DataValueField("Value")
.BindTo(EnumHelper.GetSelectList((typeof(Month)))
.Select(x => new SelectListItem { Text = x.Value, Value = x.Value }))
.HtmlAttributes(new { style = "width: 100%" })
.OptionLabel("Months")
                                                )
                                                @Html.ValidationMessageFor(m => m.TotalExperienceInMonth)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            <lable>Relevant experience <b style="color:Red;">*</b></lable>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            <div class="col-md-6 col-sm-6 col-xs-6" style="padding-left:0">
                                                @(Html.Kendo().DropDownListFor(m => m.RelevantExperienceInYear)
.DataTextField("Text")
.DataValueField("Value")
.BindTo(EnumHelper.GetSelectList((typeof(Year)))
.Select(x => new SelectListItem { Text = x.Value, Value = x.Value }))
.HtmlAttributes(new { style = "width: 100%" })
.OptionLabel("Years")
                                                )
                                                @Html.ValidationMessageFor(m => m.RelevantExperienceInYear)
                                            </div>
                                            <div class="col-md-6 col-sm-6 col-xs-6" style="padding-right:0">
                                                @(Html.Kendo().DropDownListFor(m => m.RelevantExperienceInMonth)
.DataTextField("Text")
.DataValueField("Value")
.BindTo(EnumHelper.GetSelectList((typeof(Month)))
.Select(x => new SelectListItem { Text = x.Value, Value = x.Value }))
.HtmlAttributes(new { style = "width: 100%" })
.OptionLabel("Months")
                                                )
                                                @Html.ValidationMessageFor(m => m.RelevantExperienceInMonth)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.CurrentCompany) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.TextBoxFor(model => model.CurrentCompany, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CurrentCompany)
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            @Html.LabelFor(model => model.CurrentTitle) <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => model.CurrentTitle, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CurrentTitle)
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="margin-bottom:10px!important">
                                    <div class="col-lg-6 col-md-12 col-sm-12">
                                        <div class="col-md-12 col-lg-6">
                                            Upload resume <b style="color:Red;">*</b>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            <div class="outer-box">
                                                <div class="demo-section k-content">
                                                    <input id="file" name="ResumeFile" type="file" data-role="upload" />
                                                </div>
                                                @if (!string.IsNullOrWhiteSpace(Model.ResumeName))
                                                {
                                                    <div id="uploadFileLink" class="postuploadedfilesholder clearfix">
                                                        <div class="fileupload M-T5">
                                                            <a href="@System.Configuration.ConfigurationManager.AppSettings["ServerName"]@Html.Raw(Url.Content(Model.ResumePath))" targ target="_blank"><i class="fa fa-file-text-o" aria-hidden="true"></i> @Html.Raw(Model.ResumeDisplayName)</a>
                                                            <span class="deleteupload" title="Delete"><a onclick="DeleteF()"><i class="fa fa-close" aria-hidden="true"></i></a></span>
                                                        </div>
                                                    </div>
                                                    <script type="text/javascript">
                                                        $('#file').hide();
                                                        function DeleteF() {
                                                            fileBool = true;
                                                            $('#file').show();
                                                            $("#uploadFileLink").html("");
                                                            $("#ResumeName").val("");
                                                        }
                                                    </script>
                                                }
                                            </div>
                                            <span class="k-invalid-msg" data-for="files"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom:10px!important">
                                <div class="col-sm-12"></div>
                                <div class="col-sm-12">
                                    <div class="pull-right btn-nav">
                                        @(Html.Kendo().Button()
                                     .Name("btnSave")
                                    .HtmlAttributes(new { type = "submit", @style = "width:58px;" })
                                    .Content("Save"))
                                        @(Html.Kendo().Button()
                                                .Name("btnCancel")
                        .HtmlAttributes(new { type = "button", @class = "btn-secondary" })
                                .Content("Cancel")
                                .Events(ev => ev.Click("onCancelClick")))
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"> </script>

<script>
    $('#btnSave').click(function () {
        window.onbeforeunload = null;
    });

    $('frmSearchAllNdc').submit(function () {
        window.onbeforeunload = null;
    });
    $('#btnCancel').click(function () {
        window.onbeforeunload = null;
    });

    function validateForm(event) {
        if (!IsEmailValid) {
            event.preventDefault();
        }
        else if ($('#frmSearchAllNdc').valid()) {
            var isCandidateReappear = location.search.split('IsCandidateReappear=')[1];
            if (isCandidateReappear) {
                EnableInvariableDataControls();
            }
            $('#RequisitionId').attr('disabled', false);
            showCustomLoader();
        }
    }

    function EnableInvariableDataControls() {
        var dropdownlist = $("#Gender").data("kendoDropDownList");
        if (dropdownlist) {
            dropdownlist.enable(true);
        }
        $('#FirstName').attr('disabled', false);
        $('#LastName').attr('disabled', false);
        $('#DOB').attr('disabled', false);
}
</script>