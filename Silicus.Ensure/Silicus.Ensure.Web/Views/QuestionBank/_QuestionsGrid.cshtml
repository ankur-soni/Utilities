@using Kendo.Mvc.UI;

@if (Request.IsAuthenticated)
{
    @(Html.Kendo().Grid<Silicus.Ensure.Web.Models.QuestionModel>().Name("questionGrids")
                        .Columns(columns =>
                        {
                            columns.Bound(q => q.Id).Title("Id").Width(100);
                            columns.Bound(q => q.QuestionDescription).Title("Question description").Width(400);
                            columns.Bound(q => q.QuestionType).Width(200);
                            columns.Bound(q => q.TechnologyName).Title("Technology").Width(200);
                            columns.Bound(q => q.StatusName).Title("Status").Width(400);
                            //.ClientGroupHeaderTemplate("#= value# (#=count#)").Hidden(true);
                            columns.Bound(q => q.Tags).Title("Tags").Width(400);
                            columns.Bound(q => q.ProficiencyLevel).Title("Proficiency level").Width(400);
                            columns.Bound(q => q.Id).ClientTemplate(@"
                                                <a href='/QuestionBank/EditQuestion?questionId=#=Id#' class='k-button M-T4'>Edit</a>
                            <a class='k-button M-T4' href='\\#' onclick='ConfirmDeleteQuestionRow(event)'>Delete</a>
                                               ").Title("Actions").Width(400).Sortable(false);
                            //.ClientGroupHeaderTemplate("#= value# (#=count#)").Hidden(true);
                        })
                              .DataSource(dataSource => dataSource.Ajax()
                              //.Group(group => group.Add(p => p.StatusName)).Aggregates(aggr => aggr.Add(p => p.StatusName).Count())
                              .Sort(sort => sort.Add("Id").Ascending()).Model(model =>
                              {
                                  model.Id(p => p.Id);
                                  model.Field(p => p.Id).Editable(false);
                              })
                                 .Read(read => read.Action("GetAllQuestions", "QuestionBank"))
                                 .Destroy(delete => delete.Action("DeleteQuestion", "QuestionBank"))
                                 .PageSize(10)
                                 .ServerOperation(true)
                                    ).Pageable(p => p.PageSizes(true))
                                     .Sortable()
                                     .Resizable(resizing => resizing.Columns(true))
    )}

