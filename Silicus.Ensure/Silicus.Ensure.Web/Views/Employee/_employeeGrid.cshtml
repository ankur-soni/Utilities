@model Silicus.Ensure.Web.Models.EmployeeTestSuitAssignementViewmodel
@using Silicus.Ensure.Models.Constants;
@using Kendo.Mvc.UI;
@using System.Linq
@{
    ViewBag.Title = "_employeeGrid";
}
<style>
    .list-group-item {
        padding: 3px 13px !important;
    }

    .custom-search-input {
        height: 501px;
        border: 1px solid lightgray;
    }

    li.selected {
        background-color: #efefef;
    }

    /*#input-group {
        padding-right: 11px;
    }*/

    #search, #searchSelected {
        height: 33px;
    }

    #ddl-employee-list, #ddl-selectedEmployee-list {
        max-height: 500px;
        overflow-y: scroll;
    }

    .btn-grp-arrowWrapper {
        margin-top: 250px;
        margin-left: 35%;
    }
</style>
<div class="toolbar">
    <div class="row">
        <div class="col-xs-6 col-sm-3 col-md-3 col-lg-1">
            Test Suit
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-4">
            <div class="form-group">
                @(Html.Kendo().DropDownListFor(c => c.SelectedEmployeeId)
                       .BindTo(Model.TestSuitList)
                        .Name("DDTestSuit")
                        .DataTextField("TestSuiteName")
                        .DataValueField("TestSuiteId")
                        .Events(e =>
                        {
                            e.DataBound("getAssignedEmpID")
                            .Change("getAssignedEmpID");
                        })
                )
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-6 col-sm-3 col-md-3 col-lg-1">
            Reviewer
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-4">
            <div class="form-group">
                @(Html.Kendo().DropDownListFor(m => m.ReviewerId).Name("ReviewerId")
        .Name("DDReviewerList")
  .DataTextField("DisplayName")
  .DataValueField("ID")
  .OptionLabel("--Select--")
  .DataSource(source => source
  .Custom()
  .Transport(transport => transport
        .Read(read =>
        {
            read.Url("/Common/GetPanelDetails/");
        })
  )
  //.Schema(schema => schema
  //      .Data("Data")
  //      .Total("Total")
  //      .Errors("errors")
  // )
)

                )
                @Html.ValidationMessageFor(m => m.ReviewerId)


            </div>
        </div>
    </div>

</div>

<div class="row">
    @if (Request.IsAuthenticated)
    {
        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
            <p class="font18">Employee List</p>

            <div class="custom-search-input">
                <div class="input-group col-md-12" id="input-group">
                    <input id="search" type="text" class="form-control input-lg" placeholder="Search" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" type="button">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </span>
                </div>
                <ul class="list-group" id="ddl-employee-list">
                    @foreach (var emp in Model.EmployeeList)
                    {
                        <li class="list-group-item" value="@emp.Value">
                            <input type="checkbox" disabled />
                            @emp.Text
                        </li>
                    }

                </ul>
            </div>
            @* @Html.ListBox("ddl-employee-list", Model.EmployeeList, new { @class = "form-control" })*@
        </div>


        <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1 arrow-wrapper">
            <div class="btn-grp-arrowWrapper">
                <button style="padding:10px!important;" class="btn btn-xs btn-primary green" id="btnMovetoSelected"><span class="" type=""><span class="fa fa-angle-double-right fa-2x"></span></span></button><br /><br />
                <button style="padding:10px!important;" class="btn btn-xs btn-primary green" id="btnMovetoNotSelected"><span class="" type=""><span class="fa fa-angle-double-left fa-2x"></span></span></button>
            </div>
        </div>

        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
            <p class="font18">Selected Employee</p>
            @*<select multiple class="form-control" id="ddl-selectedEmployee-List"></select>*@
            <div class="custom-search-input">
                <div class="input-group col-md-12" id="input-group">
                    <input id="searchSelected" type="text" class="form-control input-lg" placeholder="Search" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" type="button">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </span>
                </div>
                <ul class="list-group" id="ddl-selectedEmployee-list"></ul>
            </div>
        </div>


    }
</div>
<div class="row M-T20 M-B60">
    <div class="col-sm-12">
        <button type="button" id="Savebtn" style="width:70px;float:right;margin-right:10px;" class="btn green">Save</button>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('body').on('click', 'li', function () {
            $(this).find("input").prop("checked", !$(this).find("input").prop("checked"));
            $(this).toggleClass('selected');
        });

        $('#search').keyup(function () {
            var current_query = $('#search').val().toLowerCase();
            if (current_query !== "") {
                $(".list-group li").hide();
                $(".list-group li").each(function () {
                    var current_keyword = $(this).text().toLowerCase();
                    if (current_keyword.indexOf(current_query) >= 0) {
                        $(this).show();
                    };
                });
            } else {
                $(".list-group li").show();
            };
        });

        $('#btnMovetoSelected').click(function (e) {

            var selectedOpts = $('#ddl-employee-list li.selected');
            if (selectedOpts.length == 0) {
                alert("Nothing to move.");
                e.preventDefault();
            }
            $('#ddl-selectedEmployee-list').append(selectedOpts);
            $('#ddl-selectedEmployee-list li.selected').removeClass("selected");
            $('#ddl-selectedEmployee-list li').find("input").removeProp("checked");
            //$(selectedOpts).remove();
            e.preventDefault();
        });

        $('#btnMovetoNotSelected').click(function (e) {
            var selectedOpts = $('#ddl-selectedEmployee-list li.selected');
            if (selectedOpts.length == 0) {
                alert("Nothing to move.");
                e.preventDefault();
            }
            $('#ddl-employee-list').append(selectedOpts);
            $('#ddl-employee-list li.selected').removeClass("selected");
            $('#ddl-employee-list li').find("input").removeProp("checked");
            //$(selectedOpts).remove();
            e.preventDefault();
        });

        $("#Savebtn").bind("click", function () {
            showCustomLoader();
            var empArray = new Array();

            $('#ddl-selectedEmployee-list li').each(function () {
                empArray.push($(this).prop("value"));
            });

            var testSuitData = $("#DDTestSuit").data("kendoDropDownList");
            var DDReviewerListData = $("#DDReviewerList").data("kendoDropDownList");

            if (empArray.length > 0 && testSuitData.value() > 0 && DDReviewerListData.value()) {

                $('#myEmpModal').find('input[type=checkbox]:checked').removeAttr('checked');
                $.ajax({
                    type: 'post',
                    async: false,
                    url: "/Employee/AssignEmployeeSuite",
                    cache: false,
                    data: { SuiteId: testSuitData.value(), UserList: empArray, reviewerId: DDReviewerListData.value() },
                    contenttype: "application/json; charset=utf-8",
                    success: function (returndata) {
                        if (returndata == 1) {
                            ShowMessage("Test suite assigned successfully.", 1);
                            $(".loader-overlay").hide();
                        }
                    },
                    error: function (er) {
                        $(".loader-overlay").hide();
                    }
                });
            }
            else {
                toastr.error('Please select at least one Employee, test suite and Reviewer.')
                $(".loader-overlay").hide();
            }
        });

    });

    //function appendAndRemove(lstBoxId, selectedOpts, permission) {
    //    $.each(selectedOpts, function (index, value) {
    //        var fieldId = selectedOpts[index].value;
    //        if ($(selectedOpts[index]).attr(permission) === 'true') {
    //            $('#' + lstBoxId).append($(selectedOpts[index]).clone());
    //            $(selectedOpts[index]).remove();
    //        }
    //    });
    //}

    function getAssignedEmpID() {
        $("#ddl-employee-list").append($('#ddl-selectedEmployee-list li'));
        $('#ddl-selectedEmployee-list').find('li').remove();

        var testSuitData = $("#DDTestSuit").data("kendoDropDownList");
        $.ajax({
            type: 'get',
            url: "/Employee/GetEmployeeassigedforTestSuits",
            data: { suitId: testSuitData.value() },
            success: function (empList) {

                var obj = $("#ddl-employee-list li");
                var selectedEmp = new Array();
                for (i = 0; i < obj.length; i++) {
                    $.each(empList, function (index, data) {
                        if (obj[i].value == data) {
                            selectedEmp.push(obj[i]);
                            //$("#ddl-employee-list option[value='" + obj[i].value + "']").remove();

                        }
                    });

                }
                $('#ddl-selectedEmployee-list').append(selectedEmp);

            },
            error: function (er) {
                $(".loader-overlay").hide();
            }
        });
    }

</script>