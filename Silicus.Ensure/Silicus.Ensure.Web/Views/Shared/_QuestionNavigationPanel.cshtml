@model Silicus.Ensure.Web.Models.Test.QuestionNavigationViewModel
<style>
    .radio, .checkbox {
    }

    input[type=checkbox] {
    }

    .QuestionCheckbox {
        color: #337ab7 !important;
    }

    .UnSeen {
        color: #808080 !important;
    }
</style>
<div style="width:100px" id="NavigationSection">

    @{
        var roles = Silicus.Ensure.Web.MvcApplication.getCurrentUserRoles();
        var isReviewer = roles.Contains(Silicus.Ensure.Models.Constants.RoleName.Recruiter.ToString());

        if (Model != null && Model.Practical != null && Model.Practical.Count > 0)
        {
            <table>
                <thead>Practical @Model.Practical.Count</thead>
                @{ int count = 0;
                 foreach (var question in Model.Practical)
                 {
                     if (count == 0)
                     {
                        @Html.Raw("<tr>" + count);

                     }
                     if (isReviewer ? question.IsReviewed : question.IsAnswered)
                     {
                        <td id="@question.QuestionId" class="QuestionCheckbox">
                            <div class="QuestionCheckboxInnerDiv fa fa-check-square"></div>
                            <div class="font-color-blue">@(count + 1)</div>
                        </td>
                     }
                     else if (question.IsViewedOnly)
                     {
                        <td id="@question.QuestionId" class="QuestionCheckbox">
                            <div class="QuestionCheckboxInnerDiv fa fa-square"></div>
                            <div class="font-color-blue">@(count+1)</div>
                        </td>
                     }
                     else
                     {
                        <td id="@question.QuestionId" class="QuestionCheckbox">
                            <div class="QuestionCheckboxInnerDiv fa fa-square UnSeen"></div>
                            <div class="font-color-blue">@(count + 1)</div>
                        </td>
                     }
                     if ((count + 1) % 3 == 0 || count == Model.Practical.Count - 1)
                     {
                        @Html.Raw("</tr>");
                     }
                     count++;
                 }
                }
            </table>
        }
        if (Model != null && Model.Objective != null && Model.Objective.Count > 0)
        {
            <table>
                <thead>Objective @Model.Objective.Count</thead>
                @{ int count = 0;
                 foreach (var question in Model.Objective)
                 {
                     if (count == 0)
                     {
                        @Html.Raw("<tr>");
                     }
                     if (isReviewer ? question.IsReviewed : question.IsAnswered)
                     {
                        <td id="@question.QuestionId" class="QuestionCheckbox">
                            <div class="QuestionCheckboxInnerDiv fa fa-check-square"></div>
                            <div class="font-color-blue">@(count + 1)</div>
                        </td>
                     }
                     else if (question.IsViewedOnly)
                     {
                        <td id="@question.QuestionId" class="QuestionCheckbox">
                            <div class="QuestionCheckboxInnerDiv fa fa-square"></div>
                            <div class="font-color-blue">@(count + 1)</div>
                        </td>
                     }
                     else
                     {
                        <td id="@question.QuestionId" class="QuestionCheckbox">
                            <div class="QuestionCheckboxInnerDiv fa fa-square UnSeen"></div>
                            <div class="font-color-blue">@(count + 1)</div>
                        </td>
                     }
                     if ((count + 1) % 3 == 0 || count == Model.Objective.Count - 1)
                     {
                        @Html.Raw("</tr>");
                     }
                     count++;
                 }

}
            </table>
        }
    }
</div>
