@model Silicus.EncourageWithAzureAd.Web.Models.NominationViewModel

@{
    ViewBag.Title = "EditNomination";
}

<script src="~/js/jquery-2.1.1.js"></script>
<script src="~/js/plugins/validate/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="//code.jquery.com/ui/1.10.3/jquery-ui.js"></script>


<style>
    .page-heading {
        margin-left: 0%;
    }

    .navbar-minimalize {
        margin-left: 35%;
    }
</style>

<div class="row border-bottom">
    <nav class="navbar  " role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
</div>
<div class="row wrapper border-bottom white-bg page-heading border-bottom" style="width:90%;">
    <div class=" col-sm-12">
        <h1 id="heading">Edit Nomination</h1>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row" style="width:80%;padding-top:20px;margin-left:3%;">
        <div style="text-align:center;">
            <label style="color:#0067AA;padding-bottom:1%;">For  @String.Format("{0:MMMM}", DateTime.Now) - @DateTime.Now.Year</label>
        </div>
        @using (Html.BeginForm("EditSavedNomination", "Nomination", FormMethod.Post, new { id = "editNominationForm" }))
        {
            @*@Html.AntiForgeryToken()*@

            @Html.HiddenFor(model => model.NominationId, new { htmlAttributes = new { @id = "NominationId" } });
            @Html.HiddenFor(model => model.ManagerId);
            @Html.HiddenFor(model => model.IsSubmitted, new { htmlAttributes = new { @id = "IsSubmitted" } });
            @Html.HiddenFor(model => model.AwardId)
            @Html.HiddenFor(model => model.ProjectID)
            @Html.HiddenFor(model => model.DepartmentId)
            @Html.HiddenFor(model => model.ResourceId)
            @Html.HiddenFor(model => model.IsPLC)

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div id="basicFields">
                <div class="white-bg" style="padding-top:10px;padding-bottom:10px;padding-left:2%" >
                    <div class="form-group row">
                        @Html.Label("Nomination Category", htmlAttributes: new { @class = "control-label col-md-3 requiredfeild", style = "text-align: left" })
                        <div>
                            @Html.DropDownListFor(model => model.AwardId, @ViewBag.Awards as SelectList, "Select", new { htmlAttributes = new { @class = "form-control" }, id = "Award", style = "width:25%" })
                            @Html.ValidationMessageFor(model => model.AwardId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.Label("Resource From", htmlAttributes: new { @class = "control-label col-md-3 requiredfeild", style = "text-align: left" })
                        <div>
                            <label> @Html.RadioButtonFor(model => model.SelectResourcesBy, "Project", new { htmlAttributes = new { @class = "form-control" }, id = "ProjectRadioButton" })Project</label>
                            &nbsp;
                            <label> @Html.RadioButtonFor(model => model.SelectResourcesBy, "Department", new { htmlAttributes = new { @class = "form-control" }, id = "DepartmentRadioButton" })Department</label>
                            @Html.ValidationMessageFor(model => model.SelectResourcesBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row" id="projectInput">
                        @Html.Label("Project", htmlAttributes: new { @class = "control-label col-md-3 requiredfeild", style = "text-align: left" })
                        <div>
                            @Html.DropDownListFor(model => model.ProjectID, @ViewBag.ProjectsUnderCurrentUser as SelectList, "Select", new { htmlAttributes = new { @class = "form-control" }, id = "SelectedProject", style = "width:25%" })
                            @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row" id="departmentInput">
                        @Html.Label("Department", htmlAttributes: new { @class = "control-label col-md-3 requiredfeild", style = "text-align: left" })
                        <div>
                            @Html.DropDownListFor(model => model.DepartmentId, @ViewBag.DepartmentsUnderCurrentUser as SelectList, "Select", new { htmlAttributes = new { @class = "form-control" }, id = "SelectedDepartment", style = "width:25%" })
                            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.Label("Resource", htmlAttributes: new { @class = "control-label col-md-3 requiredfeild", style = "text-align: left" })
                        <div>
                            @Html.DropDownListFor(model => model.ResourceId, @ViewBag.Resources as SelectList, "Select", new { htmlAttributes = new { @class = "form-control" }, id = "Resources", style = "width:25%" })
                            @Html.ValidationMessageFor(model => model.ResourceId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @*@Html.Label("PLC", htmlAttributes: new { @class = "control-label col-md-3", style = "text-align: left" })*@
                        <label class="control-label col-md-3" style="text-align: left">PLC<span style="color:#0067AA;"> <i class="fa fa-question-circle" title="Programmable logic controller" aria-hidden="true"></i></span></label>
                        <div>
                            @Html.CheckBoxFor(model => model.IsPLC, new { htmlAttributes = new { @class = "form-control" } }) Yes
                            @Html.ValidationMessageFor(model => model.IsPLC, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group white-bg" style="padding-bottom:10px;padding-top:10px;padding-left:2%;">
                <div class="row">
                    @Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2 requiredfeild", style = "text-align: left" })
                    <div>
                        @Html.TextAreaFor(model => model.MainComment, new { htmlAttributes = new { @class = "form-control" }, placeholder = "Maximum 1000 words", id = "commentBox", style = "min-width: 70%;margin-left:8%", rows = "7", maxlength = 1000 })
                        <div style="text-align:right;">
                            @Html.ValidationMessageFor(model => model.MainComment, "", new { @class = "text-danger", id = "managerCommentValidationmessage" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group" style="padding-bottom:1%" id="disclamer">
                <span style="font-family:  Arial, Helvetica, sans-serif;color:rgba(255, 0, 0, 0.71)">
                    <label>Disclaimer :</label>  Mention your comments against the criteria your nominee fits in. Please note that it’s NOT mandatory to mention comments against each criteria given below. You can leave the comment area blank for the criteria which are not relevant.
                </span>
            </div>

            <div>
                <br />
                <div>
                    <table class="table table-hover issue-tracker white-bg" id="criteriaTable">
                        <tr><th></th><th style="text-align:center">Criteria</th><th style="text-align:center">Manager Comment</th></tr>
                        @if (Model.IsSubmitted == true)
                        {
                            @Html.DisplayFor(model => model.Comments)
                        }
                        else
                        {
                            @Html.EditorFor(model => model.Comments)
                        }
                    </table>
                    <div style="text-align:right;">
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger", id = "criterisCommentValidationmessage" })
                    </div>
                    <span id="criteriaCommentValidationMsg"></span>
                </div>
            </div>

            <br />

            <div class="form-group row">
                @if (Model.IsSubmitted != true)
                {
                    <div style="text-align:center;">
                        <input type="button" value="Discard" id="discardButton" class="btn btn-primary btnSameSize" />
                        <input type="button" name="submit" value="Save Draft" id="saveButton" class="btn btn-primary btnSameSize" onclick="return checkValidationOnSaveDraft();" />
                        <input type="button" name="button" value="Submit" class="btn btn-primary btnSameSize" onclick="return checkValidationOnSubmit();" />
                        <input type="button" value="Back" class="btn btn-primary btnSameSize " onclick="location.href='@Url.Action("SavedNomination", "Nomination")'" />
                        <div class="=row">&nbsp;</div>
                        <div class="=row">&nbsp;</div>
                    </div>
                }
                else
                {
                    <div style="text-align:center;">
                        <input type="button" value="Back" class="btn btn-primary btnSameSize " onclick="location.href='@Url.Action("SavedNomination", "Nomination")'" />
                    </div>
                    <div class="=row">&nbsp;</div>
                }
            </div>
        }
    </div>
</div>




<script type="text/javascript">
    $(document).ready(function () {
        var selectedProject = $("#SelectedProject").val();
        var selectedDept = $("#SelectedDepartment").val();
        var isSubmitted = $("#IsSubmitted").val();

        $('#basicFields').find('*').prop('disabled', true);
        if (selectedProject != "")
            $("#departmentInput").hide();
        else if (selectedDept != "")
            $("#projectInput").hide();

        if (isSubmitted == "True") {
            $('#basicFields').find('*').prop('disabled', true);
            $('#commentBox').removeAttr('placeholder');
            $('#commentBox').prop('disabled', true);
            $('#heading').text("Nomination Details")
        }
    })

    $("#ProjectRadioButton").change
        (
         function () {
             $("#departmentInput").hide();
             $("#SelectedProject").prop('selectedIndex', 0);
             $('#Resources').empty();
             $('#Resources').append($("<option selected></option>").val(null).html("Select"));
             $("#projectInput").show();
         });

    $("#DepartmentRadioButton").change
        (
          function () {
              $("#projectInput").hide();
              $("#SelectedDepartment").prop('selectedIndex', 0);
              $('#Resources').empty();
              $('#Resources').append($("<option selected></option>").val(null).html("Select"));
              $("#departmentInput").show();
          });

    //function checkCriteriaComments() {
    //    var comments = new Array();

    //    $(".criteriaComment").children("textarea").each(function (data) {
    //        if ($(this).val().trim())
    //            comments.push($(this).val());
    //    });

    //    if (comments.length < 1) {
    //        $(".criteriaComment").children("textarea").first().tooltip({ title: "Enter at least one criteria comment.", placement: 'right' }).tooltip('show');
    //        return false;
    //    }

    //    if (!$("#commentBox").val()) {
    //        $("#commentBox").tooltip({ title: "Enter main comment.", placement: 'right' }).tooltip('show');
    //        return false;
    //    }
    //}

    $("#SelectedProject").change(function () {
        var selectedProject = $("#SelectedProject").val();
        var selectedAward = $("#Award").val();

        $('#Resources').empty();
        $('#Resources').append($("<option selected></option>").val(null).html("Select"));

        var ServiceUrl = "/Nomination/ResourcesInProject?engagementID=" + selectedProject;
        $.ajax({
            type: 'post',
            url: '@Url.Action("ResourcesInProject", "Nomination")',
            data: JSON.stringify({ engagementID: selectedProject, awardId: selectedAward }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                for (var key in data) {
                    $('#Resources')
                        .append($("<option></option>").val(data[key].ID).html(data[key].DisplayName));
                }
            }
        });
    });

    $("#SelectedDepartment").change(function () {
        var selectedDept = $("#SelectedDepartment").val();
        var ServiceUrl = "/Nomination/ResourcesInDepartment?departmentID=" + selectedDept;
        $('#Resources').empty();
        $('#Resources').append($("<option selected></option>").val(null).html("Select"));

        $.ajax({
            type: 'GET',
            url: ServiceUrl,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                for (var key in data) {
                    $('#Resources')
                        .append($("<option></option>").val(data[key].ID).html(data[key].DisplayName));
                }
            }
        });
    });


    $("#discardButton").click(function () {

        swal({
            title: "Discard Nomination",
            text: "Do you want to discard this nomination?",
            type: "info",
            showCancelButton: true,
            confirmButtonColor: "#88a364",
            confirmButtonText: "Yes!",
            cancelButtonText: "No!",
            closeOnConfirm: false,
            closeOnCancel: false
        },
               function (isConfirm) {
                   if (isConfirm) {
                       var nominationId = $("#NominationId").val();

                       $.ajax({
                           url: '@Url.Action("DiscardNomination", "Nomination")',
                           type: "POST",
                           data: JSON.stringify({ nominationId: nominationId }),
                           datatype: "JSON",
                           contentType: "application/json; charset=utf-8",
                           success: function (data) {
                               swal({
                                   title: "Nomination Discarded!",
                                   text: "",
                                   type: "info",
                                   showCancelButton: false,
                                   confirmButtonColor: "#88a364",
                                   confirmButtonText: "Ok",
                               },
                               function () {
                                   if (isConfirm) {
                                       window.location.href = '@Url.Action("SavedNomination", "Nomination")';
                                   }
                               });
                           },
                           error: function () {
                               swal("Error", "Oops! Something wrong happened..");
                           }
                       });
                   }
                   else {
                       swal("Cancelled", "Not Discard");
                       window.location.href = '@Url.Action("SavedNomination", "Nomination")';
                   }
               });
    });


    function checkValidationOnSubmit() {
        if ($('#editNominationForm').valid()) {
            var comments = 0;
            $(".criteriaComment").children("textarea").each(function (data) {
                if ($(this).val().trim())
                    comments++;
            });

            if (!$("#commentBox").val()) {
                $("#managerCommentValidationmessage").text("Enter main comment")
                return false;
            }
            else if (comments < 1) {
                $("#criterisCommentValidationmessage").text("Enter at least one criteria comment")
                return false;
            }
            else {
                swal({
                    title: "Submit Nomination",
                    text: "Do you want to nominate this candidate?",
                    type: "info",
                    showCancelButton: true,
                    confirmButtonColor: "#88a364",
                    confirmButtonText: "Yes!",
                    cancelButtonText: "No!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
               function (isConfirm) {
                   if (isConfirm) {
                       debugger;
                       var modelbjectToSend = $('#editNominationForm').serialize() + '&' + $.param({ 'submit': "Submit" }, true);

                       $.ajax({
                           type: 'post',
                           url: '@Url.Action("EditSavedNomination", "Nomination")',
                           data: modelbjectToSend,
                           success: function (data) {
                               swal({
                                   title: "Nomination Submitted!",
                                   text: "",
                                   type: "info",
                                   showCancelButton: false,
                                   confirmButtonColor: "#88a364",
                                   confirmButtonText: "Ok",
                               },
                               function () {
                                   if (isConfirm) {
                                       window.location.href = '@Url.Action("SavedNomination", "Nomination")';
                                   }
                               });
                           },
                           error: function () {
                               swal("Error", "Oops! Something wrong happened..");
                           }
                       });
                   } else {
                       swal("Cancelled", "Nomination Cancelled");
                       window.location.href = '@Url.Action("SavedNomination", "Nomination")';
                   }
               });
            }
        }
        else {
            return false;
        }
    }

    function checkValidationOnSaveDraft() {
        if ($('#editNominationForm').valid()) {
            swal({
                title: "Save Nomination",
                text: "Do you want to save this nomination?",
                type: "info",
                showCancelButton: true,
                confirmButtonColor: "#88a364",
                confirmButtonText: "Yes!",
                cancelButtonText: "No!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
           function (isConfirm) {
               if (isConfirm) {
                   var modelbjectToSend = $('#editNominationForm').serialize() + '&' + $.param({ 'submit': "Save" }, true);

                   $.ajax({
                       type: 'post',
                       url: '@Url.Action("EditSavedNomination", "Nomination")',
                       data: modelbjectToSend,
                       success: function (data) {
                           swal({
                               title: "Nomination Saved!",
                               showCancelButton: false,
                               confirmButtonColor: "#88a364",
                               confirmButtonText: "Ok"
                           },
                           function () {
                               if (isConfirm) {
                                   window.location.href = '@Url.Action("SavedNomination", "Nomination")';
                               }
                           });
                       },
                       error: function () {
                           swal("Error", "Oops! Something wrong happened..");
                       }
                   });
               } else {
                   swal("Cancelled", "Nomination Save Cancelled");
                   window.location.href = '@Url.Action("SavedNomination", "Nomination")';
               }
           });
        }
        else {
            return false;
        }
    }

    $("#criteriaTable").on('click', function () { $("#criterisCommentValidationmessage").text("") });
    $("#commentBox").on('click', function () { $("#managerCommentValidationmessage").text("") });
</script>
