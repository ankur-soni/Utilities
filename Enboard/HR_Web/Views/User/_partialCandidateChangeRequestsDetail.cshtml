@*@model IEnumerable<Models.LoginDetails>*@
@model PagedList.IPagedList<Data.CandidateChangeRequestsDetail>
@using PagedList;
@using PagedList.Mvc;
@*Model for confirmation*@

@{
    var downArrow = "~/images/down-arrow.png";
    var upArrow = "~/images/up-arrow.png";
    var downArrowPath = @Url.Content(downArrow);
    var upArrowPath = @Url.Content(upArrow);
}

<div class="box-body table-responsive">
    
    <table id="userGrid" class="table table-bordered table-striped dataTable tablesorter" aria-describedby="example1_info">
        <thead style="background-color:#428bca;color:white;">
            <tr>
                <th style="border-bottom-width: 3px; " onclick="javascript:sorting('@ViewBag.NameParm','@ViewBag.PageIndex');">
                    User Name @if (@ViewBag.NameParm == "Name_DESC")
                    {<i class="fa fa-sort-down"></i> }
                    else
                    {<i class="fa fa-sort-up"></i> }

                </th>
                <th style="border-bottom-width: 3px;" data-sort='disabled'> Requested Change in (Field Name)</th>
                <th style="border-bottom-width: 3px;" data-sort='disabled'> Old Value</th>
                <th style="border-bottom-width: 3px;" data-sort='disabled'> New Value </th>
                <th style="border-bottom-width: 3px; width:5%; text-align:center;" data-sort='disabled'>Action</th>
            </tr>
        </thead>

        <tbody>
            @if(Model!= null && Model.Count>0)
            { 
             foreach (var user in Model)
            {
                var @strUserFullName = user.LoginDetail.FirstName + " " + user.LoginDetail.LastName;
                <tr id="@user.CandChangeReqID">
                    
                    <td>@Html.Raw(strUserFullName)</td>
                    <td>@Html.Raw(user.FieldName)</td>
                    <td>@Html.Raw(user.OldValue)</td>
                    <td>@Html.Raw(user.FieldValue)</td>
                    <td>
                        
                        
                        <div class="btn-group">
                            <button type="button" class="btn btn-xs dropdown-toggle" data-toggle="dropdown">
                                <span class="glyphicon glyphicon-cog"></span> 
                            </button>
                            <ul class="dropdown-menu pull-right" role="menu">
                                <li>
                                    <span class="glyphicon glyphicon-ok" style=" color:green;cursor:pointer;" title="Approve Change Request" onclick="return changeRequest(@user.CandChangeReqID,true)"><span>Approve</span></span>
                                </li>
                                <li>
                                    <span class="glyphicon glyphicon-remove" style="color:red; cursor:pointer;" title="Deny Change Request" onclick="return changeRequest(@user.CandChangeReqID,false)"><span>Deny</span></span>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
            }
            else
            {
                <tr>
                    <td style="text-align: center;" colspan="5">
                        No Data Found
                    </td>
                </tr>
            }

        </tbody>

    </table>
</div>
@*this div is used for apply paging*@
@if (Model.PageCount > 1)
{
    @Html.PagedListPager(Model, Page => Url.Action("CandidateChangeRequests", new { Page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }))
    string sortOrder = ViewBag.CurrentSort;
    int index = ViewBag.PageIndex != null ? ViewBag.PageIndex : 1;
    @Html.Hidden("hdnSortOrder", sortOrder)
    @Html.Hidden("hdnIndex", index)
}