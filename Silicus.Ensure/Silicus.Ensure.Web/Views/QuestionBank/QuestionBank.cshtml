@model List<Silicus.Ensure.Web.Models.QuestionModel>
@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "Question Bank";
    var role = Silicus.Ensure.Web.MvcApplication.getCurrentUserRoles();
}
<style>
    .k-loading-image {
        background-image: none !important;
    }
</style>
<script>
    $(window).load(function (){
        userRole = @Html.Raw(Json.Encode(role));
        if ((userRole.indexOf("@Silicus.Ensure.Models.Constants.RoleName.Panel.ToString()")<0)) {
            $('#ReviewAllQuestions').hide();
        }
    })

</script>

<div class="row">
    <div class="col-sm-12">
        <h1 class="page-title">
            Question Bank
        </h1>
    </div>
</div>


    <div class="toolbar">
        <div class="row">
            <div class="col-sm-12">
                @*<div class="col-sm-4 col-md-4 col-lg-3 M-T15 M-B15">
                    <div class="input-group">
                        <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                        <input type="text" class="form-control" id='FieldFilter' placeholder="Search" style="height: 38px;">
                        <span class="input-group-btn">
                            <button id="QuestionSearchRefresh" class="btn btn-default" style="border:1px solid #0070B9!important" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>*@
            </div>
        </div>

        <div class="row">
            
                <div class="col-sm-5 col-md-5 col-lg-4 M-B15 addclearFloat">
                    <a style="float:right" href='/QuestionBank/AddQuestions?questionId=0' class='k-button k-button-icontext k-grid-add'><span class='fa fa-plus'></span>&nbsp;Add question</a>
                </div>
            
        </div>
    </div>
    <div class="kendogrid M-B15">
        @Html.Partial("_QuestionsGrid")
    </div>

<script>
    $(document).ready(function () {
        //$('.page-wrapper').css('padding-bottom', '60px');
        SelectedMenu('#questionList-link');
        $("#questionbank-submenu").css("display", "block");
        $("#questionbank-link a span.arrow").addClass("open");
        $("#messageDiv").hide();
        $('#ReviewAllQuestions').on('click', ReviewAllQuestions);
        SetNavigationMenuActive('QuestionBank');
        // Kendo Grid Filter (Search)
        $("#FieldFilter").keyup(function () {
            var value = $("#FieldFilter").val();
            var grid = $("#questionGrids").data("kendoGrid");
            var pageSize = grid.dataSource.pageSize();
            if (value) {
                var filter = { logic: "or", filters: [] };
                filter.filters.push({ field: "QuestionDescription", operator: "contains", value: value });
                filter.filters.push({ field: "QuestionType", operator: "contains", value: value });
                filter.filters.push({ field: "Tags", operator: "contains", value: value });
                filter.filters.push({ field: "ProficiencyLevel", operator: "contains", value: value });
                grid.dataSource.query({ filter: filter });
                grid.dataSource.sort({ field: "QuestionDescription", dir: "asc" });
                grid.dataSource.pageSize(pageSize);
            } else {
                grid.dataSource.filter({});
            }
        });

        $("#QuestionSearchRefresh").click(function (e) {
            e.preventDefault();
            var datasource = $("#questionGrids").data("kendoGrid").dataSource;
            //Clear filters:
            datasource.filter([]);
            $("#FieldFilter").val('');
        });
    });

    function ProficiencyLevelAndQuetiontype() {
        var queType = $("#QuestionType").val();
        var level = $("#ProficiencyLevelDropDown").val();

        var grid = $("#questionGrids").data("kendoGrid");
        var filterArray = new Array();

        filterArray.push({ field: "QuestionType", operator: "contains", value: queType });
        filterArray.push({ field: "ProficiencyLevel", operator: "contains", value: level });
        grid.dataSource.filter(filterArray);
    }
    // Display Question By Question Type.
    function QuestionTypeChange() {
        ProficiencyLevelAndQuetiontype();
    }

    function ProficiencyLevelDropDownChange() {
        ProficiencyLevelAndQuetiontype();
    }

    function QuestionPerPageChange() {
        var value = $("#QuestionPerPage").val();
        var grid = $("#questionGrids").data("kendoGrid");
        grid.dataSource.pageSize(value);
        grid.refresh();
    }

    // Delete Question
    function ConfirmDeleteQuestionRow(e) {
        var tr = $(e.target).closest("tr");
        var data = $("#questionGrids").data('kendoGrid').dataItem(tr);
        deleteGridRow('questionGrids', data);

    }


    function deleteGridRow(gridId, data) {
        swal({
            title: "Are you sure,",
            text: "Are you sure, you want to delete this record?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
        function (isConfirm) {
            if (isConfirm) {
                grid = $("#" + gridId).data("kendoGrid");
                grid.dataSource.remove(data);
                grid.dataSource.sync();
                ShowMessage("Question deleted successfully.", 1);
            }
        });
    }

    function ReviewAllQuestions(e) {
        hideCustomLoader();
        $.ajax({
            url: '/questionbank/reviewquestion?questionid=2',
            success: function (data) {
                hideCustomLoader();
                $('#ReviewQuestionModal').modal('show');
                $('#ReviewQuestionModal .modal-body').html("");
                $('#ReviewQuestionModal .modal-body').html(data);
                // settimeout(showdata(data), 9000);
            }
        });
    }

    function  ApproveQuestion(){
        var questionId=$('#QuestionId').attr('data-value');
        alert(questionId);
    }

</script>
@*<div id="dialog" title="Create Album" style="overflow: hidden;"></div>*@
<div class="modal fade" id="ReviewQuestionModal" role="dialog" style="z-index:99999" tabindex='-1' data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div class="popup-header-wrapper dashboard-header-bgcolor mainheading txt-color-white">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="">
                                <span class="font24">Configuration</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <div class="popup-cancel-btn">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-lg-4 col-sm-4 pull-right">
                                <div id="saveRehireEmployeeConfig">
                                    <button id="ApproveQuestion" type="button" class="save bg-red form-group">
                                        <i class="fa fa-save" onlick="ApproveQuestion()"></i> Approve
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
