@model Silicus.Ensure.Web.Models.UserViewModel
@using Silicus.Ensure.Models.Constants
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = "CandidateAdd";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-content">
    @if (Model.UserId != 0)
    {
        <h2>Edit Panel</h2>
    }
    else
    {
        <h2>Add Panel</h2>
    }
    @using (Html.BeginForm("CandidateSave", "User", FormMethod.Post, new { id = "frmSearchAllNdc", EncType = "multipart/form-data" }))
    {
        @Html.HiddenFor(m => m.UserId)
        <div class="fluid mt20">
            <div class="row">
                <div class="alert alert-success" id="messageDiv">
                    <strong>Error!</strong> <span id="messageContent">@Html.ValidationSummary(true)</span>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.FirstName)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.LastName)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Email)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "redText" })
                </div>
            </div>
            <div class="row" style=" margin-bottom:10px;">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Role)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(model => model.Role)
                                    .OptionLabel("--Select--")
                                    .BindTo(EnumHelper.GetSelectList((typeof(RoleName)))
                                    .Select(x => new SelectListItem { Text = x.Text, Value = x.Text })
                                    .Skip(1))
                                    .Value(Model.Role)
                                    .HtmlAttributes(new { style = "width: 100%;border-color: #c5c5c5;" })
                    )

                </div>
            </div>
            <div class="row" style="margin-bottom:10px;">
                <div class="col-md-4">
                    <span>Gender:</span><span style="color:red">*</span>
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(m => m.Gender)
                    .OptionLabel("--Select--")
                    .Name("Gender")
                    .DataTextField("Text")
                    .DataValueField("Value")
                        .BindTo(new List<SelectListItem>
                        () {
                        new SelectListItem(){
                        Text="Male",
                        Value="Male"
                        },
                        new SelectListItem(){
                        Text="Female",
                        Value="Female"
                        }
                        }).HtmlAttributes(new { style = "width: 100%" }))
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Department)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
                </div>
            </div>
            <div class="row" style=" margin-bottom:10px;">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Position)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @(Html.Kendo().DropDownListFor(model => model.Position)
                            .OptionLabel("--Select--")
                            .BindTo(Model.PositionList)
                            .DataTextField("PositionName")
                            .DataValueField("PositionName")
                            .Value(Model.Position)
                            .HtmlAttributes(new { style = "width: 100%;border-color: #c5c5c5;" })
                    )

                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Experience)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Experience, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Address)<b style="color:Red;">*</b>:
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-6"></div>
                <div class="col-md-2 col-md-offset-4">
                    @(Html.Kendo().Button()
                            .Name("btnCancel").Icon("cancel")
            .HtmlAttributes(new { type = "button" })
            .Content("Cancel")
            .Events(ev => ev.Click("onCancelClick")))

                    @(Html.Kendo().Button()
                            .Name("btnSave").Icon("tick")
            .HtmlAttributes(new { type = "submit" })
            .Content("Save"))
                </div>
            </div>
        </div>
        <script>
            $('#Email').on('input', function (e) {
                if ($(this).val() == '') {
                    ShowMessage("Email can't be blank.", 0);
                }
                $('.redText').css('display', 'none')
                if ($('.redText').find("span").html() != '');
                {
                    ShowMessage($('.redText').find("span").html(), 0);
                }
            });
            $(document).ajaxComplete(function () {
                $('.redText').css('display', 'none')
                if ($('.redText').find("span").html() != '');
                {
                    ShowMessage($('.redText').find("span").html(), 0);
                }
            });
            $(document).ready(function () {
                if ('@Model.ErrorMessage' != '') {
                    ShowMessage("@Model.ErrorMessage", 0);
                }
                else {

                    if ($('.validation-summary-errors>ul>li').is(':empty')) { $("#messageDiv").hide(); }
                    else if ($('.validation-summary-errors>ul>li').text() != "")
                    { ShowMessage($('.validation-summary-errors>ul>li').text(), 0); }
                    else { $("#messageDiv").hide(); }

                }
                $("#btnSave").click(function (e) {
                    if (validateTag() == false) {
                        e.preventDefault();
                    }
                    else {
                        $("#frmSearchAllNdc").submit();
                    }
                });
                $(function () {
                    $("#FirstName").keypress(function (evt) {
                        var cc = (evt.charCode) ? evt.charCode : ((evt.which) ? evt.which : evt.keyCode);
                        if (cc == 32)
                            return false;
                    });
                });
            });

            function onCancelClick() {
                window.location = '@Url.Action("Candidates", "Admin")';
            }

            function validateTag() {
                if ($("#FirstName").val().trim().length == 0) {
                    $("#FirstName").focus();
                    ShowMessage("first Name can't be blank.", 0);
                    return false;
                }
                else if ($("#LastName").val().trim().length == 0) {
                    $("#LastName").focus();
                    ShowMessage("LastName  can't be blank.", 0);
                    return false;
                }
                else if ($("#Email").val().trim().length == 0) {
                    $("#Email").focus();
                    ShowMessage("Email can't be blank.", 0);
                    return false;
                }
                else if ($("#Gender").val().trim().length == 0) {
                    $("#Gender").focus();
                    ShowMessage("Gender can't be blank.", 0);
                    return false;
                }
                else if ($("#Department").val().trim().length == 0) {
                    $("#Department").focus();
                    ShowMessage("Department can't be blank.", 0);
                    return false;
                }
                else if ($("#Position").val().trim().length == 0) {
                    $("#Position").focus();
                    ShowMessage("Position can't be blank.", 0);
                    return false;
                }
                else if ($("#Experience").val().trim().length == 0) {
                    $("#Experience").focus();
                    ShowMessage("Experience can't be blank.", 0);
                    return false;
                }
            }
        </script>

        <style>
            .height {
                height: 250px;
            }
        </style>
    }
</div>
