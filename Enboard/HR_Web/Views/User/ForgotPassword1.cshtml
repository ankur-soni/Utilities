@model Models.LostPasswordModel

@{
    ViewBag.Title = "LostPassword";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

@Scripts.Render("~/bundles/jquery")

@*<link href="~/Content/bootstrap.css" rel="stylesheet" />*@
<link href="~/LoginContent/styles_for_login.css" rel="stylesheet" />

<section id="logo">
    <a href="#"><img src="/Images/Silicus.png" alt="" /></a>
</section>

<style>
    /*body {
        padding-top: 0 !important;
        padding-bottom: 20px;
    }*/

    /* Set padding to keep content from hitting the edges */
    /*.body-content {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }*/
    .label {
        color: #6D6767;
        font-size: inherit;
        font-weight: bold !important;
    }

    /*.form {

    padding-left:260px;
    }

    .textfield {
    width: 300px;
    }*/
</style>

<section class="container">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="col-lg-3 col-sm-3">
        </div>

        <div class="col-lg-7 col-sm-7">
            <section class="row">
                @using (Html.BeginForm(new { id = "FP_form" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <h4>Forgot Password</h4><br>

                        @if (TempData["emailsucc"] != null)
                        {
                            <span style="color:green">@TempData["emailsucc"]</span>;
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control name", id = "FP_txtFirstName" } })
                                <span class="red">*</span>  @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control name", id = "FP_txtLastName" } })
                                <span class="red">*</span>  @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2 label" })
                            <div class="col-md-10">
                                @*@Html.EditorFor(model => model.DOB,new { htmlAttributes = new { @class = "form-control name", id = "FP_txtDOB" } })*@
                                @*@Html.TextBoxFor(m => m.DOB, new { id = "FP_txtDOB", @class = "form-control name" })*@

                                @Html.TextBoxFor(m => m.DOB, "{0:dd/mm/yy}", new { id = "FP_txtDOB", @class = "form-control name" })
                                <span class="red">*</span>  @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <span style="padding-left: 210px;font-weight: bold">OR</span>     <br>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control email", id = "FP_txtEmail" } })
                                <span class="red">*</span> @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Reset Password" class="btn btn-default" id="FP_submit" />
                            </div>
                        </div>
                    </div>

                    <div>
                        @Html.ActionLink("Log In", "Login", new { @class = "btn btn-default" })
                    </div>
                }
            </section>
        </div>

        <div class="col-lg-2 col-sm-2">
        </div>
    </div>
</section>



<script type="text/javascript">
    $(document).ready(function () {
        $('#FP_txtDOB').datepicker({
            maxDate: 0,
            showButtonPanel: false,
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            dateFormat: 'dd/mm/yy',

        });

        $('.ui-datepicker').css('font-size', $('.ui-datepicker').width() / 17 + 'px');


        $('#FP_submit').click(function () {           

            if ($('.name').val() == '' && $('.email').val() == '') {

                $(".name").attr('required', true);

                $('.email').attr('required', true);
            }
            else if ($('#FP_txtFirstName').val() != '' && $('#FP_txtLastName').val() != '' && $('#FP_txtDOB').val() != '') {
                $(".name").attr('required', false);
                $('.email').attr('required', false);

                $(".email .name").removeClass("red");
                $('#FP_form').submit();

            }
            else if ($('.email').val() != '') {
                $(".name").attr('required', false);
                $('.email').attr('required', false);

                $(".email .name").removeClass("red");
                $('#FP_form').submit();
            }


        });
    });

    $(function () {
        $.validator.addMethod('date',
        function (value, element) {
            if (this.optional(element)) {
                return true;
            }
            var ok = true;
            try {
                $.datepicker.parseDate('dd/mm/yy', value);
            }
            catch (err) {
                ok = false;
            }
            return ok;
        });
        $(".datefield").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });

        //Datepicker validation 
        //$('.hasDatepicker').attr('readonly', true);
    });
</script>

