@model IEnumerable<Silicus.EncourageWithAzureAd.Web.Models.ReviewSubmitionViewModel>

<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
    <div class="col-lg-11 col-md-11 col-sm-11">
        <h1 class="header-name">Review Details</h1>
    </div>
</div>



@*<div class="wrapper wrapper-content animated fadeInRight">
        <div class="row" style="margin-left:4%">
            @using (Html.BeginForm())
            {
                @Html.HiddenFor(modelItem => modelItem.ReviewerId)



                @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().NominationId);
                <table class="table table-hover issue-tracker white-bg" style="width:80%;">
                    <thead>
                        <tr>
                            <td>
                                <label> Review For:</label>
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => modelItem.FirstOrDefault().NomineeName)

                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>Project/Department:</label>
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => modelItem.FirstOrDefault().ProjectOrDepartment)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>Manager:</label>
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => modelItem.FirstOrDefault().Manager)
                            </td>
                        </tr>
                    </thead>
                </table>
                <br />

                <table class="table table-hover issue-tracker" style="width:80%;table-layout:fixed">
                    <tr>
                        <th>
                            @Html.DisplayFor(modelItem => modelItem.FirstOrDefault().Manager) Says:
                        </th>
                        </tr>
                    <tr>
                        <td class="more white-bg" style="word-wrap: break-word;">
                            <div>@Model.FirstOrDefault().ManagerComment</div>
                        </td>
                    </tr>
                </table>
                <br />


                     var reviewerIndex = 1;

                    foreach (var review in Model)
                    {
                    <div class="white-bg" style="width:80%">


                        <div class="row col-md-8">
                            @Html.Label("Review Comments By : Reviewer "+ @reviewerIndex++ , new { style = "margin-left:3%;color: #0067AA;" })
                            <div class="row">&nbsp;</div>
                        </div>
                        <a class="header"><div>Expand the Comments</div></a>

                        <table class="table table-hover issue-tracker white-bg" style="width:80%">
                            <thead>
                                <tr>
                                    <th>Criteria</th>
                                    <th>Weightage</th>
                                    <th>Rating</th>
                                    <th>Points</th>
                                    <th>Manager Comment</th>
                                    <th>Reviewer Ratings</th>
                                    <th>Reviewer Comment</th>
                                </tr>
                            </thead>
                            @{
                        var j = 0;
                            }
                            @foreach (var managerComment in review.ManagerComments)
                            {
                                <tbody>
                                    <tr>
                                        @Html.Hidden("CriteriaId", @managerComment.CriteriaId)
                                        @{
                                var criteria = review.Criterias.FirstOrDefault(mc => mc.Id == managerComment.CriteriaId);
                                        }
                                        <td class="col-md-4">@(criteria != null ? criteria.Title : "")</td>
                                        <td class="col-md-1">@managerComment.Weightage</td>
                                        <td class="col-md-2">
                                            @Html.DropDownList("Comments[" + @j + "].Rating",
                                        Enumerable.Range(1, 5).
                                            Select(r => new SelectListItem
                                            {
                                                Value = r.ToString(),
                                                Text = r.ToString()
                                            }), "", new { @class = "example-square", @autocomplete = "off", @value = managerComment.Rating })
                                        </td>
                                        <td class="col-md-1">@(managerComment.Weightage * managerComment.Rating / 100.0)</td>
                                        <td class="more" style="word-break:break-all">@managerComment.Comment</td>
                                        @{
                                var reviewwrComment = review.Comments.FirstOrDefault(c => c.CriteriaId == managerComment.CriteriaId);
                                        }
                                        <td class="col-md-2">
                                            @Html.DropDownList("Comments[" + @j + "].Credit",
                                        Enumerable.Range(1, 5).
                                            Select(r => new SelectListItem
                                            {
                                                Value = r.ToString(),
                                                Text = r.ToString()
                                            }), "", new { @class = "example-square", @autocomplete = "off", @value = (reviewwrComment != null ? reviewwrComment.Credit : 0) })
                                        </td>

                                        <td class="col-md-3">@(reviewwrComment != null ? reviewwrComment.Comment : "")<div class="textarea"></div></td>

                                        @Html.Hidden("Comments[" + @j + "].CriteriaId", managerComment.CriteriaId)
                                    </tr>
                                </tbody>
                                j++;

                            }


                            @if (review.ManagerComments != null)
                            {
                                for (int i = 0; i < review.ManagerComments.Count; i++)
                                {
                                    @Html.HiddenFor(model => review.ManagerComments[i].Comment)
                                }
                            }

                            <tr>
                                <td></td>
                                <td></td>
                                <td style="text-align:center;color:#0063A7;font-weight:bold">Total Points:</td>
                                <td> @(review.ManagerComments.Sum(a => (a.Rating * a.Weightage / 100.0))) </td>
                                <td style="text-align:center;color:#0063A7;font-weight:bold">
                                    Average Ratings:
                                </td>
                                <td id="totalCredits" class="col-md-1 text-center font-bold">
                                    @if (review.Comments != null && review.Comments.Any())
                                    {
                                        @(review.Comments.Average(a => a.Credit))
                                    }
                                    else
                                    {
                                        @:0.00
                    }
                                </td>
                                <td></td>
                            </tr>

                        </table>
                    </div>
                    <div class="row">&nbsp;</div>
                    }

                <div class="form-group row">
                    <div style="text-align:center;width:80%;">
                        <input type="button" value="Back" class="btn btn-primary btnSameSize" onclick="location.href='@Url.Action("SavedReviews","Nomination")'" />
                    </div>
                </div>

            }
        </div>
        <div class="row">&nbsp;</div>
        <div class="row">&nbsp;</div>
    </div>*@
@using (Html.BeginForm())
{
    @*@Html.HiddenFor(modelItem => modelItem.ReviewerId)*@
    @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().NominationId);
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="panel panel-info M-T15">
                <div class="panel-heading"> <span>Review For:&nbsp; @Html.DisplayFor(modelItem => modelItem.FirstOrDefault().NomineeName)</span></div>
                <div class="panel-wrapper collapse in" aria-expanded="true">
                    <div class="panel-body">
                       
                        <table class="table table-hover issue-tracker white-bg">
                            
                                <tr>
                                    <td>
                                        <label>Project/Department:</label>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => modelItem.FirstOrDefault().ProjectOrDepartment)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>Manager:</label>
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => modelItem.FirstOrDefault().Manager)
                                    </td>
                                </tr>
                            
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="panel panel-info">
                <div class="panel-heading"> <span>@Html.DisplayFor(modelItem => modelItem.FirstOrDefault().Manager) Says:</span></div>
                <div class="panel-wrapper collapse in" aria-expanded="true">
                    <div class="panel-body">
                       
                        <table class="table table-hover issue-tracker">
                            <tr>
                                <td class="more" style="word-wrap: break-word;">
                                    <div>@Model.FirstOrDefault().ManagerComment</div>
                                </td>
                            </tr>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="box M-B60">
                <div class="f1">
                    <div class="wizard-box" style="margin-top:0px;">

                        @{  var reviewerIndex = 1;}


                        @foreach (var review in Model)
                        {
                            <div class="white-bg">
                                @*<div class="row col-md-8">
                                    @Html.Label("Review Comments By : Reviewer " + @reviewerIndex++)
                                    <div class="row">&nbsp;</div>
                                </div>
                                <a class="header"><div>Expand the Comments</div></a>*@
                               

                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Criteria</th>
                                            <th colspan="4">Manager</th>
                                            <th colspan="2">Reviewer</th>
                                        </tr>
                                        <tr>
                                            <th></th>
                                            <th>Weightage</th>
                                            <th>Rating</th>
                                            <th>Points</th>
                                            <th>Comments</th>
                                            <th>Rating</th>
                                            <th>Comments</th>
                                        </tr>
                                    </thead>
                                    @{
                            var j = 0;
                                    }
                                    @foreach (var managerComment in review.ManagerComments)
                                    {
                                        <tbody>
                                            <tr>
                                                @Html.Hidden("CriteriaId", @managerComment.CriteriaId)
                                                @{
                                        var criteria = review.Criterias.FirstOrDefault(mc => mc.Id == managerComment.CriteriaId);
                                                }
                                                <td class="col-md-4">@(criteria != null ? criteria.Title : "")</td>
                                                <td class="col-md-1">@managerComment.Weightage</td>
                                                <td class="col-md-2">
                                                    @Html.DropDownList("Comments[" + @j + "].Rating",
                                        Enumerable.Range(1, 5).
                                            Select(r => new SelectListItem
                                            {
                                                Value = r.ToString(),
                                                Text = r.ToString()
                                            }), "", new { @class = "example-square", @autocomplete = "off", @value = managerComment.Rating })
                                                </td>
                                                <td class="col-md-1">@(managerComment.Weightage * managerComment.Rating / 100.0)</td>
                                                <td class="more" style="word-break:break-all">@managerComment.Comment</td>
                                                @{
                                        var reviewwrComment = review.Comments.FirstOrDefault(c => c.CriteriaId == managerComment.CriteriaId);
                                                }
                                                <td class="col-md-2">
                                                    @Html.DropDownList("Comments[" + @j + "].Credit",
                                        Enumerable.Range(1, 5).
                                            Select(r => new SelectListItem
                                            {
                                                Value = r.ToString(),
                                                Text = r.ToString()
                                            }), "", new { @class = "example-square", @autocomplete = "off", @value = (reviewwrComment != null ? reviewwrComment.Credit : 0) })
                                                </td>

                                                <td class="col-md-3">@(reviewwrComment != null ? reviewwrComment.Comment : "")<div class="textarea"></div></td>

                                                @Html.Hidden("Comments[" + @j + "].CriteriaId", managerComment.CriteriaId)
                                            </tr>
                                        </tbody>
                                        j++;

                                    }


                                    @if (review.ManagerComments != null)
                                    {
                                        for (int i = 0; i < review.ManagerComments.Count; i++)
                                        {
                                            @Html.HiddenFor(model => review.ManagerComments[i].Comment)
                                        }
                                    }

                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td>Total Points:</td>
                                        <td> @(review.ManagerComments.Sum(a => (a.Rating * a.Weightage / 100.0))) </td>
                                        <td>
                                            Average Ratings:
                                        </td>
                                        <td id="totalCredits" class="col-md-1 text-center font-bold">
                                            @if (review.Comments != null && review.Comments.Any())
                                            {
                                                @(review.Comments.Average(a => a.Credit))
                                            }
                                            else
                                            {
                                                @:0.00
                                            }
                                        </td>
                                        <td></td>
                                    </tr>

                                </table>



                            </div>
                        }

                    </div>
                    <div class="row M-T15">

                        <div class="pull-right btn-nav">

                            <input type="button" value="Back" class="btn btn-primary" onclick="location.href='@Url.Action("SavedReviews","Nomination")'" />
                            
                        </div>



                    </div>
                </div>
                    </div>
                </div>
            </div>

}












<script src="~/js/jquery-2.1.1.js"></script>
<script src="~/js/jquery.barrating.min.js"></script>
<script>

    $(".header").click(function () {
        $header = $(this);
        $content = $header.next();
        $content.slideToggle(100, function () {
            $header.text(function () {
                //change text based on condition
                return $content.is(":visible") ? "Collapse the Comments" : "Expand the Comments";
            });
        });
    });

    var ratings = $('.example-square');

    $.each(ratings, function (index) {
        var id = "#" + this.id;
        var rating = +this.getAttribute("value");

        $(id).barrating('show', {
            theme: 'bars-square',
            showValues: true,
            showSelectedRating: false,
            readonly: true
        });

        $(id).barrating('set', rating);
    });
    //});
</script>
