@model Models.ChangeRequestDetails
@{
    var CountryCodeList = (SelectList)ViewBag.CountryCodeList;
}

@using (Ajax.BeginForm("SaveChangeRequestDetails", "User", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccessForm" }, new { id = "PD_ChangeRequestFormId" }))
{
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.FirstName) <span class="red">*</span>
                            @Html.TextBoxFor(m => m.FirstName, new { id = "txtCRFirstName", placeholder = "First Name", @class = "form-control", @tabindex = 28 })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.LastName) <span class="red">*</span>
                            @Html.TextBoxFor(m => m.LastName, new { id = "txtCRLastName", placeholder = "Last Name", @class = "form-control", @tabindex = 29 })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.EmpEmail) <span class="red">*</span>
                            @Html.TextBoxFor(m => m.EmpEmail, new { id = "txtCREmpEmail",  @class = "form-control", @tabindex = 30, })
                            @Html.ValidationMessageFor(model => model.EmpEmail, "", new { @class = "text-danger" })</div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.DateofBirth) <span class="red">*</span>
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.DateofBirth, String.Format("{0:dd/MM/yyyy}", Model.DateofBirth), new { id = "txtCRDOB", @class = "form-control", style= "z-index: 10000 !important;", tabindex = 31 })
                                <label class="input-group-addon btn" for="txtCRDOB">
                                    <span class="fa fa-calendar"></span>
                                </label>
                            </div>
                            @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                            <label id="lblComparefutureDateError" class="text-danger" style="display:none;"> </label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("Contact Number") <span class="red">*</span>
                            <div class="input-group">
                                @Html.DropDownListFor(m => m.CountryCode, CountryCodeList, "Select", new { id = "ddlCRCountryCode", @class = "form-control titleSelect", placeholder = "Select Country Code", tabindex = 32 })
                                @Html.TextBoxFor(m => m.ContactNumber, new { id = "txtCRContactNumber", @class = "input.digit form-control", @tabindex = 33, @maxlength = "20" })
                            </div>
                            @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })  
                            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })  
                        </div>
                    </div>
                </div>

    <div class="row">
        <div class="col-md-12">
            @*<span class="pull-right userNote"> <i class="fa fa-certificate" aria-hidden="true"></i> You can not edit the details for which the change request is already pending.</span>*@
            <span class="pull-right userNote"> <i class="fa fa-certificate" aria-hidden="true"></i> Details cannot be edited for a pending change request.</span>
        </div>
    </div>

}


<script type="text/javascript">

    $(document).ready(function () {
        $('#txtCRContactNumber').on('input keyup', function (e) { $(this).val($(this).val().replace(/[^\d]/g, '')); });

        //Disables fields for which reuqest is already pending 
        //Ajax call for controller's OpenFeedbackForm action method to get bulletin details to open dialog 
        $.ajax({
            url: '/User/CheckPendingRequests/',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                
                $.each(data, function (index,item) {
                   
                    //Disable textboxes if there requests are already pending
                    if (data[index]=="FirstName")
                    {
                        //$("#txtCRFirstName").prop('readonly', true);
                        $("#txtCRFirstName").attr('disabled', 'disabled');
                    }
                    if (data[index] == "LastName") {
                     //   $("#txtCRLastName").prop('readonly', true);
                        $("#txtCRLastName").attr('disabled', 'disabled');
                    }
                    if (data[index] == "Email") {
                      //  $("#txtCREmpEmail").prop('readonly', true);
                        $("#txtCREmpEmail").attr('disabled', 'disabled');
                    }
                    if (data[index] == "DOB") {
                      //  $("#txtCRDOB").prop('disabled', true);
                        $("#txtCRDOB").attr('disabled', 'disabled');
                    }
                    if (data[index] == "ContactNumber") {
                       // $("#txtCRContactNumber").prop('readonly', true);
                        $("#txtCRContactNumber").attr('disabled', 'disabled');
                    }
                    if (data[index] == "CountryCode") {
                        //$("#ddlCRCountryCode").attr('readonly', true);
                        $("#ddlCRCountryCode").attr('disabled', 'disabled');
                    }

                });

            },
            error: function (data) {
                toastr.error("Error occurred while checking pending change requests.");
            }
        });

        //Added below line of code for client side validations
        $.validator.unobtrusive.parse("#PD_ChangeRequestFormId");

        //Datepicker for DOB
        $('#txtCRDOB').datepicker({
            maxDate: 0,
            showButtonPanel: false,
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            dateFormat: 'dd/mm/yy',
            onSelect: function (dateText, inst) {
                $('#lblComparefutureDateError').text('');
                if ($('#txtCRDOB').val() != '' || $('#txtCRDOB').val() != "" || $('#txtCRDOB').val() != null || $('#txtCRDOB').val().length != 0) {

                    var date = $('#txtCRDOB').val();
                    var arrDate = date.split("/");
                    var today = new Date();
                    useDate = new Date(arrDate[2], arrDate[1] - 1, arrDate[0]);

                    var d = new Date(),
                    date = d.getDate();
                    n = d.getMonth(),

                    y = d.getFullYear();

                    if (arrDate[0] == date && arrDate[1] - 1 == n) {
                        if (arrDate[2] >= date) {
                            $('#lblComparefutureDateError').show();
                            $('#lblComparefutureDateError').text('Invalid Date of Birth');
                            return false;
                        }
                        else {
                            $('#lblComparefutureDateError').text('');
                            return true;
                        }
                    }
                }
            }
        });

        //Datepicker validation 
        //$('.hasDatepicker').attr('readonly', true);
    });

</script>