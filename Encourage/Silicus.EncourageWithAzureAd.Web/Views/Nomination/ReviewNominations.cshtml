@model IEnumerable<Silicus.EncourageWithAzureAd.Web.Models.NominationListViewModel>
@using Silicus.EncourageWithAzureAd.Web.Enums;
@using System.Drawing;
@{
    ViewBag.Title = "ReviewNominations";
}


        
<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
    <div class="col-lg-11 col-md-11 col-sm-11">
        <h1 class="header-name">Pending Reviews</h1>
    </div>
</div>


<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
      <span style="color:red"> @ViewBag.erroMessage</span>
    <div class="box M-T15">
        @if (Model.Count() == 0)
        {
             <div class="row">
                <div class="col-sm-12">
                    <div class="alert alert-danger" style="margin-bottom:0px;">
                        <span class="text-danger" style="font-size:20px">No employees are available for review..</span>
                    </div>
                </div>
            </div>
         }
        else
        {
             foreach (var item in Model)
            {
                var myBorderColor = string.Empty;
                var title = "Review Nomination";
                var actionname = "ReviewNomination";
                if (item.IsDrafted == true)
                {
                    myBorderColor = "#F8AC59";
                    actionname = "EditReview";
                    title = "Edit review";

                }

                Random randomGen = new Random();
                KnownColor[] names = (KnownColor[])Enum.GetValues(typeof(KnownColor));
                KnownColor randomColorName = names[randomGen.Next(names.Length)];
                Color randomColor = Color.FromKnownColor(randomColorName);
                <div class="el-element-overlay m-b-40">
                    <div class="col-lg-2 col-md-3 col-sm-4 col-xs-12">
                        <div class="@(item.IsSubmitted == true ? "blue-box" : "white-box")">
                            <div class="el-card-item">
                                <div class="el-card-avatar el-overlay-1">
                                    <img src="~/Images/1.jpg" />
                                    <div class="el-overlay">
                                        <ul class="el-info">
                                            <li>
                                                <a class="btn default btn-outline image-popup-vertical-fit" href="@Url.Action(actionname, "Nomination", new { nominationId = item.Id })">
                                                    <i class="fa fa-file-text-o fa-2x" aria-hidden="true"></i>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="el-card-content">
                                    <h3 class="box-title">@Html.DisplayFor(modelItem => item.DisplayName)</h3>
                                    <small>
                                        @Html.DisplayFor(modelItem => item.AwardName)
                                        @Html.DisplayFor(modelItem => item.NominationTime)
                                    </small><br>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
            <div class="clearfix"></div>

</div>
</div>
</div>

<script src="~/js/jquery-2.1.1.js"></script>
<script>
    $(function () {

        $(".fa-circle").tooltip();
    })

</script>