@model Silicus.Encourage.Web.Models.ViewShortlistDetailsViewModel



@{
    ViewBag.Title = "ShortlistNomination";
}

<style>
    .container .content {
        display: none;
        padding: 5px;
    }

    th {
    }
</style>
<div class="row border-bottom">
    <nav class="navbar  " role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>
</div>
<div class="row wrapper border-bottom white-bg page-heading border-bottom" style="width:90%;">
    <div class="col-md-11">
        <h1>Nomination</h1>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight" style="margin-left:5%">

    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.nominationId, htmlAttributes: new { id = "nominationId" })

        <table class="table table-hover issue-tracker white-bg" style="width:80%">
            <thead>
                <tr>
                    <td align="center" colspan="4" style="font-weight:bold">
                        <label>
                            Review For:
                            @Html.DisplayFor(modelItem => modelItem.userName)
                        </label>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label> Project/Department:</label>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.projectOrDepartment)
                    </td>


                </tr>
                <tr>
                    <td>
                        <label> Manager:</label>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Manager)
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>Credits</label>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.totalCredits)
                    </td>
                </tr>
            </thead>
        </table>

        <table class="table table-hover issue-tracker " style="width:80%;table-layout:fixed">
            <tr>
                <th>
                    @Html.DisplayFor(modelItem => modelItem.Manager) Says:
                </th>
            </tr>
            <tr class="white-bg">
                <td class="more" style="word-wrap: break-word;">
                    <div>@Model.nominationComment</div>
                </td>
            </tr>
        </table>

        foreach (var reviewer in Model.reviewerComments)
        {
            var creditCount = 0;
            <div class="white-bg" style="width:80%;">
                <div class=" row col-md-8 ">
                    @Html.Label("Review Comments By : " + reviewer.FirstOrDefault().ReviewerName, new { style = "margin-left:3%;color: #0067AA;" })
                    <div class="row">&nbsp;</div>
                </div>
                <a class="header"><div>Expand the Comments</div></a>

                <table class="table table-hover issue-tracker white-bg content">
                    <thead>
                        <tr></tr>
                        <tr>
                            <th>Criteria</th>
                            <th>Manager Comment</th>
                            <th>Reviewer Comment</th>
                            <th>Credits</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Criterias)
                        {
                            <tr>
                                <td class="col-md-3">@item.Title</td>

                                <td class="col-md-3">
                                    @{
                            var commentObj = Model.ManagerComments.Where(model => model.CriteriaId == @item.Id).FirstOrDefault();
                            if (commentObj != null && !string.IsNullOrEmpty(commentObj.Comment))
                            {
                                @Html.Label(commentObj.Comment, new { style = "font-weight: 500;" });
                            }
                                    }
                                </td>

                                <td class="col-md-3">
                                    @{
                            var reviewObj = reviewer.Where(model => model.CriteriaID == @item.Id).FirstOrDefault();
                            if (reviewObj != null && !string.IsNullOrEmpty(reviewObj.Comment))
                            {
                                @Html.Label(reviewObj.Comment, new { style = "font-weight: 500;" });
                            }
                                    }
                                </td>

                                <td class="col-md-2 ">
                                    @{
                            if (reviewObj != null && !reviewObj.Credit != null)
                            {
                                <div class="switch">
                                    <div class="onoffswitch" style="text-align:center;">
                                        @if (reviewObj.Credit == true)
                                        {
                                            creditCount++;
                                            <input type="checkbox" value="true" length="0" disabled="disabled" class="onoffswitch-checkbox" id='example @reviewObj.Id' checked>
                                        }
                                        else
                                        {
                                            <input type="checkbox" value="true" length="0" disabled="disabled" class="onoffswitch-checkbox" id='example @reviewObj.Id'>
                                        }

                                        <label class=" onoffswitch-label" for="example @reviewObj.Id">
                                            <span class="onoffswitch-inner"></span>
                                            <span class="onoffswitch-switch"></span>
                                        </label>
                                    </div>
                                </div>
                            }
                                    }
                                </td>
                            </tr>
                        }

                        <tr>
                            <td align="right" colspan="3" style="font-weight:bold">
                                @Html.Label("Total Credits:", new { style = "color: #0067AA;" })
                            </td>
                            <td>
                                @creditCount
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="row">&nbsp;</div>
        }

        <div class="row">&nbsp;</div>

        <div class="form-group">
            <div style="text-align:center;width:80%;">
                <input type="button" value="Shortlist" class="btn btn-default shortlist btnSameSize" onclick="location.href='#'"
                       @{   if (Model.IsShortlisted || Model.IsWinner) { @: disabled="disabled"
                                                    } } />

                <input type="button" value="Mark Winner" class="btn btn-default winner btnSameSize" onclick="location.href='#'"
                @{
                    if (Model.IsWinner)
                      {  
                        @: disabled="disabled"
                      }
                 }
               />
            </div>
        </div>
    }
</div>

<script src="~/js/jquery-2.1.1.js"></script>

<script>
  
    $(".header").click(function () {
        $header = $(this);
        $content = $header.next();
        $content.slideToggle(100, function () {
            $header.text(function () {
                //change text based on condition
                return $content.is(":visible") ? "Collapse the Comments" : "Expand the Comments";
            });
        });
    });


    $(document).ready(function () {
        $('.shortlist').click(function () {
            swal({
                title: "Shortlist Nomination",
                text: "Are you sure you want to shortlist this candidate?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#88a364",
                confirmButtonText: "Yes!",
                cancelButtonText: "No!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                 function (isConfirm, inputValue) {
                     debugger;
                     var a = inputValue;
                     if (isConfirm) {
                         var nominationIdToShortlist = $("#nominationId").val();
                         $.ajax({
                             type: 'post',
                             url: '@Url.Action("ShortlistNomination", "Review")',
                             data: JSON.stringify({ nominationId: nominationIdToShortlist }),
                             contentType: "application/json; charset=utf-8",
                             success: function (data) {
                                 swal({
                                     title: "Nomination Shortlisted",
                                     showCancelButton: false,
                                     confirmButtonColor: "#88a364",
                                     confirmButtonText: "Ok",
                                 },
                                 function () {
                                     if (isConfirm) {
                                         window.location.href = '@Url.Action("ReviewFeedbackList", "Review")';
                                     }
                                 });
                             }
                         });
                     } else {
                         swal("Cancelled", "This candidate has not been shortlisted");
                     }
                 });
        });



        $('.winner').click(function () {

            @*swal({
                title: "Select Winner",
                text: "Are you sure you want to select this candidate as Winner?",
               type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#88a364",
                confirmButtonText: "Yes!",
                cancelButtonText: "No!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                 function (isConfirm) {
                     if (isConfirm) {
                         debugger;
                         var nominationIdToShortlist = $("#nominationId").val();
                         $.ajax({
                             type: 'post',
                             url: '@Url.Action("SelectWinner", "Review")',
                             data: JSON.stringify({ nominationId: nominationIdToShortlist }),
                             contentType: "application/json; charset=utf-8",
                             success: function (data) {
                                 swal({
                                     title: "Winner Selected",
                                     showCancelButton: false,
                                     confirmButtonColor: "#88a364",
                                     confirmButtonText: "Ok"
                                 },
                                 function () {
                                     if (isConfirm) {
                                         window.location.href = '@Url.Action("ReviewFeedbackList", "Review")';
                                     }
                                 });
                             }
                         });
                     } else {
                         swal("Cancelled", "This candidate has not been selected as Winner");
                     }
                 });
        });*@


            //swal({
            //    input: 'textarea',
            //    showCancelButton: true
            //}).then(function (text) {
            //    if (text) {
            //        swal(text);
            //    }
            //});



            swal({
                title: "Select Winner",
                text: "Are you sure you want to select this candidate as Winner?",
                type: "input",
                confirmButtonText: "Yes!",
                cancelButtonText: "No!",
                showCancelButton: true,
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "To be shared across the company",
            },
            function (inputValue)
            {
                if (inputValue === false) {
                                      
                }
                else if (inputValue === "")
                {
                    swal.showInputError("You need to write something!");
                    return false
                }
                else {
                    var nominationIdToShortlist = $("#nominationId").val();
                    $.ajax({
                        type: 'post',
                        url: '@Url.Action("SelectWinner", "Review")',
                        data: JSON.stringify({ nominationId: nominationIdToShortlist, winningComment: inputValue }),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            swal({
                                title: "Winner Selected",
                                showCancelButton: false,
                                confirmButtonColor: "#88a364",
                                confirmButtonText: "Ok"
                            },
                            function (isConfirm) {
                                if (isConfirm) {
                                    window.location.href = '@Url.Action("ReviewFeedbackList", "Review")';
                                }
                            });
                        }
                    });
                }

               
            });

        });
    });
</script>
