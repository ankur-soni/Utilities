@model List<Silicus.Ensure.Web.Models.QuestionModel>
@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "Question Bank";
    var role = Silicus.Ensure.Web.MvcApplication.getCurrentUserRoles();
}
<script>
    $(window).load(function (){
        userRole = @Html.Raw(Json.Encode(role));
        if ((userRole.indexOf("@Silicus.Ensure.Models.Constants.RoleName.Panel.ToString()")<0)) {
            $('#ReviewAllQuestions').hide();
        }
    })

</script>

<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary" id="menu-toggle" style="margin-left:15px;border-radius:0px;" href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>

    <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
        <h1 class="dashboard-name">Question Bank</h1>
    </div>
</div>

<div class="box M-T15">
    <div class="toolbar">
        <div class="row">
            <div class="col-sm-12">
                <div class="col-sm-4 col-md-4 col-lg-3 M-T15 M-B15">
                    <div class="input-group">
                        <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                        <input type="text" class="form-control" id='FieldFilter' placeholder="Search" style="height: 38px;">
                        <span class="input-group-btn">
                            <button id="QuestionSearchRefresh" class="btn btn-default" style="border:1px solid #0070B9!important" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12 M-B15">
                <div class="col-sm-4 col-md-3 col-lg-2">
                    <span style="font-weight:bold;" class="themeColorBlue labelAlignMid">Question type</span>

                    @(Html.Kendo().DropDownList()
                                                .Name("QuestionType")
                                                .DataTextField("Text")
                                                .DataValueField("Value")
                                                .Events(e => e.Change("QuestionTypeChange"))
                                                    .BindTo(new List<SelectListItem>
                                                    () {
                                                        new SelectListItem(){
                                                    Text="All",
                                                    Value=""
                                                    },
                                                    new SelectListItem(){
                                                    Text="Objective",
                                                    Value="Objective"
                                                    },
                                                    new SelectListItem(){
                                                    Text="Practical",
                                                    Value="Practical"
                                                    }
                                                    }).HtmlAttributes(new { style = "width: 100%", @class = "M-T5" }))
                </div>
                <div class="col-sm-4 col-md-3 col-lg-2">
                    <span style="font-weight:bold;" class="themeColorBlue labelAlignMid">Proficiency level</span>

                    @{
                        var levelList = new List<SelectListItem>();
                        levelList.Add(new SelectListItem() { Text = "All", Value = "" });
                        foreach (var level in Enum.GetValues(typeof(Silicus.Ensure.Web.Models.ProficiencyLevel)))
                        {
                            levelList.Add(new SelectListItem() { Text = level.ToString(), Value = level.ToString() });
                        }
                    }
                    @(Html.Kendo().DropDownList()
                                                        .Name("ProficiencyLevelDropDown")
                                                        .DataTextField("Text")
                                                        .DataValueField("Value")
                                                        .Events(e => e.Change("ProficiencyLevelDropDownChange"))
                                                        .BindTo(levelList)
                                                                .HtmlAttributes(new { style = "width: 100%", @class = "M-T5" })
                    )
                </div>
                <div class="col-sm-5 col-md-5 col-lg-4 cust-mar">
                    <a href='/QuestionBank/AddQuestions?questionId=0' class='k-button k-button-icontext k-grid-add'><span class='k-icon k-add'></span>Add question</a>
                </div>
            </div>
        </div>
    </div>
    <div class="kendogrid">
        <div class="table-responsive">
            @if (Request.IsAuthenticated)
            {
                @(Html.Kendo().Grid(Model).Name("questionGrids")
                             .Columns(columns =>
                             {
                                 columns.Bound(q => q.Id).Title("Id").Width(100);
                                 columns.Bound(q => q.QuestionDescription).Title("Question description").Width(400);
                                 columns.Bound(q => q.QuestionType).Width(200);
                                 columns.Bound(q => q.TechnologyName).Title("Technology").Width(200);
                                 columns.Bound(q => q.StatusName).Title("Status").Width(400);
                                 //.ClientGroupHeaderTemplate("#= value# (#=count#)").Hidden(true);
                                 columns.Bound(q => q.Tag).Title("Tags").Width(400);
                                 columns.Bound(q => q.ProficiencyLevel).Title("Proficiency level").Width(400);
                                 columns.Bound(q => q.Id).ClientTemplate(@"
                                                <a href='/QuestionBank/EditQuestion?questionId=#=Id#' class='k-button M-T4'>Edit</a>
                            <a class='k-button M-T4' href='\\#' onclick='ConfirmDeleteQuestionRow(event)'>Delete</a>
                                               ").Title("Actions").Width(400).Sortable(false);
                                 //.ClientGroupHeaderTemplate("#= value# (#=count#)").Hidden(true);
                             })
                              .DataSource(dataSource => dataSource.Ajax()
                              //.Group(group => group.Add(p => p.StatusName)).Aggregates(aggr => aggr.Add(p => p.StatusName).Count())
                              .Sort(sort => sort.Add("Id").Ascending()).Model(model =>
                              {
                                  model.Id(p => p.Id);
                                  model.Field(p => p.Id).Editable(false);
                              })
                                 .Destroy(delete => delete.Action("DeleteQuestion", "QuestionBank"))
                                 .PageSize(10)
                                 .ServerOperation(false)
                                    ).Pageable(p => p.PageSizes(true))
                                     .Sortable()
                                     .Resizable(resizing => resizing.Columns(true))
                )}
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('.page-wrapper').css('padding-bottom', '60px');
        $("#messageDiv").hide();
        $('#ReviewAllQuestions').on('click', ReviewAllQuestions);
        SetNavigationMenuActive('QuestionBank');
        // Kendo Grid Filter (Search)
        $("#FieldFilter").keyup(function () {
            var value = $("#FieldFilter").val();
            var grid = $("#questionGrids").data("kendoGrid");
            var pageSize = grid.dataSource.pageSize();
            if (value) {
                var filter = { logic: "or", filters: [] };
                filter.filters.push({ field: "QuestionDescription", operator: "contains", value: value });
                filter.filters.push({ field: "QuestionType", operator: "contains", value: value });
                filter.filters.push({ field: "Tag", operator: "contains", value: value });
                filter.filters.push({ field: "ProficiencyLevel", operator: "contains", value: value });
                grid.dataSource.query({ filter: filter });
                grid.dataSource.sort({ field: "QuestionDescription", dir: "asc" });
                grid.dataSource.pageSize(pageSize);
            } else {
                grid.dataSource.filter({});
            }
        });

        $("#QuestionSearchRefresh").click(function (e) {
            e.preventDefault();
            var datasource = $("#questionGrids").data("kendoGrid").dataSource;
            //Clear filters:
            datasource.filter([]);
            $("#FieldFilter").val('');
        });

        hideCustomLoader();
    });

    function ProficiencyLevelAndQuetiontype() {
        var queType = $("#QuestionType").val();
        var level = $("#ProficiencyLevelDropDown").val();

        var grid = $("#questionGrids").data("kendoGrid");
        var filterArray = new Array();

        filterArray.push({ field: "QuestionType", operator: "contains", value: queType });
        filterArray.push({ field: "ProficiencyLevel", operator: "contains", value: level });
        grid.dataSource.filter(filterArray);
    }
    // Display Question By Question Type.
    function QuestionTypeChange() {
        ProficiencyLevelAndQuetiontype();
    }

    function ProficiencyLevelDropDownChange() {
        ProficiencyLevelAndQuetiontype();
    }

    function QuestionPerPageChange() {
        var value = $("#QuestionPerPage").val();
        var grid = $("#questionGrids").data("kendoGrid");
        grid.dataSource.pageSize(value);
        grid.refresh();
    }

    // Delete Question
    function ConfirmDeleteQuestionRow(e) {
        var tr = $(e.target).closest("tr");
        var data = $("#questionGrids").data('kendoGrid').dataItem(tr);
        deleteGridRow('questionGrids', data);

    }


    function deleteGridRow(gridId, data) {
        swal({
            title: "Are you sure,",
            text: "Are you sure, you want to delete this record?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: true,
            closeOnCancel: true
        },
        function (isConfirm) {
            if (isConfirm) {
                grid = $("#" + gridId).data("kendoGrid");
                grid.dataSource.remove(data);
                grid.dataSource.sync();
                ShowMessage("Question deleted successfully.", 1);
            }
        });
    }

    function ReviewAllQuestions(e) {
        hideCustomLoader();
        $.ajax({
            url: '/questionbank/reviewquestion?questionid=2',
            success: function (data) {
                hideCustomLoader();
                $('#ReviewQuestionModal').modal('show');
                $('#ReviewQuestionModal .modal-body').html("");
                $('#ReviewQuestionModal .modal-body').html(data);
                // settimeout(showdata(data), 9000);
            }
        });
    }

    function  ApproveQuestion(){
        var questionId=$('#QuestionId').attr('data-value');
        alert(questionId);
    }

</script>
@*<div id="dialog" title="Create Album" style="overflow: hidden;"></div>*@
<div class="modal fade" id="ReviewQuestionModal" role="dialog" style="z-index:99999" tabindex='-1' data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div class="popup-header-wrapper dashboard-header-bgcolor mainheading txt-color-white">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="">
                                <span class="font24">Configuration</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <div class="popup-cancel-btn">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-lg-4 col-sm-4 pull-right">
                                <div id="saveRehireEmployeeConfig">
                                    <button id="ApproveQuestion" type="button" class="save bg-red form-group">
                                        <i class="fa fa-save" onlick="ApproveQuestion()"></i> Approve
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
