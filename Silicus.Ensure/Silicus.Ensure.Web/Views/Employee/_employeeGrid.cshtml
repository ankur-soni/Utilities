@model Silicus.Ensure.Models.UserBusinessModel
@using Silicus.Ensure.Models.Constants;
@using Kendo.Mvc.UI;
@using System.Linq
@{
    ViewBag.Title = "_employeeGrid";
}


<div class="table-responsive">
    @if (Request.IsAuthenticated)
    {
        @(Html.Kendo().Grid<Silicus.Ensure.Web.Models.UserDetailViewModel>().Name("UserGrids")
         .Columns(columns =>
         {
             columns.Bound(c => c.FullName).Title("Name").Width(400);
             columns.Bound(p => p.RoleName).Title("Role name").Width(450);
             columns.Bound(p => p.EmployeeId).Title("EmployeeId").Width(450);
             columns.Bound(p => p.Email).Width(550);
             columns.Bound("").ClientTemplate(@"<a onclick=showTest('#=UserId#','New') style='cursor:pointer'>Assign test</a>").Title("Assign Test").Width(500).Sortable(false);
             //columns.Bound(c => c.RoleId).Title("Action").Sortable(false).Width(650).ClientTemplate(" <div> #if(RoleName == 'Recruiter'){#<input type='button' style='width:92px;font-size:14px;text-transform:initial;' class='btn green' onclick='assignType(event)' value='Manage type'>#}else if(RoleName == 'Panel') { #<input type='button' style='font-size:14px;text-transform:initial;' class='btn green' onclick='assignPanel(event)' value='Manage panel'># }else if(RoleName == 'Candidate') { #<input type='button' value='z'># } #");

         })
            .DataSource(dataSource => dataSource.Ajax().Model(model =>
            {
                model.Id(p => p.Email);
                model.Field(p => p.Email).Editable(false);
            })

                                                                      .Read(read => read.Action("GetUserDetails", "Employee")).ServerOperation(false)
                                                              //.Create(update => update.Action("CreateUser", "User"))
                                                              //.Update(update => update.Action("UpdateUser", "User"))
                                                              //.Destroy(update => update.Action("DeleteUser", "User"))
                                                              .PageSize(10))

            .Pageable(pager => { pager.PageSizes(true); })
            .Sortable()
            .Resizable(resizing => resizing.Columns(true))
        )
    }
</div>
<div id="myEmpModal" class="modal fade" data-backdrop="static" role="dialog" tabindex="-1" data-width="760" aria-hidden="false" style="display: block; width: 760px; margin-left: -380px; margin-top: -288.5px;">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 id="assignTestHeader" class="modal-title">Assign Employee Test</h4>
    </div>
    <div class="modal-body" id="EmployeeInfo">

    </div>
    <div class="modal-footer">
        <button type="submit" id="Savebtn" style="width:70px;" class="btn green">Save</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $(function () {
            $("#Savebtn").bind("click", function () {
                showCustomLoader();
                var chkCheck = false;
                $('input:checkbox').each(function () {
                    if ($(this).is(':checked')) {
                        chkCheck = true;
                    }
                });
                if (chkCheck) {
                    var uId = $("#CurrentUser").val();
                    var IsReAssign = $("#IsReAssign").val();
                    var checkvals = $("[class='check']:checked").attr("value")

                    $('#myModal').find('input[type=checkbox]:checked').removeAttr('checked');
                    $.ajax({
                        type: 'post',
                        async: false,
                        url: "/Employee/AssignEmployeeSuite",
                        cache: false,
                        data: { SuiteId: checkvals, UserId: uId, IsReAssign: IsReAssign },
                        contenttype: "application/json; charset=utf-8",
                        success: function (returndata) {
                            if (returndata == 1) {
                                $('#myModal').fadeOut();
                                ShowMessage("Test suite assigned successfully.", 1);
                                $('#userGrids').data('kendoGrid').dataSource.read();
                                $('#userGrids').data('kendoGrid').refresh();
                                $(".loader-overlay").hide();
                            }
                        },
                        error: function (er) {
                            $(".loader-overlay").hide();
                        }
                    });
                }
                else {
                    toastr.error('Please select at least one test suite.')
                    $(".loader-overlay").hide();
                }
            });

        });
    });
    function showTest(UserId, TestStatus) {
        if (TestStatus == '@CandidateStatus.New.ToString()') {
            showCustomLoader();
            $('#assignTestHeader').text('Assign Employee Test');
            $.ajax({
                type: 'post',
                async: false,
                url: "/Employee/EmployeeSuit",
                cache: false,
                data: { UserId: UserId },
                contenttype: "application/json; charset=utf-8",
                success: function (data) {
                    $("#EmployeeInfo").html(data);
                    $('#myEmpModal').fadeIn();
                    $('#myEmpModal').modal();
                }
            });
        }
        else {
            alert("Sorry! Can't perform this operation.");
            $(".loader-overlay").hide();
        }
    }
</script>