@model List<Silicus.Ensure.Web.Models.QuestionModel>

@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "Question Bank";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary" id="menu-toggle" style="margin-left:15px;border-radius:0px;" href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>

    <div class="col-lg-10 col-md-10 col-sm-10">
        <h1 class="dashboard-name">Question bank</h1>
    </div>
</div>

<div class="row">
    <div class="alert alert-success" id="messageDiv">
        <span id="messageContent"></span>
    </div>
    <div class="col-sm-12">
        <div class="box M-T15 M-B60">
        <div class="kendogrid">


            <div>
                @{

                    Model.ForEach(y => y.QuestionDescription = Silicus.Ensure.Web.MvcApplication.HtmlToPlainText(y.QuestionDescription));
                }

                @if (Request.IsAuthenticated)
                {
                    @(Html.Kendo().Grid(Model).Name("questionGrids")
                         .Pageable(pager => { pager.PageSizes(true); })
         .Columns(columns =>
              {
                  columns.Bound(q =>q.QuestionDescription).Width(200);
                  columns.Bound(q => q.QuestionType).Width(100);
                  columns.Bound(q => q.Tag).Title("Tags").Width(150);
                  columns.Bound(q => q.ProficiencyLevel).Width(100);
                  columns.Bound(q => q.Id).ClientTemplate(@"
                    <a href='/QuestionBank/EditQuestion?questionId=#=Id#' class='k-button'>Edit</a>
                    <button onclick='DeleteQuestion(#=Id#,this)' class='k-button '>Delete</button>").Title("Actions").Width(150).Sortable(false);
              })
              .ToolBar(toolbar =>
              {
                  toolbar.Template(@<text>
                            
                        
                            
            <div class="M-B15">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-4 col-md-4 col-lg-3 M-T15 M-B15">
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                    <input type="text" class="form-control" id='FieldFilter' placeholder="Search">
                                    <span class="input-group-btn">
                                        <button id="QuestionSearchRefresh" class="btn btn-default" style="height:20px!important;border:1px solid #0070B9!important" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                    </span>
                                </div>
                            </div>
                        </div>
                            </div>
                        
                                
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="col-sm-1 col-md-1 col-lg-1">
                                <span style="font-weight:bold;" class="themeColorBlue labelAlignMid">Type</span>
                            </div>
                            <div class="col-sm-2 col-md-2 col-lg-1">
                                @(Html.Kendo().DropDownList()
                            .Name("QuestionType")
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .Events(e => e.Change("QuestionTypeChange"))
                                .BindTo(new List<SelectListItem>
                                () {
                                    new SelectListItem(){
                                Text="All",
                                Value=""
                                },
                                new SelectListItem(){
                                Text="Objective",
                                Value="Objective"
                                },
                                new SelectListItem(){
                                Text="Practical",
                                Value="Practical"
                                }
                                }).HtmlAttributes(new { style = "width: 100%" }))
                            </div>
                            <div class="col-sm-1 col-md-1 col-lg-1">
                                <span style="font-weight:bold;" class="themeColorBlue labelAlignMid">Proficiency level</span>
                            </div>
                            <div class="col-sm-2 col-md-2 col-lg-1">
                                @{
                                    var levelList = new List<SelectListItem>();
                                    levelList.Add(new SelectListItem() { Text = "All", Value = "" });
                                    foreach (var level in Enum.GetValues(typeof(Silicus.Ensure.Web.Models.ProficiencyLevel)))
                                    {
                                        levelList.Add(new SelectListItem() { Text = level.ToString(), Value = level.ToString() });
                                    }
                                }
                                @(Html.Kendo().DropDownList()
                                    .Name("ProficiencyLevelDropDown")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .Events(e => e.Change("ProficiencyLevelDropDownChange"))
                                    .BindTo(levelList)
                                    .HtmlAttributes(new { style = "width: 100%" })
                                )
                                        </div>
                            <div class="col-sm-3 col-md-3 col-lg-2 cust-mar">
                                            <a href='/QuestionBank/AddQuestions?questionId=0' class='k-button k-button-icontext k-grid-add'><span class='k-icon k-add'></span>Add question</a>
                            </div>
                        </div>
                    </div>

               

                            </div>
                                
                </text>);
              })
                                                                                                                                                                                                                                                                                                                                                                                                                                                .Resizable(resizing => resizing.Columns(true))
                                                                                                                                                                                                                                                                                                                                                                                                                                .Sortable(sorting => sorting.Enabled(true))
                                                                                                                                                                                                                                                                                                                                                                                                                                .Reorderable(reorder => reorder.Columns(true))
                                                                                                                                                                                                                                                                                                                                                                                                                                .Pageable()
                                                                                                                                                                                                                                                                                                                                                                                                                                .DataSource(dataSource => dataSource
                                                                                                                                                                                                                                                                                                                                                                                                                                .Ajax()
                                                                                                                                                                                                                                                                                                                                                                                                                                .PageSize(10)
                                                                                                                                                                                                                                                                                                                                                                                                                                .ServerOperation(false)
                                                                                                                                                                                                                                                                                                                                                                                                                                ))
                }
            
</div>
    

        </div>
    </div>
</div>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="msgMain">Success!</span></h4>
            </div>
            <div class="modal-body">
                <p id="msgContent">Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button id="btnModalOK" type="button" class="btn btn-default" data-dismiss="modal" onclick="OnOK();">OK</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>

    </div>
</div>

<script>
    $(document).ready(function () {

        $("#messageDiv").hide();

        SetNavigationMenuActive('QuestionBank');
        // Kendo Grid Filter (Search)
        $("#FieldFilter").keyup(function () {
            var value = $("#FieldFilter").val();
            var grid = $("#questionGrids").data("kendoGrid");
            var pageSize=grid.dataSource.pageSize();
            if (value) {
                var filter = { logic: "or", filters: [] };
                filter.filters.push({ field: "QuestionDescription", operator: "contains", value: value });
                filter.filters.push({ field: "QuestionType", operator: "contains", value: value });
                filter.filters.push({ field: "Tag", operator: "contains", value: value });
                filter.filters.push({ field: "ProficiencyLevel", operator: "contains", value: value });
                grid.dataSource.query({ filter: filter });
                grid.dataSource.sort({ field: "QuestionDescription", dir: "asc" });
                grid.dataSource.pageSize(pageSize);
            } else {
                grid.dataSource.filter({});
            }
        });
        
        $("#QuestionSearchRefresh").click(function (e) {
            e.preventDefault();
            var datasource = $("#questionGrids").data("kendoGrid").dataSource;
            //Clear filters:
            datasource.filter([]);
            $("#FieldFilter").val('');
        });
    });

    function ProficiencyLevelAndQuetiontype()
    {
        var queType = $("#QuestionType").val();
        var level = $("#ProficiencyLevelDropDown").val();

        var grid = $("#questionGrids").data("kendoGrid");
        var filterArray = new Array();

        filterArray.push({ field: "QuestionType", operator: "contains", value: queType });
        filterArray.push({ field: "ProficiencyLevel", operator: "contains", value: level });
        grid.dataSource.filter(filterArray);
    }
    // Display Question By Question Type.
    function QuestionTypeChange() {
        ProficiencyLevelAndQuetiontype();
    }

    function ProficiencyLevelDropDownChange() {
        ProficiencyLevelAndQuetiontype();
    }

    function QuestionPerPageChange() {
        var value = $("#QuestionPerPage").val();
        var grid = $("#questionGrids").data("kendoGrid");
        grid.dataSource.pageSize(value);
        grid.refresh();
    }

    // Delete Question
    var deleteID = null;
    var deleteTh = null;
    function DeleteQuestion(id, th) {
        deleteID = id;
        deleteTh = th;

        $("#myModal").modal();
        $("#msgMain").text("Warning!");
        $("#msgContent").text("Are you sure, you want to delete this record?");
        //$("#btnModalOK").show();
    }

    function OnOK() {
        $.ajax({
            url: '/QuestionBank/DeleteQuestion',
            dataType: "json",
            type: "DELETE",
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ questionId: deleteID }),
            success: function (data) {
                if (data == 1) {
                    var grid = $("#questionGrids").data("kendoGrid");
                    grid.removeRow($(deleteTh).closest('tr'));
                    ShowMessage("Question deleted successfully.", 1);
                }
            },
            error: function () {
                ShowMessage("Problem occured.", 0);
            }
        });
    }

</script>
