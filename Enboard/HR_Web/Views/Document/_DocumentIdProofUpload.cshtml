@using HR_Web.Utilities;
@model Models.DocumentDetailListViewModel
@{
    IEnumerable<Data.DocumentDetail> _documentDetailList;
    IEnumerable<Data.Master_Document> _Master_DocumentListIDProof = Model.Master_DocumentList;
}
<style>
    divUploadClass {
        display: block;
    }

    divUploadAsAddressCheckbox {
        display: block;
    }
     input[type=checkbox] {
        position: relative;
        vertical-align: middle;
        bottom: 1px;
    }     
</style>

@using (Ajax.BeginForm("Upload", "Document", new AjaxOptions { HttpMethod = "POST" }, null, new { enctype = "multipart/form-data" }))
{
    <ul class="docList">
        @Html.HiddenFor(m => m.IdProofFormStatus)
        @{
            var docs = _Master_DocumentListIDProof.Where(t => t.DocCatID == Constant.DocumentCategory.AddressProof);
            bool anyPassportDocAsAddressProof = docs.Any(t => t.DocumentDetails.Any(b => b.DocumentID == Constant.AddressProof.Passport && b.IsActive == true));
        }
        @foreach (var item in _Master_DocumentListIDProof.Where(x => x.DocCatID == Constant.DocumentCategory.IdProof).AsQueryable())
        {

            var isPassportAvailable = item.Document == "Passport" && !String.IsNullOrEmpty(Model.HavePassport);
            if (item.DocumentID != Constant.IDProof.ValidWorkVISA)
            {
                <li>
                    <h6 class="docName">
                        @item.Document;
                        @if (isPassportAvailable || item.DocumentID == Constant.IDProof.PANCard)
                        {
                        <span style="color:red">*</span>
                        }
                        @if (isPassportAvailable)
                        {
                        <br />
                        <span class="divUploadAsAddressCheckbox">
                            <label class="uploadCheckBoxLabel">Use as address proof</label>
                            @UploadCheckBox(!item.DocumentDetails.Any(t => t.DocumentID == Constant.IDProof.Passport && t.IsActive == true),
                                anyPassportDocAsAddressProof)                            
                        </span>
                        }


                    </h6>

                    <ul class="docUpload">
                        <li>
                            <span class="userNote"><i class="fa fa-certificate" aria-hidden="true"></i> You can upload images(jpg, jpeg) and documents(pdf, doc, docx) files.</span>

                            <div id="@("divUpload" + item.DocumentID)" class="btn btn-primary btn-upload btn-sm pull-right divUploadClass @(isPassportAvailable ? "divPassportUploadAsId":"") ">
                                <span>Upload</span>
                                <input id=@("Upload" + item.DocumentID) type="file" name="file" accept="image/jpg,image/jpeg,application/pdf,application/msword,.docx" onchange="GetFilesNames(this,'@item.DocCatID','@item.DocumentID','','','@item.Document')" />
                            </div>
                        </li>
                    </ul>

                    @{_documentDetailList = item.DocumentDetails.Where(x => x.UserID == ViewBag.userId && x.IsActive == true && x.DocumentID == item.DocumentID).AsQueryable();}
                    @if (_documentDetailList.Any())
                    {

                        <ul class="docDescription">
                            @foreach (var itemDetails in _documentDetailList)
                            {
                                if (item != null)
                                {


                                    <li>
                                        <i class="fa fa-check-circle-o" aria-hidden="true"></i>
                                        <span class="uploadName @(item.DocumentID == Constant.IDProof.PANCard ? "mand idproofdoc" : string.Empty)">
                                            <a style="cursor:pointer;" title="View Document" onclick="fnViewDoc(@itemDetails.DocDetID,'@itemDetails.FilePath','@itemDetails.DocumentName')">@Html.Raw(itemDetails.DocumentName)</a>
                                        </span>
                                        <a href="#" class="removeDoc pull-right" onclick="Reset('@itemDetails.DocDetID','','@itemDetails.EmploymentDetID');"> Remove</a> <span class="uploadedOn pull-right">@itemDetails.UpdatedDate</span>
                                        @if (itemDetails.DocumentID == Constant.IDProof.Passport)
                                        {
                                            <input type="hidden" value="@itemDetails.DocDetID" id="hidDocDetIDProof" />
                                            <input type="hidden" id="hidstatusIDProof" />
                                        }
                                    </li>
                                }
                            }
                        </ul>
                    }
                </li>
                            }

                        }
    </ul>
                        }
@helper UploadCheckBox(bool noDocInIdProof, bool anyPassportDocAsAddressProof)
{
    if (noDocInIdProof)
    {
        @Html.CheckBox("IsAddressProof", false, new { @disabled = "disabled" })
    }
    else if (!anyPassportDocAsAddressProof)
    {
        @Html.CheckBox("IsAddressProof", false)
    }
    else if ((Model.IsIdProof && anyPassportDocAsAddressProof) || anyPassportDocAsAddressProof)
    {
        @Html.CheckBoxFor(m => m.IsAddressProof, new { @disabled = "disabled" })
    }
    else
    {
        @Html.CheckBoxFor(m => m.IsAddressProof)


    }
}