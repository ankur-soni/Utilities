@model Silicus.Ensure.Web.Models.Employee.EmployeeTestResultViewModel
@using Silicus.Ensure.Web.Models.Employee;
@using Kendo.Mvc.UI;
@using System.Linq
@{
    ViewBag.Title = "Obtained Marks";
}

<div class="row">
    <div class="col-sm-12">
        <h1 class="page-title">
           Employee Test Result List
        </h1>
    </div>
</div>
<script>
    $(document).ready(function () {
        SelectedMenu('#emp-mark-test');
        $("#empsubmenu").css("display", "block");
        $("#employee-link a span.arrow").addClass("open");
        SetNavigationMenuActive('Marksheer');
    });

    function KendoVauesFilterDropdown(args) {
        var data = [
                        { text: "Test assigned", value: "2" },
                        { text: "Test submitted", value: "3" },
                        { text: "Under evaluation", value: "4" }
        ];
        args.element.kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: data,
            autoBind: false,
            valuePrimitive: true,
            
        });
    }
</script>

<div class="table-responsive">
    @if (Request.IsAuthenticated)
    {
        @(Html.Kendo().Grid<Silicus.Ensure.Web.Models.Employee.EmployeeTestResultViewModel>().Name("empTestResultGrids")
         .Columns(columns =>
         {

             columns.Bound(c => c.TestSuitName).Title("Test Name");
             columns.Bound(p => p.EmpName).Title("Emp name");
             columns.Bound(p => p.EmployeeId).Title("EmployeeId");
             columns.Bound(p => p.MaxScore).Title("Total Marks");
             columns.Bound(p => p.MarksObtained);
             columns.Bound(p => p.AttemptDate).Format("{0:dd-MMM-yyyy hh:mm:ss tt}").Filterable(false);
             columns.Bound(p => p.StatusId).ClientTemplate(@"
                                                                        #if(StatusId==2){#
                                                                            Test assigned
                                                                        #}
                                                                        else if(StatusId==3) {#
                                                                            Test submitted
                                                                        #}
                                                                        else if(StatusId==4) {#
                                                                            Under evaluation
                                                                        #}
                                                                        else if(StatusId==7) {#
                                                                           On hold
                                                                        #}
                                                                        else{#
                                                                            #=StatusId#
                                                                        #}
                                                                        #").Title("Status").Width(250).Filterable(f => f.Cell(c => c.Operator("eq")
                .Template("KendoVauesFilterDropdown")));

         })
            .DataSource(dataSource => dataSource.Ajax().Model(model =>
            {
                model.Id(p => p.TestSuitId);
                model.Field(p => p.EmployeeId).Editable(false);

            }).Group(g => g.Add(c => c.TestSuitName))

            .Read(read => read.Action("GetTestSuitResult", "Employee")).ServerOperation(false)
            
            .PageSize(100))
            .Pageable(pager => { pager.PageSizes(false); })
            .Sortable()
            .Groupable()
            .HtmlAttributes(new { style = "height: 700px;" })
             .Scrollable(scrollable => scrollable.Virtual(true))
              .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
            .Resizable(resizing => resizing.Columns(true))
        )
    }
</div>