@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "ShowAllProductBacklog";
}



<div class="row white-bg header-row">
    <nav class="" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary" id="menu-toggle" style="margin-left:15px;" href="#"><i class="fa fa-bars"></i> </a>
        </div>
    </nav>

    <div class="col-lg-11 col-md-11 col-sm-11">
        <h1 class="dashboard-name">Product Backlog</h1>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="box">

            @(Html.Kendo().Grid<Silicus.Reusable.Web.Models.ViewModel.ProductBacklogViewModel>
                ()
                .Name("productBacklogs")
                .DataSource(dataSource => dataSource
                .Ajax()
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.Title).Editable(false);
                    model.Field(p => p.TimeAllocated).Editable(false);
                    model.Field(p => p.TimeSpent).Editable(false);
                    model.Field(p => p.State).Editable(false);
                    model.Field(p => p.Assignee).Editable(false);

                })
                .Read(read => read.Action("GetProductBacklogs", "ProductBacklog"))
                .PageSize(20)
                )

                .Columns(columns =>
                {
                    columns.Bound(p => p.Id).Width(10);
                    columns.Bound(p => p.Title).Width(50);
                    columns.Bound(p => p.Description).Width(50);
                    columns.Bound(p => p.Assignee).Width(50).Title("Assigned To");
                    columns.Bound(p => p.TimeAllocatedString).Width(10).Title("Time Allocated (Hrs)");
                    columns.Bound(p => p.TimeSpentString).Width(10).Title("Time Spent (Hrs)");
                    columns.Bound(p => p.State).Width(10);
                    columns.Command(command =>
                    {
                        command.Custom("Accept");
                        command.Custom("Assign");
                        command.Custom("Update");
                    }).Width(40).Title("Actions");
                })
                 .Scrollable()
                 .Resizable(resize => resize.Columns(true))
                .HtmlAttributes(new { style = "height: 750px;" })
                .Sortable()
                .Pageable(pageable => pageable
                .Refresh(true))
                .Editable(ed => ed.Mode(GridEditMode.InLine))
            )

        </div>
    </div>
</div>
